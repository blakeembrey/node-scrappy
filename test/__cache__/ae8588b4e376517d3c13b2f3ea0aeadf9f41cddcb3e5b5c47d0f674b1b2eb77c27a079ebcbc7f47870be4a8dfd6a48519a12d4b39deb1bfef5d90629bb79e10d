{"item":{"body":"<!DOCTYPE HTML>
<html lang="en">
<head>
<script src="//assets.adobedtm.com/d2f967b83a0c92b19d9b572545fdbdc3d591f6f5/satelliteLib-389760a7bc4573d6b081d36f6782b59f3c8ffb54.js"></script>
	<title>XYZprinting da Vinci 2.0 Duo FFF &#40;Fused Filament Fabrication&#41; ABS&#47;PLA Dual Nozzle 3D Printer-Newegg.com</title>
	<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	<meta name="referrer" content="always">
	<meta name="keywords" content="Newegg, Newegg.com,XYZprinting da Vinci 2.0 Duo FFF &amp;#40;Fused Filament Fabrication&amp;#41; ABS&amp;#47;PLA Dual Nozzle 3D Printer">
	<meta name="description" content="Buy XYZprinting da Vinci 2.0 Duo FFF &amp;#40;Fused Filament Fabrication&amp;#41; ABS&amp;#47;PLA Dual Nozzle 3D Printer with fast shipping and top-rated customer service.Once you know, you Newegg&amp;#33;">
	<meta property="og:image" content="http://images10.newegg.com/WebResource/Themes/2005/Nest/logo_424x210.png">
	<meta property="og:description" content="Buy XYZprinting da Vinci 2.0 Duo FFF &amp;#40;Fused Filament Fabrication&amp;#41; ABS&amp;#47;PLA Dual Nozzle 3D Printer with fast shipping and top-rated customer service.Once you know, you Newegg&amp;#33;">
	<link rel="alternate"  media="only screen and (max-width: 640px)"  href="http://m.newegg.com/Product/index?itemnumber=28-840-014"  />
	<meta name="google-translate-customization" content="d08b8c829bab9a46-ac914e23c0a3607a-g7fba27d07436db8a-e">
	<meta name="language" content="english">
	<meta name="copyright" content="&copy; 2000-2016 Newegg Inc.">
	<meta http-equiv="X-UA-Compatible" content="IE=edge">
	<meta name="robots" content="index,follow">
	<link rel="canonical" href="http://www.newegg.com/Product/Product.aspx?Item=N82E16828840014">
	<link rel="shortcut icon" type="image/x-icon" href="//images10.newegg.com/WebResource/Themes/2005/Nest/Newegg.ico">
	<link rel="stylesheet" type="text/css" href="//static.www.turnto.com/tra4_2/tra.css" />
	<link rel="stylesheet" type="text/css" href="https://fonts.googleapis.com/css?family=Open+Sans:400,300,300italic,400italic,700,700italic|Open+Sans+Condensed:300,300italic,700">
	<link rel="stylesheet" type="text/css" href="//images10.newegg.com/WebResource/Themes/2005/CSS/USA/WWWShared.Newegg.13485.0.min.css"/>
	<!--[if IE]><link rel="stylesheet" type="text/css" href="//images10.newegg.com/WebResource/Themes/2005/CSS/USA/WWWShared.Fixedie.13485.0.min.css"/><![endif]-->
	<link rel="stylesheet" type="text/css" href="//images10.newegg.com/WebResource/Themes/2005/CSS/USA/WWWShared.NoFixedie.13485.0.min.css"/>
	<link rel="stylesheet" type="text/css" href="//images10.newegg.com/WebResource/Themes/2005/CSS/USA/WWWNewProduct.13485.1.min.css"/>
	<script type="text/javascript" src="//www.newegg.com/LandingPage/ItemInfo4ProductDetail2016.aspx?Item=28-840-014"></script>
	<script type="text/javascript">var nebs = nebs||{};nebs.errors = [];window.onerror = function(){nebs.errors.push(arguments);return true;};</script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/NeweggJS/NEG.0.2.2.js"></script>
	<script type="text/javascript">(function(NEG){if(NEG && NEG.setVersion){NEG.setVersion([{"module":"Biz.Cookie","version":"12376"},{"module":"Biz.Storage","version":"13485.3"},{"module":"Biz.InvodoVideo","version":"9792"},{"module":"Biz.Items","version":"9792"},{"module":"Biz.Resource","version":"9792"},{"module":"Biz.SearchKeywords","version":"9792"},{"module":"NEG.Utility.QueryStringBuilder","version":"11847"},{"module":"NEG.Widget.History","version":"9792"},{"module":"NEG.Widget.ImageZoomer","version":"13375.1"},{"module":"NEG.Widget.Mask","version":"10825"},{"module":"NEG.Widget.RangeSlider","version":"12739.0"},{"module":"NEG.Widget.Scroll","version":"9792"},{"module":"NEG.Widget.Viewport","version":"9792"},{"module":"NEG.Widget.Popup","version":"11629"},{"module":"Widget.Switch","version":"11315"},{"module":"NEG.Widget.AutoConfigurator","version":"10825.1"},{"module":"NEG.Widget.FilterManager.Model","version":"10520"},{"module":"NEG.Widget.FilterManager.View","version":"10520"},{"module":"NEG.Widget.PropertyManager.Model","version":"10520.2"},{"module":"NEG.Widget.PropertyManager.ViewManager","version":"10520.2"},{"module":"Utility.Cookie","version":"11621.1"},{"module":"Utility.JQuery","version":"12376"},{"module":"NEG.ThirdParty.JQuery","version":"12376"},{"module":"Biz.Common.Popup","version":"13133.0"},{"module":"Biz.Common.RecentlyView2016","version":"13025.1"},{"module":"Biz.Common.RecentlyView2012","version":"13025.1"},{"module":"Biz.Product.ProductPersonalization","version":"13025.2"},{"module":"Biz.Product.MiniFeatures","version":"13025.0"}]);}})(NEG);</script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/TP_jQueryPlugin/jquery-1.10.2.min.js?purge=1"></script>
	<script type="text/javascript">if(!(typeof jQuery==='undefined')){if($===jQuery){jQuery.noConflict();}}</script>
	<script type="text/javascript">if(sessionStorage.isEDUip_Newegg!="false" && sessionStorage.isEDUip_Newegg!="true"){jQuery.ajax({type: "GET",async: true,timeout:3000,url: "//www.newegg.com/Common/Ajax/CheckEDUByIP.aspx",success: function(response){if (response) {var str = response.toString();if (str && str.indexOf("true") > -1) {window.isEDUip = "true";} else {window.isEDUip = "false";}} else {window.isEDUip = "false";}sessionStorage.isEDUip_Newegg=window.isEDUip;}});}else{window.isEDUip=sessionStorage.isEDUip_Newegg;}</script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/TP_jQueryPlugin/jquery-migrate-1.2.1.min.js"></script>
	<script type="text/javascript">var nt_serverName="E4WEB38";var CANSite="//www.newegg.ca";var DOMAIN_NAME=".newegg.com",DOMAIN_TEXT="Newegg.com";if(!window["Web"]){Web={};};Web["Config"]={Environment:{Url:{WWW:'//www.newegg.com/',Shopper:'https://secure.newegg.com/',Secure:'https://secure.newegg.com/',Content:'https://content.newegg.com/',CDN:'https://www2.newegg.com/',HttpCache:'//images10.newegg.com/WebResource/',HttpsCache:'https://a248.e.akamai.net/f/248/9241/30d/images1.newegg.com/WebResource/',HttpJSCache:'//images10.newegg.com/WebResource/',HttpsJSCache:'https://a248.e.akamai.net/f/248/9241/30d/images10.newegg.com/WebResource/',Local:'/WebResource/',Language:'en-US'},SSLPage:{Login:'https://secure.newegg.com/NewMyAccount/AccountLogin.aspx?nextpage=%2f%2fwww.newegg.com%2fProduct%2fNewProduct.aspx%3fItem%3d28-840-014',Loginout:'https://secure.newegg.com/NewMyAccount/AccountLogout.aspx',MyAccountIndex:'https://secure.newegg.com/NewMyAccount/Index.aspx',Shoppingcart:'https://secure.newegg.com/Shopping/ShoppingCart.aspx',AddTocart:'https://secure.newegg.com/Shopping/AddToCart.aspx',ActivePoint:'https://secure.newegg.com/NewMyAccount/ActivePoints.aspx',NewMyAccountAutoNotify:'https://secure.newegg.com/NewMyAccount/AutoNotify.aspx'},Path:{Images:'Themes/2005/Nest/',Scripts:'Scripts/',Css:'Themes/2005/CSS/'},Cookies:{EnableCookieNameMapping:1},AutoFillBold:{Enable:true,UseContentPage:true},IE11VersionUpgrade:true,BizUnitRegion:{Regions:[{"Code":"USA","Currencys":[{"Code":"USD","CompanyCode":1003,"CountryCode":"USA","CurrencyName":"US Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"Y","IsLocalCurrency":true,"ListPriority":1,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"}],"DisplayShortCode":"US","IsDefault":true,"Name":"United States","TwoLetterCode":"US"},{"Code":"AUS","Currencys":[{"Code":"AUD","CompanyCode":1003,"CountryCode":"AUS","CurrencyName":"Australian Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"AUD","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"Y","IsLocalCurrency":true,"ListPriority":1,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"},{"Code":"USD","CompanyCode":1003,"CountryCode":"AUS","CurrencyName":"US Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":null,"IsLocalCurrency":false,"ListPriority":2,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"}],"DisplayShortCode":"AU","IsDefault":false,"Name":"Australia","TwoLetterCode":"AU"},{"Code":"GBR","Currencys":[{"Code":"GBP","CompanyCode":1003,"CountryCode":"GBR","CurrencyName":"United Kingdom","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"Y","IsLocalCurrency":true,"ListPriority":1,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"£"},{"Code":"USD","CompanyCode":1003,"CountryCode":"GBR","CurrencyName":"US Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":null,"IsLocalCurrency":false,"ListPriority":2,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"}],"DisplayShortCode":"UK","IsDefault":false,"Name":"United Kingdom","TwoLetterCode":"GB"},{"Code":"IND","Currencys":[{"Code":"INR","CompanyCode":1003,"CountryCode":"IND","CurrencyName":"Indian Rupee","DecimalDigits":0,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"Y","IsLocalCurrency":true,"ListPriority":1,"PositivePattern":2,"Status":"A","SupportDecimal":false,"Unit":"Rs."},{"Code":"USD","CompanyCode":1003,"CountryCode":"IND","CurrencyName":"US Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"","IsLocalCurrency":false,"ListPriority":2,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"}],"DisplayShortCode":"IN","IsDefault":false,"Name":"India","TwoLetterCode":"IN"},{"Code":"IRL","Currencys":[{"Code":"EUR","CompanyCode":1003,"CountryCode":"IRL","CurrencyName":"Euro","DecimalDigits":2,"DecimalSeparator":",","ExtraUnit":"","GroupSeparator":".","GroupSizes":3,"InternalIsLocalCurrency":"Y","IsLocalCurrency":true,"ListPriority":1,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"€"},{"Code":"USD","CompanyCode":1003,"CountryCode":"IRL","CurrencyName":"US Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"","IsLocalCurrency":false,"ListPriority":2,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"}],"DisplayShortCode":"IE","IsDefault":false,"Name":"Ireland","TwoLetterCode":"IE"},{"Code":"NLD","Currencys":[{"Code":"EUR","CompanyCode":1003,"CountryCode":"NLD","CurrencyName":"Euro","DecimalDigits":2,"DecimalSeparator":",","ExtraUnit":"","GroupSeparator":".","GroupSizes":3,"InternalIsLocalCurrency":"Y","IsLocalCurrency":true,"ListPriority":1,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"€"},{"Code":"USD","CompanyCode":1003,"CountryCode":"NLD","CurrencyName":"US Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"","IsLocalCurrency":false,"ListPriority":2,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"}],"DisplayShortCode":"NL","IsDefault":false,"Name":"Netherlands","TwoLetterCode":"NL"},{"Code":"NZL","Currencys":[{"Code":"NZD","CompanyCode":1003,"CountryCode":"NZL","CurrencyName":"New Zealand Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"NZ","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"Y","IsLocalCurrency":true,"ListPriority":1,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"},{"Code":"USD","CompanyCode":1003,"CountryCode":"NZL","CurrencyName":"US Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"","IsLocalCurrency":false,"ListPriority":2,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"}],"DisplayShortCode":"NZ","IsDefault":false,"Name":"New Zealand","TwoLetterCode":"NZ"},{"Code":"POL","Currencys":[{"Code":"PLN","CompanyCode":1003,"CountryCode":"POL","CurrencyName":"Polish zloty","DecimalDigits":2,"DecimalSeparator":",","ExtraUnit":"","GroupSeparator":"","GroupSizes":3,"InternalIsLocalCurrency":"Y","IsLocalCurrency":true,"ListPriority":1,"PositivePattern":3,"Status":"A","SupportDecimal":true,"Unit":"zł"},{"Code":"USD","CompanyCode":1003,"CountryCode":"POL","CurrencyName":"US Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"","IsLocalCurrency":false,"ListPriority":2,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"}],"DisplayShortCode":"PL","IsDefault":false,"Name":"Poland","TwoLetterCode":"PL"},{"Code":"SGP","Currencys":[{"Code":"SGD","CompanyCode":1003,"CountryCode":"SGP","CurrencyName":"Singapore Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"S","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"Y","IsLocalCurrency":true,"ListPriority":1,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"},{"Code":"USD","CompanyCode":1003,"CountryCode":"SGP","CurrencyName":"US Dollar","DecimalDigits":2,"DecimalSeparator":".","ExtraUnit":"","GroupSeparator":",","GroupSizes":3,"InternalIsLocalCurrency":"","IsLocalCurrency":false,"ListPriority":2,"PositivePattern":0,"Status":"A","SupportDecimal":true,"Unit":"$"}],"DisplayShortCode":"SG","IsDefault":false,"Name":"Singapore","TwoLetterCode":"SG"}]},WWWPage:{B2BSepEnable: false,IsHomepage: false,IsProductList: false,IsNewStoreAndList: false,IsDailyDealStore: false,IsSubcategory: false,NeweggGlobalStore:'//www.newegg.com/Newegg-Global/Store',ProductListEnableRightSide:true},SyncShoppingCart:{MinicartServiceEnable:true,ItemPriceLink:'https://content.newegg.com/Common/Ajax/MiniCartService.aspx',ItemDetailLink:'https://content.newegg.com/Common/Ajax/MiniCartService.aspx?IsDetail=true',}},CookieMapping:{'NV_CONFIGURATION':['.newegg.com',86400000,'',false],'NV_PRDLIST':['.newegg.com',86400000,'',false],'NV_ADVSEARCHOPEN':['.newegg.com',86400000,'',false],'NV_CUSTOMERLOGIN':['.newegg.com',0,'',true],'NV_AFFILIATECUSTOMER':['.newegg.com',604800,'',false],'NV_HBXCM':['.newegg.com',86400000,'',false],'NV_ADVSEARCHOPEN':['.newegg.com',86400000,'',false],'NV_CONTACTUS_COOKIE':['.newegg.com',86400000,'',false],'NV_VENDOR_NEWS_LIST':['.newegg.com',86400000,'',false],'CELL_PHONE_COMBO':['.newegg.com',86400000,'',false],'CELL_PHONE_PACKAGE':['',86400000,'',false],'NV_THANKYOUTRACKCOOKIE':['.newegg.com',86400,'',false],'NV_CDICOOKIE':['.newegg.com',10800,'',false],'NV_CUSTOMERREVIEWCOOKIE':['',86400000,'',false],'NV_GOOGLE_ANALYTICS':['.newegg.com',2592000,'',false],'NV_DVINFO':['.newegg.com',0,'',false],'NV_THIRD_PARTY':['.newegg.com',2592000,'',false],'NV_NEWGOOGLE_ANALYTICS':['.newegg.com',2592000,'',false],'NV_CUSTOMERLOGININTERNALUSER':['.newegg.com',0,'',false],'NV_B2BCUSTOMERLOGIN':['.newegg.com',0,'',true],'NV_TESTCOOKIE':['.newegg.com',0,'',false],'NV_MyNeweggModule':['.newegg.com',2592000,'',false],'AB':['.newegg.com',0,'',false],'NV_SURVEY':['.newegg.com',2592000,'',false],'NV_CERTONA':['.newegg.com',86400,'',false],'NV_FV':['.newegg.com',0,'',false],'NV_WISHLIST':['.newegg.com',2592000,'',false],'NV_COUNTRY':['.newegg.com',2592000,'',false],'NV_OTHERINFO':['.newegg.com',0,'',false],'NVTC':['.newegg.com',2592000,'',false],'NV_RECENTLYVIEWEDS':['.newegg.com',2592000,'',false],'NV_SPT':['.newegg.com',0,'',false],'NV_NEWEGGCOOKIE':['.newegg.com',0,'',false],'NV_LOCALSTORAGE':['.newegg.com',86400000,'',false],'NV_NID':['.newegg.com',2592000,'',false]},SiteCookieInfo:{bizUnit:"USA",enableReformattedCookie:true,writeReformattedCookie:true},NVTC:{UTMAExpireTime:20,SiteID:"0001"},SiteCatalyst:{Enable:true},FlashTabConfig:{FlashSettings:[{"RegionCode":"AUS","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"GBR","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"IND","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"IRL","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"NLD","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"NZL","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"POL","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"SGP","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"CHN","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"TWN","ShowFlashTab":false,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":false},{"RegionCode":"USA","ShowFlashTab":true,"InternalStartTime":"2013-06-24 09:00:00","StartTime":"2013-06-24T09:00:00","RedirectToFlash":false,"BuildFlashLink":true}],Domain:"http://flash.newegg.com"},recaptchaKey:"6Ld0av8SAAAAAA_bWcLCPqT109QEfdRp0w50GCsq"};Web["Lang"]={"account":"Account Settings","activity":"Activity","addNewVehicle":"Add Vehicle","addToCartErrorMessage":"Some items cannot be added to cart.","afterInstantSavings":"after {0}{1} instant savings","anyEngine":"Any Engine","anyTrim":"Any Trim","autoEngine":"Engine","autoMake":"Make","autoModel":"Model","autoPartsFor":"AUTO PARTS FOR","autoPartsFor2016":"Select Vehicle:","autoTrim":"Trim","autoYear":"Year","buyTogetherAndSave":"Buy Together and Save","by":"By","close":"close","close1":"Close","confirmCustomerEmailAddressInvalid":"- The Confirm Email address you entered is invalid.","cons":"Cons:","correctErrorDescription":"Please correct these error(s) and re-submit","createABundle":"Create a Bundle","currencyCode":"$","customerEmailAddressInvalid":"- The Email address you entered is invalid.","customerProductReview":"Customer Product Review","dateAndTime":"Date/Time","defaultTextInSearchBox":"Keywords, Model # or Item #","defaultWishListName":"Enter new list name here","deleteGarageErrorMessage":"A network error has occurred. Please try again to remove this vehicle.","deleteGarageErrorMessageTitle":"Error","deliveryDate":"Delivery date","destination":"Destination","details":"Details","eggReviews":"{0} egg reviews","emailAddress":"Email Address","emailAddressInvalid":"Your email address is invalid","emailAddressNotMatch":"- Email addresses you input do not match.","emailFieldEmpty":"Your email field is empty","emptyShoppingCart":"Empty Shopping Cart","enterEmail":"Enter your e-mail","enterNewVehicle":"Enter a New Vehicle","enterTheKeyword":"Enter the Keyword","expectedDelivery":"Expected delivery","expiresSoon":"Expires Soon","findPartsFor":"Find Parts for","freeShipping":"Free Shipping","freeShippingBracketMark":"Free Shipping ({0})","freeShippingExclamationMark":"Free Shipping","iframeForLayout":"iframe for layout","in":"in","inputRequired":"More Information Required","inputZipCode":"Please input zip code and continue","itemNumber":"Item Number","items":"0 Items","items1":"Item(s)","items2":"Items","length":"Length:","limitMessageDescription":"- You have exceeded the 1000 characters limit in 'Message' box.","limitTextDescription":"- You have exceeded the {0} characters limit in '{1}' box.","loading":"LOADING...","location":"Location","login":"Login","login2011":"Log in or Register","loginSingnel":"Log in","logOut":"log out","manufacturerVideo":"Manufacturer Video","marketplaceSeller":"Marketplace Seller","messageInvalid":"- The Message you entered is invalid.","myAccount":"My Account","newegg":"newegg","next":"Next &raquo;","no":"No","none":"None","noOrderRecord":"No Order in the last 15 days.","notAvailable":"N/A","notFoundItemDescription":"Sorry! We have found 0 items that match your search criteria \"{0}\".","notFoundVideoDescription":"Sorry! We have found 0 video.","on":"{0} on {1}","or":"or","otherThoughts":"Other Thoughts:","ownership":"- Ownership:","packageNumber":"Package number","password":"Password","pleaseChooseAOption":"Please choose a {0}","pleaseInputValue":"- Please Input value -","pleaseSelect":"- Please select -","prev":"&laquo; Prev","pros":"Pros:","qASuccessfullySubscribed":"You've successfully subscribed this question !","qASuccessfullyUnSubscribed":"You've successfully unsubscribed this question !","qty":"Qty","qtyBoxDescription":"Please enter a numeric value in the QTY box.","quickAdddeactivated":"# is a deactivated item. Please try again with another item.","quickAddEmptyListError":"Unable to add any items to the shopping cart. Reason: Empty List.","quickAddInvalidError":"Unable to add any items to the shopping cart. Reason: Invalid item(s).","quickAddItemsAcademicError":"# is an academic edition software. You cannot use item number to add this to shopping cart or To-Buy list.","quickAddItemsBuyAlongError":"# is part of a combo deal and cannot be sold separately.  Please try again with another item.","quickAddMorethan5Items":"Your input has resulted in more than 5 items. To narrow down your search, please try again with another Item Number or Mfr. Model Number.","quickAddNotFound":"# is not found.Please review the number and try again.","quickAddoutofstock":"We are sorry. This item is currently out of stock.","quickAddPleaseSelectone":"Please select one:","quickAddSelectitems":"# is associated to multiple items.","quickAddShortage":"Currently only # in stock.","rating":"Rating + {0}","ratingIcon":"rating rating-{0}","readEggReviews":"Read {0} egg reviews","register":"Register","removeItem":"Remove item","requestErrorDescription":"Your request cannot continue because of the following error(s)","reviewedBy":"Reviewed By:","reviewersGaveThisItem":"{0} reviewers gave this item {1} of 5","sampleItemNumber":"i.e. N82E16800996056","sampleItemNumberB2B":"i.e. 9B-00-996-056","saveerror":"Save error please try agian.","saveUpTo":"Save up to $","saveWishListEmpty":"Unable to save any items for later. Reason: Empty List.","saveWishListInvalid":"Unable to save any items for later. Reason: Invalid item(s).","searchKeywords":"(keywords)","searchWithin":"Search Within","seeTerms":"See Terms","select":"Select...","selectACarrier":"- Please select a carrier -","selectanItem":"Select an Item","selectAPhone":"- Please select a phone -","selectAPlan":"- Please select a plan -","selectMaxItems":"You may select only up to 5 items at a time to compare","selectMore":"Select one more item to compare","selectYesOrNo":"Please select YES or NO.","serviceType":"Service type","shipDate":"Ship date","shippedByNewegg":"Shipped by Newegg","shippingInformation":"Shipping Information","shippingLimitations":"Shipping Limitations","shippingRestrictions":"Shipping Restrictions","shoppingCartwithItems":"Shopping Cart with Items","smartSortHelpMsg":"Try the new smart sort tool","status":"Status","studentProgram":"Student Program Eligibility","techLevel":"Tech Level:","textSearchTerms":"Text Search Terms:","thisFit":"This fits","thisNotFit":"This doesn't fit","trackingNumber":"Tracking number","uploadBy":"Upload By:","userNameInvalid":"- The Name you entered is invalid.","videoContest":"Video Contest","viewShoppingCart":"View Shopping Cart","warrantyInfo":"Warranty Info","weight":"Weight","whenYouPurchaseTheseItemTogether":"when you purchase these items together","wishlistEmptyName":"Please enter a new list name.","wishlistError":"System error, please try again.","wishlistexisting":"The title has been used, please use another one.","yes":"Yes","yourOpinionisTooLong":"Your opinion is too long.","yourPrice":"Your Price:"};</script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/Common/GgewenFramework.v1.w.12809.7.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/Common/WebApplication.v1.w.13527.0.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/Common/PageDisplayLib.v1.w.13308.11.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/Common/AutoFilledKeywords.v1.w.13556.0.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/Common/BizCommon.v1.w.13527.1.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/Common/json2.min.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/Common/swfobject.v1.5.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/WWW/Product2016.v1.w.13386.0.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/WWW/CellPhoneLib.v1.w.12809.7.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/TP_LightBox/JQueryLightbox.v1.w.2073.10.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/TP_LightBox/JQueryLightboxMouse.v1.w.2073.10.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/TP_LightBox/JQueryLightboxDrag.v1.w.2073.10.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/TP_jQueryPlugin/jquery.scrollTo-1.4.6.min.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/TP_jQueryPlugin/jquery.tools.1.2.7.min.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/Common/swiper.min.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/Common/tooltip.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/WWW/AutoConfiguratorStripe.v1.w.12877.0.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/WWW/ProductImageGallery.13375.3.e0.js"></script>
	
<!-- Begin Monetate ExpressTag Sync v8.1. Place at start of document head. DO NOT ALTER. -->
<script type="text/javascript">var monetateT = new Date().getTime();</script>
<script type="text/javascript" src="//se.monetate.net/js/2/a-f0e60b81/p/newegg.com/entry.js"></script>
<!-- End Monetate tag. -->

	<script language="javascript" type="text/javascript">Web.Caching.SyncCookie('[{\"name\":\"NV_CONFIGURATION\",\"changeCookieValues\":[{\"key\":\"RegionCode\",\"value\":\"USA\"},{\"key\":\"CurrencyCode\",\"value\":\"USD\"},{\"key\":\"DEPA\",\"value\":\"3\"}],\"expire\":0},{\"name\":\"NV_DVINFO\",\"changeCookieValues\":[{\"key\":\"PCID\",\"value\":\"Y\"}],\"expire\":0}]');</script>
	<script type="text/javascript">Web=Web||{};Web.XConfig={"subscription":{"orderFrequencys":[1,2,3,4,5,6],"learMoreLinks":"//www.newegg.com/HelpInfo/NeweggSubscriptionTerms.aspx"},"enableFinancingPayments":true,"enableEqualPayments":true,"enableEggPoint":true,"eggPointRule":{"enable":true,"hasMultiple":true,"hasPopUp":true,"isTopATag":true},"initialPercentage":5,"learnMoreLinks":"//www.newegg.com/neweggpremier","premierNewMyAccountLogin":"https://secure.newegg.com/Premier/SignIn.aspx?code=3","ironEgg":{"enable":true,"productPagePromotionLink":"//www.newegg.com/pricematch","inclueCurrentPage":true},"moreBuyingOptionCount":5,"isUSARequest":true,"isCANRequest":false,"countryCode":"USA","isDefaultRegion":true,"regionCode":{"code":"USA","name":"United States"},"secureSiteUrl":"https://secure.newegg.com","wwwSiteUrl":"//www.newegg.com","currentCurrencyInfo":{"extraUnit":"","unit":"$","decimalDigits":2,"groupSizes":3,"decimalSeparator":".","groupSeparator":",","positivePattern":0,"supportDecimal":true}}</script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/X/page/CommonLib.13126.0.js"></script>
	<script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/X/page/NewProductDetail.13485.6.js"></script>
	<script type="text/javascript">if(top.location!=self.location){top.location.replace(self.location);}</script>
	<script type="text/javascript">Biz.Product.video.isCookie('newegg');</script>
	<script type="text/javascript">Web["Config"]["RecentlyViewPrimaryItem"]='28-840-014';NEG.run(function(require){var recentlyView = require('Biz.Product.RecentlyViewItem');recentlyView.add('28-840-014',15,71056745)});Web["Config"]["IsPersonalizationEdit"]=0;</script>
<!--[if lt IE 9]><script type="text/javascript" src="//images10.newegg.com/WebResource/Scripts/USA/TP_Html5/Html5.js" ></script><![endif]-->
<script type="text/javascript">try{Biz.Common.CheckCANIP.initPopup();}catch(e){}</script>
</head>

<body  class="NEGlobal HomePage2013 HomePage2011 price2012">
	

	
	
	
    <span class="noCSS">Skip to:</span>
    <a class="skiplink" href="#startContent">Content</a> 
    <a name="startContent"><span style="display: none">|</span></a>
    <span class="noCSS">|</span> 
    <a class="skiplink" href="#footerArea">Footer</a>

	<a name="top"></a>
	<div id="visionImpaired" style="position:absolute;left:0;top:-999px;"></div>
	<div id="message2OlderBrowser">
		<p>Newegg.com - A great place to buy computers, computer parts, electronics, software, accessories, and DVDs online. With great prices, fast shipping, and top-rated customer service - once you know, you Newegg.</p>
		<p>If you are reading this message, <b>Please  <a href="//www.newegg.com/Product/NewProduct.aspx?Item=28-840-014&Local=y">click this link</a> to reload this page.(Do not use your browser's "Refresh" button).</b>  Please <a href="mailto:webmaster@newegg.com">email us</a> if you're running the latest version of your browser and you still see this message.</p>
		<p><a href="//www.newegg.com/">Newegg.com - Computer Parts, Laptops, Electronics, HDTVs, Digital Cameras and More!</a></p>
	</div>
	<noscript>
	If you see this message, your web browser doesn't support JavaScript or JavaScript is disabled. 
	Please enable JavaScript in your browser settings so Newegg.com can function correctly.
	</noscript>
	
				<script type="text/javascript">
				var neg_using_local_css=function(){var h=document.getElementById('message2OlderBrowser')['offsetHeight']-0;if(h>0){var hd=document.getElementsByTagName('head')[0];var hdrs=hd.childNodes;var ph=Web.Config.Environment.Url.Local;var css=[];var cl=Web.Config.Environment.Url.HttpCache;if(window.location.protocol=='https:'){cl=Web.Config.Environment.Url.HttpsCache;};for(var i=0;i<hdrs.length;++i){if(hdrs[i]['rel']=='stylesheet' && hdrs[i]['href'].indexOf(cl) === 0){css.push(hdrs[i]['href'].replace(cl,''));};};for(var i=0;i<css.length;++i){var el=document.createElement('link');el.rel='stylesheet';el.type='text/css';el.href=ph+css[i];console.log('the new css is:',el.href);hd.appendChild(el);};};};
				neg_using_local_css();
				</script>

	
	<!--header area begin-->
	

<header class="header">
    <div class="header-inner">
        <div class="header-logo">
            <a href="//www.newegg.com/" class="header-logo-img" title="Newegg.com - Computer Parts, Laptops, Electronics, HDTVs, Digital Cameras and More!">
                <img src="//images10.newegg.com/WebResource/Themes/2005/Nest/logo_424x210.png" alt="Newegg.com- Computer Parts, Laptops, Electronics, HDTVs, Digital Cameras and More!"></a>
            <div class="header-logo-bg"></div>
        </div>

        <!-- begin: header tabs -->
        

<div class="header-tabs">
    <ul class="header-subsites">
        <li class="header-subsite">
            <a id="guest_feedback" onclick="javascript:newegg_inhouse_feedback && newegg_inhouse_feedback.show();" style="cursor:pointer" class="header-feedback"><ins>Feedback</ins></a>        
        </li>
        
            <li class="header-subsite">
				<a href="//www.neweggbusiness.com/?utm_medium=newegg&utm_source=newegg-home&cm_mmc=ref-newegg-_-newegg-home-_-na-_-na" target="_blank">
					<img src="//images10.newegg.com/WebResource/Themes/2005/Nest/new_tab_business.png" alt="NeweggBusiness">
				</a>
            </li>
        
    </ul>
    <div class="fix"></div>
</div>

        <!-- end: header tabs -->

        <!-- begin: header top nav -->
        

<nav class="top-nav">
    <input id="hiddenOrderInfo" name="hiddenOrderInfo" type="hidden" is-update="0" value=""/>
    <input type="hidden"  id="switch_premier2016" value="True">
    <ul class="top-nav-tabs">
        
        
            <!--Region-->
            <li class="top-nav-tab has-menu flag-dropdown">
				<a href="javascript:void(0);" class="top-nav-tab-name">
                    <span style="display: none">/</span>
					<span class="top-nav-tab-icon flag us"></span>
					<ins></ins>
				</a>
                <div class="top-nav-menu">
                    <i class="fa fa-caret-down"></i><i class="top-nav-menu-arrow"></i>
                    <div class="top-nav-menu-inner">
                        <div class="top-nav-menu-title">Shipping Destination: <strong>United States</strong> </div>
                        <div class="top-nav-menu-body">
                            <div class="choose-flag">
                                <label id="NEGlobal-CountryDropdown" class="form-select form-flag-select">
                                    <i class="flag us"></i>
                                    
                                            <select title="Select a Country">
                                        
                                            <option value="USA" data-countrycode="usa" selected='selected' data-localcurrency="USD">United States</option>
                                        
                                            <option value="AUS" data-countrycode="aus"  data-localcurrency="AUD">Australia</option>
                                        
                                            <option value="GBR" data-countrycode="gbr"  data-localcurrency="GBP">United Kingdom</option>
                                        
                                            <option value="IND" data-countrycode="ind"  data-localcurrency="INR">India</option>
                                        
                                            <option value="IRL" data-countrycode="irl"  data-localcurrency="EUR">Ireland</option>
                                        
                                            <option value="NLD" data-countrycode="nld"  data-localcurrency="EUR">Netherlands</option>
                                        
                                            <option value="NZL" data-countrycode="nzl"  data-localcurrency="NZD">New Zealand</option>
                                        
                                            <option value="POL" data-countrycode="pol"  data-localcurrency="PLN">Poland</option>
                                        
                                            <option value="SGP" data-countrycode="sgp"  data-localcurrency="SGD">Singapore</option>
                                        
                                            </select>
                                        
                                    <span class="form-select-name">United States</span> <i class="fa fa-caret-down"></i>
                                </label>
                                <label id="NEGlobal-CurrencyDropdown" class="form-select">
                                    
                                            <select class="pseudo-dropdown-select" title="Select a Currency">
                                        
                                            <option value="USD" selected='selected'>$ USD</option>
                                        
                                            </select>
                                        
                                    <span class="form-select-name">$ USD</span> <i class="fa fa-caret-down"></i>
                                </label>
                                <button id="NEGlobal-UpdateButton" type="button" class="btn btn-tertiary">Update </button>
                            </div>
                        </div>
                    </div>
                </div>
            </li>
            <script type="text/javascript">Biz.Common.TopNavigation.flagPageHeader();</script>
        
        <!--Account-->
        <li class="top-nav-tab " id='usaSite'>
            
            <script type="text/javascript">Biz.Common.TopNavigation.loginPageHeader2015();</script>
        </li>
        
            <script type="text/javascript">Biz.Common.TopNavigation.specialPricePageHeader();</script>
        
        
            <li class="top-nav-tab has-menu top-premier-menu">
                <a href="javascript:void(0);" class="top-nav-tab-name"><ins>Try</ins> <i class="icon-premier icon-premier-md-gold"></i></a>
                <div class="top-nav-menu">
                    <i class="fa fa-caret-down"></i>
                    <i class="top-nav-menu-arrow"></i>
                    <div class="top-nav-menu-inner">
                        <ul class="top-nav-menu-links">
								<li>
									<div class="top-premier-menu-title">TRY NEWEGG PREMIER FOR FREE TODAY!</div>
									<p class="top-premier-menu-note"><strong>Free 30-Day Trial</strong> when you sign up for a 12-month membership. Sign up and start enjoying:</p>
								</li>
								<li class="top-nav-menu-split">
									<div class="top-premier-menu-subtitle">Expedited Shipping</div>
									<p class="top-premier-menu-note">Free 3-Day-or-sooner expedited shipping on qualifying items.</p>
									<div class="top-premier-menu-subtitle">Share Benefits</div>
									<p class="top-premier-menu-note">Add up to four friends to your account so they can enjoy your great Newegg Premier benefits.</p>
									<div class="top-premier-menu-subtitle">Free Returns with No restocking fee</div>
									<p class="top-premier-menu-note">Free shipping on returns and waived restocking fee for qualifying items.</p>									
									<div class="top-premier-menu-subtitle">Dedicated Customer Service</div>
									<p class="top-premier-menu-note">Need quick assistance? Use our private customer service line to help answer any questions or concerns.</p>
								</li>
								<li><p class="top-premier-menu-note"><a href="//www.newegg.com/neweggpremier">Learn More</a> | <a href="https://secure.newegg.com/Premier/SignIn.aspx?code=3">Sign Up Now</a></p></li>
							</ul>
                    </div>
                </div>
            </li>
        
        <!--ShoppingCart-->
        <li class="top-nav-tab" id="miniCart">
            <script type="text/javascript">prepareMiniCartInfo(true)</script>
        </li>

        <li class="top-nav-tab"><a href="https://secure.newegg.com/WishList/WishListCurrent.aspx" class="top-nav-tab-name"><i class="top-nav-tab-icon fa fa-heart"></i> <ins>Wish List</ins> </a></li>
        <li class="top-nav-tab menu-align-right has-menu"><a href="javascript:void(0);" class="top-nav-tab-name"><i class="top-nav-tab-icon fa fa-question-circle"></i> <ins>Customer Service</ins> </a>
            <div class="top-nav-menu">
                <i class="fa fa-caret-down"></i><i class="top-nav-menu-arrow"></i>
                <div class="top-nav-menu-inner">
                    <ul class="top-nav-menu-links">
                        <li><a id="headerTrackOrder" href="https://secure.newegg.com/Guest/OrderLogin.aspx?Source=1">Track An Order</a></li>
                        <li><a id="findInvoice" href="https://secure.newegg.com/Guest/OrderLogin.aspx?Source=4">Find Invoice</a></li>
                        <li><a id="headerReturnItem" href="https://secure.newegg.com/Guest/OrderLogin.aspx?Source=2">Return An Item</a></li>
                        <li><a id="checkReturnStatus" href="https://secure.newegg.com/Guest/OrderLogin.aspx?Source=3">Check Return Status</a></li>
                        <li><a href="//www.newegg.com/Special/Rebate.aspx?name=Rebate-Center">Find Rebates</a></li>
                        <li class="top-nav-menu-split"><a href="https://kb.newegg.com/">Customer Help Center</a></li>
                        
                    </ul>
                </div>
            </div>
        </li>
    </ul>
</nav>
<script type="text/javascript">
    jQuery(document).ready(function () { Biz.Common.TopNavigation.setLink(); });
</script>
        <!-- end: header top nav -->
    </div>

    <nav class="nav-bar">
        <div class="nav-bar-inner fix">
            <div class="nav-row">
                <div class="nav-col">
                    <div class="btn-group">
                        <!-- begin: site main nav -->
                        
    <nav class="btn-group-cell menu-box main-nav" id="menu_async">
        <a href="javascript:void(0);" class="btn btn-primary has-icon-right fa-caret-down main-nav-title">All Products</a>
        <div class="menu-box-body">
            <i class="menu-box-arrow"></i>
            <div id="main-nav-menu-list" class="menu-box-body-inner">
                <ul class="main-nav-categories">
                    
                </ul>
            </div>
        </div>
    </nav>








                        
                        <!-- end: site main nav -->
                        




    <div class="btn-group-cell deals-services menu-box">
        <a href="javascript:void(0);" class="btn btn-primary has-icon-right fa-caret-down">DEALS & SERVICES</a>
        <div class="menu-box-body">
            <i class="menu-box-arrow"></i>
            <div class="menu-box-body-inner">
                <div class="nav-row">
                    
                        <div class="nav-col menu-box-split">
                            <div class="menu-box-col-260">
                                <h3 class="menu-box-title"><a href="//promotions.newegg.com/nepro/16-7640/index.html">Get Inspired <i class="fa fa-caret-right"></i></a></h3><p class="menu-box-note">Your Ultimate Holiday Gift Guide.</p><h3 class="menu-box-title"><a href="//promotions.newegg.com/neemail/latest/index-landing.aspx">Email Deals <i class="fa fa-caret-right"></i></a></h3><p class="menu-box-note">Our latest email deals.</p><h3 class="menu-box-title"><a href="//www.newegg.com/mobile?name=Mobile-Apps&cm_sp=Mobile-_-intro-landing-page-_-homepage-deals-and-services-_-NA">Newegg Mobile <i class="fa fa-caret-right"></i></a></h3><p class="menu-box-note">Shop Exclusive Deals on our Mobile App!</p><h3 class="menu-box-title"><a href="//www.newegg.com/marketplace/deals">Marketplace Spotlight <i class="fa fa-caret-right"></i></a></h3><p class="menu-box-note">Every week, the Newegg deals team hand-picks intriguing products for you.</p><h3 class="menu-box-title"><a href="//www.newegg.com/Outlet/PromotionStore/ID-80">Outlet <i class="fa fa-caret-right"></i></a></h3><p class="menu-box-note">Open box, clearance, refurbished and recertified PCs, electronics and more.</p>
                            </div>
                        </div>
                    
                        <div class="nav-col">
                            <div class="menu-box-col-220">
                                
                                        <h3 class="menu-box-title">Sales Event</h3>
                                        <ul class="menu-box-links">
                                            
                                                    <li><a href="//www.newegg.com/Weekend-Sale/EventSaleStore/ID-969">Weekend Sale</a></li>
                                                
                                                    <li><a href="//promotions.newegg.com/nepro/16-7102/index.html">Techmas: Order Today</a></li>
                                                
                                        </ul>
                                    
                                        <h3 class="menu-box-title">What's New</h3>
                                        <ul class="menu-box-links">
                                            
                                                    <li><a href="http://www.newegg.tv/">Newegg TV</a></li>
                                                
                                                    <li><a href="//www.newegg.com/SmartHome">Smart Home</a></li>
                                                
                                                    <li><a href="//www.newegg.com/VR">VR Central</a></li>
                                                
                                                    <li><a href="//www.newegg.com/NeweggSubscription/Store">Subscription Store</a></li>
                                                
                                                    <li><a href="//promotions.newegg.com/cpu/16-3423/index.html">Intel Extreme CPU</a></li>
                                                
                                                    <li><a href="//promotions.newegg.com/nepro/16-4796/index.html">ZTE Axon 7</a></li>
                                                
                                        </ul>
                                    
                            </div>
                        </div>
                    
                        <div class="nav-col">
                            <div class="menu-box-col-220">
                                
                                        <h3 class="menu-box-title">More at Newegg</h3>
                                        <ul class="menu-box-links">
                                            
                                                    <li><a href="//www.newegg.com/neweggpremier">Premier Membership</a></li>
                                                
                                                    <li><a href="//promotions.newegg.com/nepro/15-5021/index.html">Newegg Store Credit Card</a></li>
                                                
                                                    <li><a href="http://www.gamecrate.com/">GameCrate</a></li>
                                                
                                                    <li><a href="//www.newegg.com/NeweggStudent/Store">Student Store</a></li>
                                                
                                                    <li><a href="//www.newegg.com/Gift-Cards/Category/ID-293">Gift Cards</a></li>
                                                
                                                    <li><a href="//secure.newegg.com/GiftCard/EntryScreen.aspx?Tpk=newegg%20gift%20card">Newegg Gift Card</a></li>
                                                
                                                    <li><a href="//promotions.newegg.com/nepro/16-1906/index.html">Amex Pay-with-Points</a></li>
                                                
                                                    <li><a href="//www.newegg.com/Books-Textbooks/Category/ID-551">Textbook Store</a></li>
                                                
                                        </ul>
                                    
                            </div>
                        </div>
                    
                        <div class="nav-col">
                            <a href="//flash.newegg.com/" class="menu-banner"><img src="//promotions.newegg.com/marketplace/2016/16-8571_deals/160x175_flash.jpg" width="156px" height="175px"></a><a href="//Newegg.com/warrantystore" class="menu-banner menu-banner-margin"><img src="//promotions.newegg.com/warranty/16-7368/160x175.jpg" width="156px" height="175px"></a>
                        </div>
                    
                </div>
            </div>
        </div>
    </div>




                        <!-- begin: marketplace nav -->
                        






    <nav class="btn-group-cell menu-box marketplace-nav">
        <a href="javascript:void(0);" class="btn btn-primary marketplace-nav-title has-icon-right fa-caret-down">Featured Sellers</a>
        <div class="menu-box-body marketplace-nav-body">
            <i class="menu-box-arrow"></i>
            <div class="menu-box-body-inner">
                <div class="nav-row">
                    
                        <div class="nav-col menu-box-split">
                              <div class="marketplace-nav-top fix">
												<div class="marketplace-nav-top-title">Featured Sellers</div>
												<a href="//www.newegg.com/ProductSort/TopSellerList.aspx" class="marketplace-nav-top-right">All Top Sellers <i class="fa fa-caret-right"></i></a>
											</div>
                                    <ul class="marketplace-nav-brands fix">
                                
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/Brookstone" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A8N1_68bd60ed-48bc-498e-b13b-b7c053caa855.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-4' ></i> <strong>31</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/CRYOSTORE" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A4UF_96828dde-1481-43d0-bb8f-c1340650c9b4.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-5' ></i> <strong>1814</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/DJI-Official-Store" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_AAWD_d4515325-3a9d-409d-9539-866d60db451d.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-4' ></i> <strong>88</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/Dyson-USA" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A16C_f9f20f69-a5d1-4a5c-b480-fc8ffa6c7621.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-4' ></i> <strong>556</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/Electronic-Express" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A1CZ_8a524ef6-6df1-4ca2-9751-158eee9a7b25.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-4' ></i> <strong>972</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/Ninebot-U-S-Inc" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A7YS_2fb077d7-4439-4d58-9a27-e4e7cb494e86.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-4' ></i> <strong>19</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/NOCO" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A33T_2dbc6016-cd8e-4908-bbfe-b017586e99b4.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-5' ></i> <strong>179</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/Panasonic" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A8DP_6f0bb325-1287-43c5-8bef-3329c2cd573d.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-5' ></i> <strong>310</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/Sam-Ash-Direct" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A544_88bde28c-ef46-4244-8c93-2c8c1a5674c6.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-4' ></i> <strong>105</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/Swanson-Health-Products" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A8UA_cd283435-0ea8-4eb6-b6bf-f304a04ea42a.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-5' ></i> <strong>72</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/Toynk-Toys-and-Costumes" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A019_021ac5cb-f270-4c09-8bf5-771fb3fd76bf.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-4' ></i> <strong>732</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
												<li class="marketplace-nav-brand" style="height:75px;">
													<a href="//www.newegg.com/store/Toys-R-Us-Babies-R-Us" >
														<img src="//images10.newegg.com/Marketing_Place/Seller_logo/Seller_A3G6_6a3223fb-8363-40d8-b7ba-e46ab051e980.gif" style="max-height:26px;" />
                                                    <div class="marketplace-nav-brand-rate">
                                                        <i class='rating rating-4' ></i> <strong>363</strong>
                                                    </div>
                                            </a>
                                        </li>
                                    
                            </ul>
                        </div>
                    
                        <div class="nav-col">
                            <div class="menu-box-col-260">
                                
                                        <h3 class="menu-box-title">Editor Tested</h3>
                                        <ul class="menu-box-links">
                                            
                                                    <li><a href="//blog.newegg.com/avegant-glyph-fpv-future-headset/">Avegant Glyph, A Personal Theater</a></li>
                                                
                                                    <li><a href="//blog.newegg.com/dji-phantom-4-drone-review/">Testing the DJI Phantom 4 Drone</a></li>
                                                
                                                    <li><a href="//blog.newegg.com/game-qlipp-tennis-sensor/">Up Your Game with QLIPP</a></li>
                                                
                                        </ul>
                                    
                                        <h3 class="menu-box-title">Trending Events</h3>
                                        <ul class="menu-box-links">
                                            
                                                    <li><a href="//www.newegg.com/Last-Minute-Christmas-Sale/eventsalestore/ID-705">Just in Time Christmas Sale</a></li>
                                                
                                                    <li><a href="//promotions.newegg.com/marketplace/Emails/Dec-0-2016/Auto1218/index-landing.html">Smart Home for the Holidays</a></li>
                                                
                                                    <li><a href="//www.newegg.com/Drones/PromotionStore/ID-438">Radio Controlled Tech Deals</a></li>
                                                
                                        </ul>
                                    
                                        <h3 class="menu-box-title">For Sellers</h3>
                                        <ul class="menu-box-links">
                                            
                                                    <li><a href="//www.newegg.com/sellers">Newegg Seller Hub</a></li>
                                                
                                                    <li><a href="//www.newegg.com/sbn/index.html">Save Big with Shipped by Newegg</a></li>
                                                
                                        </ul>
                                    
                            </div>
                        </div>
                    
                        <div class="nav-col">
                            <a href="//www.newegg.com/Last-Minute-Christmas-Sale/eventsalestore/ID-705" class="menu-banner"><img src="//promotions.newegg.com/marketplace/2016/16-8687_xmasDelivery/nav_160x360.jpg" width="156px" height="360px"></a>
                        </div>
                    
                </div>
            </div>
        </div>
    </nav>


                        <!-- end: marketplace nav -->
                    </div>
                </div>
                <div class="nav-col nav-col-elastic">
                    <!-- begin: search bar -->
                    

<div id="newHeaderSearchTools" class="search-bar haFormQuickSearchTextboxWrapper">
    <script type="text/javascript">
        usingNamespace("Biz.Search")["RegionAutoFilledKeywords"] = {
            disable: 0
            };
    </script>
    <form id="haFormQuickSearch" onsubmit="return Biz.Common.QuickSearch.submitPagehHeader2011();" name="haFormQuickSearch" method="get" action="//www.newegg.com/Product/ProductList.aspx">
        <input type="hidden" value="ENE" title="Submit" name="Submit">
        <input type="hidden" value="0" title="DEPA" name="DEPA">
        <input type="hidden" value="BESTMATCH" title="Order" name="Order">
        <input type="hidden" id="isNewHeaderTool" value="1">
        <div class="nav-row search-bar-inner">
            <div id="haQuickSearchTextbox" class="nav-col nav-col-elastic search-bar-keywords">
                <input  id="haQuickSearchBox" name="Description" title="Search Site" maxlength="268" value="Keywords, Model &#35; or Item &#35;" type="search" autocomplete="off" onblur="Biz.Common.QuickSearch.inputFocus(false)" onwebkitspeechchange="this.value=(this.value).replace(/Keywords, Model # or Item #/,'')" onfocus="Biz.Common.QuickSearch.inputFocus(true)">
                <script type="text/javascript">Biz.Common.QuickSearch.chromeSpeechSearch(); </script>
                <div id="autofilledview" class="search-bar-auto-filled"></div>
                <iframe id="iframeKeywords" title="iframeKeywords" name="iframeKeywords" style="width: 0; height: 0; display: none;" src="//images10.newegg.com/WebResource/Themes/2005/Nest/blank.html">iframe for layout</iframe>
            </div>
            <!--QuickSearchDropdown-->
            <div id="haQuickSearchDropdown" class="nav-col">
                <label class="form-select search-bar-category">
                    <select id="haQuickSearchStore" title="Select a store">
                        <option value="-1" selected="selected">Search all</option><option value="100006550">Computer Systems</option><option value="100006519">Components</option><option value="100006521">Electronics</option><option value="100006616">Gaming</option><option value="100129453">Networking</option><option value="100018259">Office Solutions</option><option value="100006587">Software & Services</option><option value="100014274">Automotive & Industrial</option><option value="100006526">Home & Tools</option><option value="100010184">Health & Sports</option><option value="100161253">Apparel & Accessories</option><option value="100027683">Hobbies & Toys</option>
                    </select>
                    <span class="form-select-name">Search all</span> <i class="fa fa-caret-down"></i>
                    <input type="hidden" value="-1" title="N" name="N" id="N">
                    <input type="hidden" value="1" title="isNodeId" name="isNodeId">
                    <input type="hidden" value="" title="BRID" id="BRID">
                </label>
            </div>
            <div class="nav-col">
                <button type="button" class="btn btn-primary btn-mini search-bar-btn" onclick="javascript:Biz.Search.AutoFilledKeywordsNew.search()"  >Search</button>
            </div>
        </div>
    </form>
</div>

                    <!-- end: search bar -->
                </div>
            </div>
        </div>
    </nav>
</header>


<iframe id="commonIframe" title="commonIframe" name="commonIframe" style="width: 0; height: 0; display: none;" src="//images10.newegg.com/WebResource/Themes/2005/Nest/blank.html">
    iframe for layout
</iframe>

<!-- end: header -->


    <script type="text/javascript">
        Web.Template.RolloverMenu2015.init();
        Web.Template.PageHeaderDropDownMenu.init();
    </script>




    			
    <div style='width:100%;margin:0px auto; background:#f4f5f7;'>

		<div id="baBreadcrumbTop" style="max-width:1420px; margin:0px auto;">
	
				<dl>
					<dd class="egg"><a href="//www.newegg.com/" class="noline"><img src="//images10.newegg.com/WebResource/Themes/2005/Nest/whiteEgg.gif" alt="Home" title="Home"/></a></dd>
					<dd><a href="//www.newegg.com/" title="Home">Home</a>&nbsp;&gt;&nbsp;</dd>
					<dd ><a href="//www.newegg.com/Computer-Systems/Store" title="Computer Systems">Computer Systems</a>&nbsp;&gt;&nbsp;</dd><dd ><a href="//www.newegg.com/3D-Printing/Category/ID-340?Tid=160998" title="3D Printing">3D Printing</a>&nbsp;&gt;&nbsp;</dd><dd ><a href="//www.newegg.com/3D-Printers/SubCategory/ID-3266?Tid=160999" title="3D Printers">3D Printers</a>&nbsp;&gt;&nbsp;</dd><dd ><a href="//www.newegg.com/XYZprinting-3D-Printers/BrandSubCat/ID-106236-3266" title="XYZprinting">XYZprinting</a>&nbsp;&gt;&nbsp;</dd><dd style="font-weight:bold;font-style:italic;">Item#:&nbsp;<em>N82E16828840014</em></dd>
				</dl>
	
		</div>
	
		
</div>

	
    
<script>
    jQuery(document).ready(function (e) {
        var objDelayHover = new Biz.Common.TopNavBar.objEven('.nav-x-has-menu, .nav-x-has-miniMenu');
        objDelayHover.delayHover();
    });
</script>
<div class="nav-x-body-top-bar-wrap">
    <div class="nav-x-body-top-bar fix">
        <div class="page-title" style='display:none'>
            <h1 class="page-title-text"></h1>
        </div>
        
        <nav class="nav-x" style='display:none'>
            
        </nav>
    </div>
</div>
<div style="width:100%;margin:0px auto; height:15px;border:0;">
</div>


	<!--header area end-->
	
	<div id="container" >
		<a name="top">
			<!--Top of Page-->
		</a>
        
		<!--body area begin-->
		<div id="bodyArea" >
			

			
				<span id="startContent"></span>
			
			
			

			
			
    <div class="v660 background_F6F0E2" itemscope itemtype="//schema.org/Product">

        <div itemprop='offers' itemscope itemtype='//schema.org/Offer'>
                                <meta itemprop='price' content='549.99' />
                                <meta itemprop='priceCurrency' content='USD' />
                              </div>
        <!-- Auto Configurator Start -->
        
        
        
        <!-- Auto Configurator End -->

        
            <div class="backToCombo"><a id="BackToCombo" style="display: none" href="javascript:void(0);" onclick="Biz.Product.GoBackToCombo.GoBack(); ">Back To Combo</a></div>
        

        

<div class="section">
	<div class="article">
		

<script type="text/javascript" language="javascript">
    var hdGroupItemModelString = [];
    var hdGroupItemsString = [];
</script>

<div id="synopsis">
    
<script type="text/javascript">
    var imgGalleryConfig={};
    imgGalleryConfig.BaseUrlForS7="//images17.newegg.com/is/image/";
    imgGalleryConfig.BaseUrlForNonS7="//images10.newegg.com/productimage/";
    imgGalleryConfig.BaseUrlForNonS7W="//images10.newegg.com/NeweggImage/productimage/";
    imgGalleryConfig.BaseUrl1280ForNonS7="//images10.newegg.com/ProductImageCompressAll1280/";
    imgGalleryConfig.BaseUrl1280ForNonS7W="//images10.newegg.com/NeweggImage/ProductImageCompressAll1280/";
    imgGalleryConfig.BaseUrl1280For360View="//images10.newegg.com/ProductImageCompressAll1280/";
    imgGalleryConfig.BaseUrl1280For360ViewW="//images10.newegg.com/NeweggImage/ProductImageCompressAll1280/";
    imgGalleryConfig.SmallImageUrl="//images10.newegg.com/ProductImageCompressAll/";
    imgGalleryConfig.SmallImageUrlW="//images10.newegg.com/ProductImageCompressAll/";
    imgGalleryConfig.ImageFolder="newegg/";
    imgGalleryConfig.S640="S640";
    imgGalleryConfig.S640W="S640W";
    imgGalleryConfig.S60="S60";
    imgGalleryConfig.spinPlayer="//images10.newegg.com/WebResource/Themes/2005/Nest/genericspin371.swf";
    imgGalleryConfig.spinPlayerSettings="&skin=spinSliderFG371_2.swf,spinSliderBG_2.swf";
    imgGalleryConfig.zoomPlayer="//images10.newegg.com/WebResource/Themes/2005/Nest/genericzoom371.swf";
    imgGalleryConfig.zoomPlayerSettings="&skin=zoomFG371_2.swf,zoomBG_2.swf";
    imgGalleryConfig.flashContentRoot="//images10.newegg.com/WebResource/Themes/2005/Nest";
    imgGalleryConfig.currentImg="";
    imgGalleryConfig.comboName="";
    imgGalleryConfig.comboImage="";
    imgGalleryConfig.blankImgSrc="//images10.newegg.com/WebResource/Themes/2005/Nest/none.gif";
    imgGalleryConfig.Items=[{"itemNumber":"N82E16828840014","imageTitle":"XYZprinting da Vinci 2.0 Duo FFF &#40;Fused Filament Fabrication&#41; ABS&#47;PLA Dual Nozzle 3D Printer","hasWaterMark":false,"isComboBundleImage":false,"imageType":"Normal","isDFISImage":false,"scene7ImageInfo":null,"normalImageInfo":{"imageName":"28-840-014-16.jpg","imageNameList":"28-840-014-16.jpg,28-840-014-15.jpg,28-840-014-13.jpg,28-840-014-14.jpg","dfis360ImgFlag":""},"itemType":{"isDigitalRiverItem":false,"isDVDItem":false,"isOpenBoxItem":false,"isRecertifiedItem":false,"isAITItem":false,"isPhoneItem":false,"isServicePlanItem":false,"isSimCardItem":false,"isRestrictedItem":false,"isComboBundle":false,"isSimplxityItem":false,"isProductKeyOnlyItem":false,"isMicrosoftDownloadItem":false,"isCellPhoneWithPlanItem":false,"isStandaloneSNETItem":false,"isSNETItem":false,"isCiscoServiceItem":false,"isClearanceItem":false,"isBOMDIYItem":false,"isBOMPOSItem":false,"isBOMBTOItem":false,"isAvailableForRegion":true,"isSubscription":false,"isRegularSubscription":false,"isCancelSubscription":false,"isCommitmentSubscription":false,"isSubscriptionOnly":false}}];
    imgGalleryConfig.openboxDesc="<em>Open Box:</em> Images shown are from the NEW version of this item and are for reference only. The actual Open Box product may differ in packaging and included accessories, but has been tested to ensure basic functionality.";
    imgGalleryConfig.recertifiedDesc="";
    imgGalleryConfig.ComboDescText="To <b>view more images</b> of the products in this combo, please click on the <b>thumbnails</b> at the top of the page.";
    imgGalleryConfig.minVersion = 7;
    imgGalleryConfig.Type = 1;
    Biz.Product.ImageGalleryManager.Config=imgGalleryConfig;

    Biz.Product.ImageGalleryManager.ShowHandler = function(showConfig) {
        var extraFields = "E4WEB38-_-";
        var utmaValue = Web.StateManager.Cookies.get(Web.StateManager.Cookies.Name.UTMA);
        if (!String.isNullOrEmpty(utmaValue)) {
            extraFields += utmaValue;
        };

        var nvtcValue = Web.StateManager.Cookies.get(Web.StateManager.Cookies.Name.NVTC);
        if (!String.isNullOrEmpty(nvtcValue)) {
            extraFields += "-_-";
            extraFields += nvtcValue;
        };

        cmCreatePageviewTag("img\x3a \x7b28-840-014\x7d", "ProductShowImage", null, null, "E4WEB38", null, extraFields);
    };
</script>
<div id="main-item-ig" style="display:none;"><em>Open Box:</em> Images shown are from the NEW version of this item and are for reference only. The actual Open Box product may differ in packaging and included accessories, but has been tested to ensure basic functionality.</div>
<div class="grpAside">
    <div class="objImages">
        
        
            <div class="objOption">
                
                    <a href="//www.newegg.com/Store/Brand.aspx?Brand=106236" title="XYZprinting">
                        
                            <img class="logo" alt="XYZprinting" title="XYZprinting" src="//images10.newegg.com/brandimage//Brand106236.gif" />
                    </a>
                
            </div>
        
        <a name="gallery" id="A2" onclick="Biz.Product.ImageGalleryManager.Show({Item:'N82E16828840014',CurImage:'28-840-014-16.jpg'})" title="Click to view the photo gallery">
            <span id="mainSlide28-840-014" class="mainSlide" imgzoompic="//images10.newegg.com/ProductImageCompressAll1280/28-840-014-16.jpg">
                <img id="mainSlide_028-840-014" onload="Web.UI.Control.removeCss($('mainSlide28-840-014'),'loading');" title="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer" alt="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer" src="//images10.newegg.com/ProductImage/28-840-014-16.jpg" />
            </span>
        </a>
        
            <a class="skiplink" href="#skipImageGallery">Skip Image Gallery</a>
            <ul class="navThumbs">
        
        
                
    <li>
	    <a class="noLine" href="javascript:void(0)"  onmouseover="Biz.Product.DetailPage.swapProductImageWithLoadding2011('//images10.newegg.com/ProductImage/28-840-014-16.jpg','Biz.Product.ImageGalleryManager.Show({Item:&#34;N82E16828840014&#34;,CurImage:&#34;28-840-014-16.jpg&#34;})','28-840-014','//images10.newegg.com/ProductImageCompressAll1280/28-840-014-16.jpg');" onfocus="Biz.Product.DetailPage.swapProductImageWithLoadding2011('//images10.newegg.com/ProductImage/28-840-014-16.jpg','Biz.Product.ImageGalleryManager.Show({Item:&#34;N82E16828840014&#34;,CurImage:&#34;28-840-014-16.jpg&#34;})','28-840-014','//images10.newegg.com/ProductImageCompressAll1280/28-840-014-16.jpg');" title="XYZprinting da Vinci 2.0 Duo FFF &#40;Fused Filament Fabrication&#41; ABS&#47;PLA Dual Nozzle 3D Printer(Image 1,New Window)">
	        <img style="width:35px;height:26px;" src="//images10.newegg.com/ProductImageCompressAll35/28-840-014-16.jpg" alt="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer - image 1" title="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer - image 1">
	    </a>
    </li>

            
                
    <li>
	    <a class="noLine" href="javascript:void(0)"  onmouseover="Biz.Product.DetailPage.swapProductImageWithLoadding2011('//images10.newegg.com/ProductImage/28-840-014-15.jpg','Biz.Product.ImageGalleryManager.Show({Item:&#34;N82E16828840014&#34;,CurImage:&#34;28-840-014-15.jpg&#34;})','28-840-014','//images10.newegg.com/ProductImageCompressAll1280/28-840-014-15.jpg');" onfocus="Biz.Product.DetailPage.swapProductImageWithLoadding2011('//images10.newegg.com/ProductImage/28-840-014-15.jpg','Biz.Product.ImageGalleryManager.Show({Item:&#34;N82E16828840014&#34;,CurImage:&#34;28-840-014-15.jpg&#34;})','28-840-014','//images10.newegg.com/ProductImageCompressAll1280/28-840-014-15.jpg');" title="XYZprinting da Vinci 2.0 Duo FFF &#40;Fused Filament Fabrication&#41; ABS&#47;PLA Dual Nozzle 3D Printer(Image 2,New Window)">
	        <img style="width:35px;height:26px;" src="//images10.newegg.com/ProductImageCompressAll35/28-840-014-15.jpg" alt="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer - image 2" title="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer - image 2">
	    </a>
    </li>

            
                
    <li>
	    <a class="noLine" href="javascript:void(0)"  onmouseover="Biz.Product.DetailPage.swapProductImageWithLoadding2011('//images10.newegg.com/ProductImage/28-840-014-13.jpg','Biz.Product.ImageGalleryManager.Show({Item:&#34;N82E16828840014&#34;,CurImage:&#34;28-840-014-13.jpg&#34;})','28-840-014','//images10.newegg.com/ProductImageCompressAll1280/28-840-014-13.jpg');" onfocus="Biz.Product.DetailPage.swapProductImageWithLoadding2011('//images10.newegg.com/ProductImage/28-840-014-13.jpg','Biz.Product.ImageGalleryManager.Show({Item:&#34;N82E16828840014&#34;,CurImage:&#34;28-840-014-13.jpg&#34;})','28-840-014','//images10.newegg.com/ProductImageCompressAll1280/28-840-014-13.jpg');" title="XYZprinting da Vinci 2.0 Duo FFF &#40;Fused Filament Fabrication&#41; ABS&#47;PLA Dual Nozzle 3D Printer(Image 3,New Window)">
	        <img style="width:35px;height:26px;" src="//images10.newegg.com/ProductImageCompressAll35/28-840-014-13.jpg" alt="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer - image 3" title="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer - image 3">
	    </a>
    </li>

            
                
    <li>
	    <a class="noLine" href="javascript:void(0)"  onmouseover="Biz.Product.DetailPage.swapProductImageWithLoadding2011('//images10.newegg.com/ProductImage/28-840-014-14.jpg','Biz.Product.ImageGalleryManager.Show({Item:&#34;N82E16828840014&#34;,CurImage:&#34;28-840-014-14.jpg&#34;})','28-840-014','//images10.newegg.com/ProductImageCompressAll1280/28-840-014-14.jpg');" onfocus="Biz.Product.DetailPage.swapProductImageWithLoadding2011('//images10.newegg.com/ProductImage/28-840-014-14.jpg','Biz.Product.ImageGalleryManager.Show({Item:&#34;N82E16828840014&#34;,CurImage:&#34;28-840-014-14.jpg&#34;})','28-840-014','//images10.newegg.com/ProductImageCompressAll1280/28-840-014-14.jpg');" title="XYZprinting da Vinci 2.0 Duo FFF &#40;Fused Filament Fabrication&#41; ABS&#47;PLA Dual Nozzle 3D Printer(Image 4,New Window)">
	        <img style="width:35px;height:26px;" src="//images10.newegg.com/ProductImageCompressAll35/28-840-014-14.jpg" alt="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer - image 4" title="XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer - image 4">
	    </a>
    </li>

            
        
        </ul>
		<span id="skipImageGallery"></span>
        
        <span class="note"></span>
        
    </div>
</div>
<!--Image Viewer-->

    <div class="grpArticle">
        
<div class="grpDesc boxConstraint">
    
    <div id="version_promo" class="item-disc" style="display:none;"></div>
    <div class="wrapper">
        <h1 id="grpDescrip_h">
            <span id="grpDescrip_" itemprop="name" style="display: inline;">
                XYZprinting da Vinci 2.0 Duo FFF &#40;Fused Filament Fabrication&#41; ABS&#47;PLA Dual Nozzle 3D Printer
            </span>
        </h1>
    </div>
    <div id="landingpage-promo">
    </div>
    


    <div class="grpRating" itemprop="aggregateRating" itemscope itemtype="https://schema.org/AggregateRating">
    </div>

<div id="turntohideinfo" style="display: none;">
    <!--turnto Start-->
         
           <script type="text/javascript">
           function customItemTeaserDisplay() {
          if (typeof (TurnToItemData) == 'undefined' || typeof (TurnToItemData.counts) == 'undefined') {
              return '';
          } else {
              var answerCount = TurnToItemData.counts.a;
              var questionCount = TurnToItemData.counts.q;
              var teaserContainer = TurnTojQuery(".TurnToItemTeaser");
              var teaserHtml = '';
              if (questionCount > 0) {
                  teaserHtml += '<a id="readQuestions" href="javascript:void(0)">';
                  teaserHtml +='See <strong>' + questionCount + '</strong> Question' + (questionCount == 1 ? '' : 's');
                  if(answerCount > 0){
                      teaserHtml +=' | <strong>' + answerCount + '</strong> Answer' + (answerCount == 1 ? '' : 's');
                  }
                  teaserHtml +='</a>';
              } else {
                  teaserHtml += '<a id="readQuestions" href="javascript:void(0)">Ask Or Answer A Question </a>';
              }
              jQuery("#turntolinks").html(teaserHtml);
              jQuery("#Customer-QA_Tab")[0].setAttribute("style", "display:block");
              jQuery("#readQuestions").click(function (e) {
                  e.preventDefault();
                  jQuery("#tabSections li").removeClass("active");
                  jQuery("#tabSections li").eq(4).addClass("active");
                  Biz.Product.CrossTable.scrollToQA();
              });
          }
      }
      
      var turnToConfig = {
          siteKey: "SZTRUjeBj9oQlLYsite",
          setupType: "dynamicEmbed",
          iTeaserFunc: customItemTeaserDisplay,
          skipCssLoad: true
      }; 
      (function() {
        var tt = document.createElement('script'); tt.type = 'text/javascript'; tt.async = true;
        tt.src = document.location.protocol + "//static.www.turnto.com/traServer4_2/trajs/" + turnToConfig.siteKey + "/tra.js";
        var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(tt, s);
      })();
      </script>
    <span id="turntolinks" class="TurnToItemTeaser" ></span>
    <script type="text/javascript">
      var TurnToItemSku = "N82E16828840014";
    </script>
    <script type="text/javascript" src="//static.www.turnto.com/sitedata/SZTRUjeBj9oQlLYsite/v4_2/N82E16828840014/d/itemjs"></script>
        
    <!--turnto End-->
</div>
<script type="text/javascript">
    (function () {
        var turntodiv = jQuery("#turntohideinfo #turntolinks");
        if (turntodiv.length > 0) {
            if (jQuery(".grpArticle .grpRating .text-wrap").length == 0) {
                var turnContainer = "<div class=\"text-wrap\"></div>";
                jQuery(".grpArticle .grpRating").append(turnContainer);
            }
            jQuery(".grpArticle .grpRating .text-wrap").append(turntodiv[0]);
        }
    })();
</script>

<div class="grpLayout">
    <div class="grpNote">
        <p id="pNote_28-840-014" class="note note-inventory">
            <span id="landingpage-stock"></span>
            
        </p>
        
            <p class="grpNote-sold-by">
                Sold and Shipped by <span class="grpNote-ship-by">Newegg</span></p>
            <div data-neg-popid="SBSPopup_content" style="display: none;">Purchases from these Sellers are generally covered under our <a href="https://kb.newegg.com/Article/Index/12/3?id=1172" target="_blank" style="" class="">Newegg Marketplace Guarantee</a>.</div>
            <div data-neg-title="SBSPopup_title" style="display: none;">Marketplace Seller</div>
            <script type="text/javascript">
                jQuery(document).ready(function () {
                    NEG.run(function (require) {
                        var popup = require('Biz.Common.Popup');
                        if (jQuery('.SBS-popup').length > 0) {
                            popup('.SBS-popup', { icon: "info" });
                        }
                    });
                });
            </script>
        
        
    </div>
</div>

    
    
    <div class="grpBullet">
        
            <ul class="itemColumn">
                
                        <li class="item" >
                            ABS/PLA Filament
                        </li>
                    
                        <li class="item" >
                            1.75 mm Filament Diameter
                        </li>
                    
                        <li class="item" >
                            Up to 5.9 x 7.8 x 7.8 inches Build Volume
                        </li>
                    
                        <li class="item" >
                            100 - 400 microns Layer Thickness
                        </li>
                    
                        <li class="item" >
                            USB 2.0
                        </li>
                    
            </ul>
        
    </div>
    <p>
        
        
    </p>
    
    
    
    <div id="newerversion" class="newer-version" style="display:none;"></div>
    <fieldset class="special-offers" id="autoAddComboGiftContent" style="display: none;"></fieldset>
    
        <script type="text/javascript">Biz.Product.AutoAddComboAndFamilyTree.LoadAutoAddComboAndFamilyTree('28-840-014');</script>
    
    
    
    
    
</div>

    </div>
    <span class="clear"></span>
</div>
<div id="buying-combo">
</div>
<div id="PersSimilarItem" class="container" ></div>

<div id="personalizationLoader" class="loader">
    <img src="//images10.newegg.com/WebResource/Themes/2005/Nest/loading16.gif" alt="LOADING..." />
    LOADING...
</div>

		<a id="scrollFullInfo" name="scrollFullInfo"></a>
		<div id="fullInfo" class="fullInfo">
			

<div id="mini-features">
    <div class="mini-features-inner fix">
        <div class="mini-features-cta pull-right" id="landingpage-mini-features-cart"></div>
        <div id="landingpage-mini-features-price"></div>
        <div class="mini-features-wrap fix">
            <div class="mini-features-image">
                <!-- todo: mini feature image link -->
                <a href="#"><img src="//images10.newegg.com/ProductImageCompressAll/28-840-014-16.jpg" /></a>
            </div>
            <div class="mini-features-content">
                <div class="mini-features-desc"><a href="#">XYZprinting da Vinci 2.0 Duo FFF (Fused Filament Fabrication) ABS/PLA Dual Nozzle 3D Printer</a></div>
                <div class="mini-features-info">
                    <span class="note-inventory">
                        <span id="landingpage-mini-features-stock"></span>
                        
                    </span>
                </div>
            </div>
        </div>
        <div class="tab-content">
            <div class="tab-nav fix">
                <div class="back-to-top">
                    <a href="#">
                        <i class="fa fa-arrow-up"></i>
                        <span>Back To Top</span>
                    </a>
                </div>
                <ul>
                    
                        <li style="" class="is-active">
                            <a href="#fullInfo"><span>Overview</span></a>
                        </li>
                    
                    
                        <li style="" class="">
                            <a href="javascript:void(0);"><span>Specifications</span></a>
                        </li>
                    
                    
                        <li  class=""><a href="javascript:void(0);"><span>Warranty & Returns</span></a></li>
                    
                    
                        <li class="" style=""><a href="javascript:void(0);"><span>Reviews</span></a></li>
                    
                    
                        <li id="mini-features-Customer-QA" style="display:none;"><a href="javascript:void(0);"><span>Q&A</span></a></li>
                    
                </ul>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    NEG.run(function (require) {
        var Minifuture = require("Biz.Product.MiniFeatures");
        Minifuture({});
    });
</script>


<div class="rn-navSections fix">
    <ul id="tabSections">
        
            <li id="Overview_Tab" style="" class="active">
                <span>Overview</span>
            </li>
        
        
            <li id="Details_Tab" style="" class="inactive">
                <span>Specifications</span>
            </li>
        
        
            <li id="Warranty_Tab"  class="inactive"><span>Warranty & Returns</span></li>
        
        
            <li id="Community_Tab" class="inactive" style=""><span>Reviews</span></li>
        
        
            <li id="Customer-QA_Tab" class="inactive" style="display:none;"><span>Q&A</span></li>
        
    </ul>
</div>

<div class="rn-boxContent">
    

<div id="Overview_Content" class="grpContent Overview_Content active">
    

    
            <div class="itmDesc" id="introduction">
                <link rel="stylesheet" type="text/css" href="//c1.neweggimages.com/BizIntell/item/ptdeversion/cs-ptde-stylesheet.v1.5.css">

<style type="text/css">
/*  Insert SKU number in place of "sku-28-840-014" */
#overview-content.sku-28-840-014 .banner {width:100%; height:74px; margin-bottom:0; background:url(//images10.newegg.com/BizIntell/item/28/840/28-840-014/banner_080916.jpg) no-repeat left; }
#overview-content.sku-28-840-014 .main .main-image {height:240px; margin:0 auto; background:url(//images10.newegg.com/BizIntell/item/28/840/28-840-014/main-image_080916.jpg) no-repeat center; }
#overview-content .bt{ color: #3D3D3D;font-size: 30px; font-weight: bold; line-height: 30px; margin-bottom: 10px; margin-top: 20px;}
#overview-content .st{ color: #fff;font-size: 15px; font-weight: bold; text-align: center; padding: 15px 0}
#overview-content .st span{ font-size: 20px;}
#overview-content .blank20{clear:both;display:block;margin:0;padding:0;width:100%;height:20px;background:none;}
#overview-content .line2{clear:both;margin:10px 0;padding:0;width:100%;height:52px; background:url('//images10.newegg.com/BizIntell/item/28/840/28-840-014/line_spacer_080916.png') no-repeat center center}
#overview-content .twoCol{ width: 48%; margin-right: 2%; float: left; clear: none;}
#overview-content .twoCol p{ padding-left: 5px;border-left: #ccc 1px solid; font-size: 14px;}
#overview-content table.specs { width:100%; margin:0 auto; font-size: 11px; }
#overview-content table.specs td{ border-bottom:#CCC 1px solid; border-collapse:collapse; padding:5px 3px; width: 12.5%}
#overview-content h2{ color: #4D4D4D;font-weight: 400;font-size: 20px; padding-top:20px;}
#overview-content h3{ color:#4D4D4D; font-weight:400; font-size:18px; margin-top: 15px;}
#overview-content h4{ color:#000; font-weight:bold; font-size:16px; border-left: #000 3px solid; padding-left: 5px; margin-bottom: 0}
</style>

<div id="overview-content" class="sku-28-840-014">
<div class="banner"></div>
<div class="main" style="margin-bottom: 0">
<div class="main-image">
</div>

<div class="l-clear"></div>
</div>
<div style="background-color: #FEF6EB; padding: 30px; overflow: hidden;">

<div class="video">
  <center>
    <script type="text/javascript" src="//app.tvpage.com/tvsite/embed.newegg.com/e?playerId=Zjxr9HKIkGyPWFYqDvgEjkMd&height=270&width=480&videoId=67425801"></script>
  </center>
</div>
<div class="blank20"></div>
<div class="bt">Double the Productivity
Double the Fun!</div>

<p>da Vinci 2.0 Duo features two extruders allowing you to create multi-color projects using the 13 filament colors available in easy-to-install cartridges.</p>

<center><img src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/001_080916.png" alt="da Vinci 2.0"></center>
<h2>WHAT'S YOUR COLOR?</h2>
<p>Easy to install filament cartridges available in many vivid colours. XYZprinting Filament Cartridges are designed and tested to ensure that there is no distortion in colour or form ensuring your designs come out perfect every time.</p>

<h3>Cloud Library</h3>

<p>Join XYZprinting’s global 3D design community, 3D Design Hub and Artist Collection, to create, share, and download over hundreds 3D designs from all over the world!</p>
<h3>Safe</h3>

<p>XYZprinting designs CE certified printers with your safety in mind. Like its predecessor, the da Vinci 2.0 is fully-enclosed to protect not only you and your family from the heated extruders and print bed, but also protect your creations from accidental bumps and jars. </p>
<h3>Low Maintenance</h3>

<p>The da Vinci 2.0 comes fully assembled and ready-to-go right out of the box with various useful tools such as automated nozzle cleaning and print bed detection for assisted leveling. XYZprinting’s da Vinci 2.0 is your choice for an easy, hassle-free, 3D printing experience.</p>
<h3>Great Value</h3>

<p>Dual extruder printers have never been this approachable ever!</p>
<h3>Easy Loading</h3>
<p>At XYZprinting, our 3D printers come with filament-detection technology and a simple cartridge slot system. You can now keep track of and quickly refill or replace your filament with ease!</p>


<div class="blank20"></div>

<center><div class="bt">da Vinci 2.0 Duo</div></center>

<div class="features l-grid">
<div class="l-center">

<div class="features-box" style="width: 300px;">
<img class="features-image" src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/g01_080916.png" alt="da Vinci 2.0">
<p>Left</p>
</div>

<div class="features-box" style="width: 300px;">
<img class="features-image" src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/g02_080916.png" alt="da Vinci 2.0">
<p>Front</p>
</div>

<div class="features-box" style="width: 300px;">
<img class="features-image" src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/g03_080916.png" alt="da Vinci 2.0">
<p>Right</p>
</div>

</div>
</div>

<div class="line2"></div>
<center><div class="bt">SPECIFICATIONS</div></center>

<div class="twoCol">
  <h4>Dimensions</h4>
<p>
Product Dimension (WxHxD)<br>
18.4 x 20 x 22 inch<br>
(46.8 x 51 x 55.8 cm)
</p>
    <h4>Package</h4>
<p>Package Dimension<br>
    22.1 x 23.3 x 27.6 inch<br>
    (56 x 59 x 70 cm)<br>
    Package Gross Weight<br>
    62.8 lb (27.5kg)</p>

<h4>Technology</h4>
<p>FFF (Fused Filament Fabrication)</p>
<h4>Maximum Build Volume (WxHxD)</h4>
<p>5.9H x 7.8W x 7.8D inch (15x20x20cm)</p>
<h4>Resolution</h4>
<p>Fine 0.1 mm (100 microns)<br>
Standard 0.2 mm (200 microns)<br>
Speed 0.3 mm (300 microns)<br>
Ultra Fast 0.4 mm (400 microns)</p>

<h4>Print Head</h4>
<p>Dual Nozzle</p>
<h4>Nozzle Diameter</h4>
<p>0.4 mm</p>
<h4>Filament Diameter</h4>
<p>1.75 mm</p>

</div>
<div class="twoCol">
  <h4>Filament Material</h4>
<p>ABS</p>
<h4>Display</h4>
<p>Panel Type<br>
2.6” FSTN LCM</p>
<h4>Language</h4>
<p>Multi Language</p>
<h4>Connectivity</h4>
<p>USB 2.0</p>
<h4>Software
(XYZWare)</h4>
<p>
File Types<br>
.stl , XYZ Format
</p>
<h4>OS Support</h4>
<p>Windows XP ( .Net 4.0 required) and Windows 7 above (for PC)<br>
Mac OSX 10.8 above-bit (for Mac)<br>
Note: Stardard VGA driver on operating system, or a graphics card doesn't support OpenGL 2.1, may cause unknown error in XYZware.</p>
<h4>Hardware</h4>
<p>
Hardware Requirements (for PC/Mac)<br>
X86 32/64-bit compatible PCs with 4GB+ DRAM (for PC)<br>
X86 64-bit compatible Macs with 4GB+ DRAM (for Mac)
</p>

</div>
</div>

<table cellspacing="2" cellpadding="0" class="specs">
  <tr>
    <td>&nbsp;</td>
    <td align="center"><img src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/28-840-017_080916.jpg" alt="28-840-017" /></td>
    <td align="center"><img src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/28-840-078_080916.jpg" alt="28-840-078" /></td>
    <td align="center"><img src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/28-840-095_080916.jpg" alt="28-840-095" /></td>
    <td align="center"><img src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/28-840-014_080916.jpg" alt="28-840-014" /></td>
    <td align="center"><img src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/28-840-025_080916.jpg" alt="28-840-025" /></td>
    <td align="center"><img src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/28-840-094_080916.jpg" alt="28-840-094" /></td>
    <td align="center" style="border-top:#1487C9 2px solid; border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;"><img src="//images10.newegg.com/BizIntell/item/28/840/28-840-014/28-840-014_080916.jpg" alt="28-840-014" /></td>
  </tr>
  <tr>
    <td>&nbsp;</td>
    <td bgcolor="#707070" style="border-right: #fff 1px solid"><div class="st">da Vinci<br><span>Jr. 1.0</span></div></td>
    <td bgcolor="#707070" style="border-right: #fff 1px solid"><div class="st">da Vinci<br><span>Jr. 1.0w</span></div></td>
    <td bgcolor="#707070" style="border-right: #fff 1px solid"><div class="st">da Vinci<br><span>Jr. 1.0 3-in-1</span></div></td>
    <td bgcolor="#707070" style="border-right: #fff 1px solid"><div class="st">da Vinci<br><span>1.0</span></div></td>
    <td bgcolor="#707070" style="border-right: #fff 1px solid"><div class="st">da Vinci<br><span>1.0 Pro</span></div></td>
    <td bgcolor="#707070"><div class="st">da Vinci<br><span>1.0 Pro 3-in-1</span></div></td>
    <td bgcolor="#707070" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;"><div class="st">da Vinci<br><span>2.0 Duo</span></div></td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Printer Weight(lbs)</td>
    <td align="center">26.4 lbs</td>
    <td align="center">26.4 lbs</td>
    <td align="center">33.07 lbs</td>
    <td align="center">55 lbs</td>
    <td align="center">58.6 lbs</td>
    <td align="center">60.63 lbs</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">60.6 lbs</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Shipping Dimensions (ln)</td>
    <td align="center">21.53 x 22.87 x 18.7 inch </td>
    <td align="center">21.53 x 22.87 x 18.7 inch </td>
    <td align="center">21.53 x 22.87 x 18.7 inch</td>
    <td align="center">22.1 x 27.6 x 23.3 inch</td>
    <td align="center">22.1 x 27.6 x 23.3 inch</td>
    <td align="center">22.1 x 23.3 x 27.6 inch</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">22.1 x 27.6 x 23.3 inch </td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Filament Material</td>
    <td align="center">Jr. PLA Filament</td>
    <td align="center">Jr. PLA Filament</td>
    <td align="center">Jr. PLA Filament</td>
    <td align="center">ABS/PLA Filament</td>
    <td align="center">ABS/PLA Filament</td>
    <td align="center">ABS/PLA Filament</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">ABS/PLA Filament</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Filament Diameter</td>
    <td align="center">1.75 mm</td>
    <td align="center">1.75 mm</td>
    <td align="center">1.75 mm</td>
    <td align="center">1.75 mm</td>
    <td align="center">1.75 mm</td>
    <td align="center">1.75mm</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">1.75 mm</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Maximum Build Volume</td>
    <td align="center">5.9 x 5.9 x 5.9 inches </td>
    <td align="center">5.9 x 5.9 x 5.9 inches</td>
    <td align="center">5.9 x 5.9 x 5.9 inch</td>
    <td align="center">7.8x7.8x7.8 inches</td>
    <td align="center">7.8 x 7.8 x 7.8 inches</td>
    <td align="center">5.9x7.8x7.8 inches </td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">5.9x7.8x7.8 inches </td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Layer    Thickness(Resolution)</td>
    <td align="center">Fine 0.1 mm (100    microns)<br />
      Standard 0.2 mm (200 microns)<br />
      Speed 0.3 mm (300 microns)<br />
      Ultra Fast 0.4 mm (400 microns)</td>
    <td align="center">Fine 0.1 mm (100    microns)<br />
      Standard 0.2 mm (200 microns)<br />
      Speed 0.3 mm (300 microns)<br />
      Ultra Fast 0.4 mm (400 microns)</td>
    <td align="center">Fine 0.1 mm (100    microns)<br />
      Standard 0.2 mm (200 microns)<br />
      Speed 0.3 mm (300 microns)<br />
      Ultra Fast 0.4 mm (400 microns)</td>
    <td align="center">Fine 0.1 mm (100    microns)<br />
      Standard 0.2 mm (200 microns)<br />
      Speed 0.3 mm (300 microns)<br />
      Ultra Fast 0.4 mm (400 microns)</td>
    <td align="center">Fine 0.1 mm (100    microns)<br />
      Standard 0.2 mm (200 microns)<br />
      Speed 0.3 mm (300 microns)<br />
      Ultra Fast 0.4 mm (400 microns)</td>
    <td align="center">Fine 0.1 mm (100    microns)<br />
      Standard 0.2 mm (200 microns)<br />
      Speed 0.3 mm (300 microns)<br />
      Ultra Fast 0.4 mm (400 microns)</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">Fine 0.1 mm (100    microns)<br />
      Standard 0.2 mm (200 microns)<br />
      Speed 0.3 mm (300 microns)<br />
      Ultra Fast 0.4 mm (400 microns)</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Print Head</td>
    <td align="center">Single Nozzle</td>
    <td align="center">Single Nozzle</td>
    <td align="center">Single Nozzle</td>
    <td align="center">Single Nozzle</td>
    <td align="center">Single Nozzle</td>
    <td align="center">Single Nozzle</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">Dual Nozzle</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Nozzle Diameter</td>
    <td align="center">0.4 mm</td>
    <td align="center">0.4 mm</td>
    <td align="center">0.4 mm</td>
    <td align="center">0.4 mm</td>
    <td align="center">0.4 mm</td>
    <td align="center">0.4 mm</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">0.4 mm</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Interface</td>
    <td align="center">USB 2.0, SD card(32G MAX)</td>
    <td align="center">USB 2.0, SD card(32G MAX), Wifi</td>
    <td align="center">USB 2.0, SD card(32G MAX), Wifi</td>
    <td align="center">USB 2.0</td>
    <td align="center">USB 2.0, Wifi</td>
    <td align="center">USB 2.0, Wifi</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">USB 2.0</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Others</td>
    <td align="center">Auto-loading Filament</td>
    <td align="center">Auto-loading Filament</td>
    <td align="center">Laser engraver(Optional) </td>
    <td align="center">&nbsp;</td>
    <td align="center">Auto-loading Filament</td>
    <td align="center">Laser engraver(Optional) </td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">&nbsp;</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7"></td>
    <td align="center"></td>
    <td align="center"></td>
    <td align="center"></td>
    <td align="center">&nbsp;</td>
    <td align="center">Laser    engraver(Optional) </td>
    <td align="center">&nbsp;</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">&nbsp;</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Scan size</td>
    <td align="center"></td>
    <td align="center"></td>
    <td align="center">1x1 in~ 4.7x4.7 in</td>
    <td align="center">&nbsp;</td>
    <td align="center"></td>
    <td align="center">1.18 x 1.18&rdquo;- 5.9 x 5.9&rdquo;</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">&nbsp;</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Scan Accuracy</td>
    <td align="center">&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td align="center">0.25mm</td>
    <td align="center" >&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td align="center">0.25mm</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;">&nbsp;</td>
  </tr>
  <tr>
    <td align="center" bgcolor="#F7F7F7">Turntable payload</td>
    <td align="center">&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td align="center">&le;3 Kg/6.6lbs</td>
    <td align="center">&nbsp;</td>
    <td align="center">&nbsp;</td>
    <td align="center">&le;3 Kg/6.6lbs</td>
    <td align="center" style="border-left:#1487C9 2px solid;border-right:#1487C9 2px solid;border-bottom:#1487C9 2px solid;">&nbsp;</td>
  </tr>
</table>

<div class="blank20"></div>
</div>
                <span class="clearL"></span>
            </div>
        

    
        <div id="pcraOverview"></div>
    

    <br class="clearL" />
</div>

    
<div data-neg-popid="SpecsPopup_content" id="def_colorPopup_Content" style="display: none;"></div>
<div data-neg-title="SpecsPopup_title" id="def_colorPopup_Title" style="display: none;"></div>
<div id="Details_Content" class="grpContent Details_Content inactive">
    <a id="scrollSpecs_Details" name="scrollSpecs"></a>
    

<div id="detailSpecContent">
    
        <h2 class="sectionTitle">Learn more about the <span>XYZprinting da Vinci 2.0 Duo</span></h2>
    
    <div id="Specs" class="">
        <fieldset><h3 class="specTitle">Model</h3><legend style="display:none;">|</legend><dl><dt>Brand</dt><dd>XYZprinting</dd></dl><dl><dt>Series</dt><dd>da Vinci 2.0</dd></dl><dl><dt>Model</dt><dd>da Vinci 2.0 Duo</dd></dl><dl><dt>Part Number</dt><dd>da Vinci 2.0 Duo</dd></dl></fieldset><fieldset><h3 class="specTitle">Details</h3><legend style="display:none;">|</legend><dl><dt>Number of Extruders</dt><dd>2</dd></dl><dl><dt>Print Technology</dt><dd>FFF (Fused Filament Fabrication)</dd></dl><dl><dt>Build Material</dt><dd>ABS/PLA Filament</dd></dl><dl><dt>Build Size</dt><dd>5.90" x 7.80" x 7.80" (Max.)</dd></dl><dl><dt>Layer Thickness</dt><dd>100 - 400 microns</dd></dl><dl><dt>Filament Diameter</dt><dd>1.75mm</dd></dl><dl><dt>Interface</dt><dd>USB 2.0</dd></dl><dl><dt>Operation System Requirements</dt><dd>Windows XP (.Net 4.0 required) and Windows 7 above (for PC)<br>Mac OSX 10.8 above-bit (for Mac)</dd></dl><dl><dt>Minimum Hardware Requirements</dt><dd>X86 32-bit / 64-bit compatible PCs with 4GB+ DRAM (for PC)<br>X86 64-bit compatible Macs with 4GB+ DRAM (for Mac)</dd></dl></fieldset><fieldset><h3 class="specTitle">Features</h3><legend style="display:none;">|</legend><dl><dt>Features</dt><dd>Resolution:<br>Fine 0.1 mm (100 microns)<br>Standard 0.2 mm (200 microns)<br>Speed 0.3 mm (300 microns)<br>Ultra Fast 0.4 mm (400 microns)<br><br>Nozzle Diameter: 0.4 mm<br><br>Display: Panel Type, 2.6" FSTN LCM<br><br>Language: Multi Language<br><br>Software (XYZWare):<br>File Types<br>.stl, XYZ Format<br><br>OS Support:<br>Windows XP (.Net 4.0 required) and Windows 7 above (for PC)<br>Mac OS X 10.8 above-bit (for Mac)</dd></dl></fieldset><fieldset><h3 class="specTitle">Dimensions & Weight</h3><legend style="display:none;">|</legend><dl><dt>Printer Dimensions</dt><dd>20.00" x 18.40" x 22.00"</dd></dl><dl><dt>Printer Weight</dt><dd>54.40 lbs.</dd></dl></fieldset>
    </div>
</div>
</div>
<script type="text/javascript">
        Biz.Product.Product2016.LoadPopup('.specs-popup');
</script>

    

<div id="Warranty_Content" class="rn-boxContent-full inactive">
    

<div class="rn-boxContent-title">Warranty, Returns, And Additional Information</div>


    <div class="column">
        
            <div class="quick-info">
                <ul>
                    
                        <li class="rn-boxContent-2colInfo-title">Warranty</li>
                        <li>Limited Warranty period (parts):&nbsp;1 year</li>
                        <li>Limited Warranty period (labor):&nbsp;1 year</li>
                    
                    <li><a href="https://kb.newegg.com/Article/Index/12/3?id=1770#4" target="_blank" title="Full details(new window)">Read full details</a></li>
                </ul>
            </div>
        
            <div class="quick-info" id="MfrContact">
                <ul>
                    <li class="rn-boxContent-2colInfo-title">Manufacturer Contact Info</li>
                    
                        <li><a href="http&#58;&#47;&#47;us.xyzprinting.com&#47;us_en&#47;Product&#47;da-Vinci-2.0" target="_blank" title="Manufacturer Product Page(new window)">Manufacturer Product Page</a><span style="display: none;">|</span></li>
                    
                        <li>Website:&nbsp;<a href="http&#58;&#47;&#47;us.xyzprinting.com&#47;" target="_blank" title="View Manufacturer Website(new window)">http&#58;&#47;&#47;us.xyzprinting.com&#47;</a><span style="display: none;">|</span></li>
                    
                        <li>Support Phone:&nbsp;855-999-3348</li>
                    
                        <li>Support Email:&nbsp;<a href="mailto:supportus&#64;xyzprinting.com">supportus&#64;xyzprinting.com</a><span style="display: none;">|</span></li>
                    
                        <li><a href="http&#58;&#47;&#47;support.xyzprinting.com&#47;us_en&#47;Support" target="_blank" title="Support Website(new window)">Support Website</a><span style="display: none;">|</span></li>
                    
                    <li><a href="//www.newegg.com/XYZprinting/BrandStore/ID-106236">View other products from XYZprinting</a></li>
         
                </ul>
            </div>
        
    </div>


<div class="column">
    
            <div class="quick-info" id="ReturnPolicyContent2015">
                <ul>
                    <li class="rn-boxContent-2colInfo-title">Return Policies</li>
                    <li><UL class="bullet"><LI>Return for refund within: 30 days</LI><LI>Return for replacement within: 30 days</LI></UL></li>
                    <li>This item is covered by Newegg.com's <a href="https://kb.newegg.com/Article/Index/12/3?id=1167#44" target="_blank" title="Return Policy(new window)">Standard Return Policy</a>.</li>
                </ul>
            </div>
        
    
</div>


    <div id="extendedWarrantyOption">
    </div>
</div>


    
	    <div id="Community_Content" class="grpContent Community_Content inactive">
	        <div style="text-align: center;margin-bottom:40px;display:block" class="loader"> 
		        <img alt="ICON" style="vertical-align:middle;" src='//images10.newegg.com/WebResource/Themes/2005/Nest/loading16.gif'/> Loading...
	        </div>
	        
	        <script type="text/javascript">Biz.Product.ProductReview.switchReviewTab('&Item=28-840-014&review=0&SummaryType=0&Pagesize=25&PurchaseMark=false&SelectedRating=-1&VideoOnlyMark=false&VendorMark=false&IsFeedbackTab=true&ItemGroupId=71056745&Type=ParentItem&ItemOnlyMark=true&chkItemOnlyMark=on&Keywords=(keywords)&SortField=0&DisplaySpecificReview=0');</script>
	        
	    </div>
	    <div id="eggxpertReviews_Content" data-neg-popid="eggxpertReviews_content" style="display: none;">
	        Through the Newegg EggXpert Review Program, Newegg invites its best reviewers, known as EggXperts, to post opinions about new and pre-release products to help their fellow customers make informed buying decisions.<a href="https://kb.newegg.com/Article/Index/12/3?id=1849"  class="borderbottom"><span>Click here for more details.</span></a>
	    </div>
    
    <div id="Customer-QA_Content" class="grpContent Customer-QA_Content inactive">
        <div id="QATabLoading"></div>
        <div id="TurnToContent">
            <div style="background-color: white; width: 100%" class="TT3ugc">
            </div>
        </div>
    </div>
</div>


<div class="grpOffers">
    <div id="bodyGrid" class="grid3">
        <div id="product_RelationItemInfo">
        </div>
        <div class="loader" style="text-align: center; ">
            <img src="//images10.newegg.com/WebResource/Themes/2005/Nest/loading16.gif" style="vertical-align: middle;" alt="ICON" />
            Loading...
        </div>
        <input id="hiddenItemGroupId" name="hiddenItemGroupId" type="hidden" value="71056745" />
        <input id="hiddenItemNumber" name="hiddenItemNumber" type="hidden" value="28-840-014" />
        <input id="hiddenCanPreLaunch" name="hiddenCanPreLaunch" type="hidden" value="False" />
        <div id="SimilarItemsContent"></div>
    </div>
</div>

		</div>
	</div>
</div>
<div class="aside">
    <div id="landingpage-topshipping"></div>
    
    <div class="grpAction" id="continueProxy" style="display: none">
        <div class="grpOptions">
            <div class="grpPrimary ">
                <div class="grpAction"><span class="normal genericProduct">Select options to continue.</span></div>
            </div>
        </div>
    </div>

    <div class="grpAction" id="continueReal">
        <div data-neg-popid="AskSellerPopup_content" style="display: none;"></div>
        
            <div class="grpOptions">
                <div id="landingpage-iron-egg"></div>
                

<div class="grpPrimary" id="landingpage-price">
    
</div>

                    <div class="mktProdOpts">
                        
                            <div class="featured-seller">
                                <div class="label">Sold and Shipped by: <strong style="color: #4d4d4d">Newegg</strong></div>
                                
                            </div>
                        
                    </div>
                    <div data-neg-popid="SellerPopup_content" style="display: none;">Purchases from these Sellers are generally covered under our <a href="https://kb.newegg.com/Article/Index/12/3?id=1172" target="_blank" style="" class="">Newegg Marketplace Guarantee</a>.</div>
                    <div data-neg-title="SellerPopup_title" style="display: none;">Marketplace Seller</div>
                    <script type="text/javascript">
                        jQuery(document).ready(function () {
                            NEG.run(function (require) {
                                var popup = require('Biz.Common.Popup');
                                if (jQuery('.seller-popup').length > 0) {
                                    popup('.seller-popup', {
                                        icon: "info"
                                    });
                                }
                                if (jQuery('.newegg-popup').length > 0) {
                                    popup('.newegg-popup', {
                                        icon: "info"
                                    });
                                }
                            });

                            NEG.run(function (require) {
                                var popup = require('Biz.Common.Popup');

                                if (jQuery('.AskSeller-popup').length > 0) {
                                    var popupInstance = popup('.AskSeller-popup', {
                                        icon: "info",
                                        beforeShow: function ($content, $this) {
                                            var content = $this.siblings("div[data-neg-temp='AskSellerPopup_content']");

                                            return $content.html(content.html());
                                        },
                                        afterShow: function ($content, $this) {
                                            prepareAskSellerCaptcha($this.attr('data-contentid'));
                                            Biz.Product.AskSeller.InitView();
                                        }
                                    });

                                    NEG.on("AskSellerPopup_Close", function () {
                                        popupInstance.close();
                                    });
                                }
                            });
                        });
                    </script>
                
                <div id="servicesContent">
                </div>
                
                <script type="text/javascript">
                    usingNamespace("Biz.Product")["CompareConfig"] = {
                        baseQueryString: new Web.QueryStringBuilder(""),
                        PageUrlAlias: {
                            compare: "//www.newegg.com/Product/Productcompare.aspx"
                        },
                        compareItems: [],
                        itemThumbs: []
                    };
                    Biz.Product.CompareConfig.compareItems.push("28-840-014");
                    Biz.Product.CompareConfig.itemThumbs["28-840-014"] = "//images10.newegg.com/ProductImageCompressAll35/28-840-014-16.jpg";
                </script>
                <div id="landingpage-cart"></div>
                
                <div class="popover left popover-compare" id="compareListPopup">
                    <i class="popover-arrow"></i>
                    <div class="popover-title">Selected Items</div>
                    <div class="popover-body">
                        <div class="item-compare-list"></div>
                        <div class="popover-btn-area">
                            <button type="button" class="btn btn-mini btn-tertiary" id="compatereset">Reset</button>
                            <button type="button" class="btn btn-mini btn-secondary" id="gocompare">compare</button>
                        </div>
                    </div>
                </div>
                <form id="compareform" method="post" action="">
                    <input type="hidden" name="CurrentUrl" id="CurrentUrl" value="" />
                </form>
                <script type="text/javascript">
                    NEG.run(function (require) {
                        require("Biz.Product.StepperButton").init();
                    });
                    jQuery(document).ready(function () {
                        var cfg = Biz.Product.CompareConfig;
                        NEG.run(function (require) {
                            var jQuery = require("NEG.ThirdParty.JQuery");
                            var bizCompare = require("Biz.Product.Compare");
                            var options = {
                                goCompare: function () {
                                    document.getElementById('CurrentUrl') && (document.getElementById('CurrentUrl').value = window.location);
                                    var compareData = this.getCompareData();
                                    var compareString = this.getCompareString(compareData);
                                    var items = compareData.itemList;
                                    var itempers = [];

                                    cfg.baseQueryString.set("CompareItemList", compareString);
                                    var citem = "";
                                    var percm = "";
                                    for (var mi = 0; mi < items.length; mi++) {
                                        citem = items[mi];
                                        if (citem != null && citem.length > 0) {
                                            if (itempers[citem] != null && itempers[citem].length > 0) {
                                                percm = percm + ';' + citem + ':' + itempers[citem];
                                            }
                                        }
                                    }
                                    if (percm.length > 0) {
                                        percm = percm.substring(1, percm.length);
                                    }
                                    if (percm.length > 0) {
                                        cfg.baseQueryString.set("percm", encodeURIComponent(percm));
                                    }

                                    var qs = cfg.baseQueryString.toString();
                                    jQuery("#compareform").attr("action",cfg.PageUrlAlias.compare + "?" + qs);
                                    jQuery("#compareform")[0].submit();
                                }
                            };

                            bizCompare(options);
                        });
                    });
                </script>
                
                
                <div id="specialLinkContent" class="specialLink" style="display:none;">
                    
                </div>
                
                <div id="mirContent" style="display: none">
                    
                </div>
                <script type="text/javascript">
                    Biz.Product.Product2016.displayMirLink();
                </script>
            </div>
        
    </div>
    
    <div id="landingpage-bestseller"></div>
    
    <script type="text/javascript">
        NEG.trigger('LANDINGPAGE_DATA_INIT');
    </script>
    <!-- Banners -->
    
    
    
    
<div id="divNormal">
    <form target="newsletterSubscribe" method="post" action="https://secure.newegg.com/NewMyAccount/NewsLetterSubscribe.aspx?Action=Manage" name="Newsletter">
        <div class="grpEmail">
            <img class="email" src="//images10.newegg.com/WebResource/Themes/2005/Nest/email.png" alt="Subscribe" title="Subscribe" />
            <span class="text">
                Are you an <span class="bold">E-Blast Insider</span>?
            </span>
            
                <div class="disclosure">
                    &nbsp;
                </div>
            
            <input id="LoginName" maxlength="128" type="text" name="LoginName" value="Enter Email Address"
                class="input" onfocus="this.value='';Biz.Product.SubscribeToEmail2012.changeSubmitButton(this);" onkeyup="Biz.Product.SubscribeToEmail2012.changeSubmitButton(this);" onchange="Biz.Product.SubscribeToEmail2012.changeSubmitButton(this);" onpropertychange="Biz.Product.SubscribeToEmail2012.changeSubmitButton(this);" oninput="Biz.Product.SubscribeToEmail2012.changeSubmitButton(this);" title="LoginName" />
            <img id="productSubscribte" src="//images10.newegg.com/WebResource/Themes/2005/Nest/btn_subscribe-disabled.png" title="Subscribe Newegg e-Blast" alt="Subscribe Newegg e-Blast" />
            <a id="productSubscribteActive" onclick="Biz.Product.SubscribeToEmail2012.nSubmit('https://secure.newegg.com/NewMyAccount/NewsLetterSubscribe.aspx?Action=Manage');" style="display: none;">
                <img src="//images10.newegg.com/WebResource/Themes/2005/Nest/btn_subscribe.gif" title="Subscribe Newegg e-Blast" alt="Subscribe Newegg e-Blast" /></a>
            <input type="hidden" value="1" name="Subscribe" />
        </div>
    </form>
</div>
<div class="wrapper_msg" style="display: none;" id="divSubmitSucceed">
    <div class="title">
        Thank you for subscribing
    </div>
    <p>
        Your request will be processed within the next 24 hours.
    </p>
    <p>
        Please add "promo@e.newegg.com" to your address book to ensure delivery.
    </p>
    <span class="callToAction actEmail"><a class="blue" href="//promotions.newegg.com/neemail/latest/index-landing.aspx?cm_sp=emailsub-_-productpage-_-promo">
        See Today's E-Blast Promo
    </a></span>
</div>
<iframe id="newsletterSubscribe" name="newsletterSubscribe" style="display: none;"></iframe>

    
<!-- aside -->
<div class="grpAside">
    
     
    
        <div id="ProductBuzz"> 
            <div class="grpPrimary fieldset Overview_Aside Community_Aside BuzzReview2013" id="ProductBuzzContainer"  style="display:none">
                
            </div>
        </div>
    
    
    
    
    
<div class="fieldset">
	<div><span class="content"><img alt="PayPal" src="//images10.newegg.com/WebResource/Themes/2005/Nest/PayPal89x25.png" /><br />Shop without retyping payment details.  Secure shopping made faster.<br/>Check out with PayPal.</span></div>
</div>


      
    
</div>
<!-- /aside -->
</div>

            <div class="boxPageFoot" id="pageFooter"></div>
        

        <div class="stripeBodyCenterArea3">
            <img class="stripeImage" src="//images10.newegg.com/WebResource/Themes/2005/Nest/none.gif" height="0" alt="" />
        </div>
    </div>

    

    <form name="bcaFromProductDetail" id="bcaFromProductDetail" method="get" action="">
        <input type="hidden" name="Submit" id="Submit" value="Add">
        <input type="hidden" name="ItemList" id="ItemList" value="">
        <input type="hidden" name="OptionItemList" id="OptionItemList" value="" />
        <input type="hidden" name="PreItemList" id="PreItemList" value="" />
        <input type="hidden" name="SubscriptionItemList" id="SubscriptionItemList" value="">
        <input type="hidden" name="EWTList" id="EWTList" value="" />
        <input type="hidden" name="ItemProhibited" id="ItemProhibited" value="" />
        <input type="hidden" name="isAit" id="isAitItem" value="" />
        <input type="hidden" name="isRegularPrice" id="IsRegularPrice" value="" />
    </form>

    <script type="text/javascript">
        if(document.getElementById("BackToCombo")!=null && typeof(document.getElementById("BackToCombo"))!="undefined"){
            if(document.referrer==null||document.referrer==""||(document.referrer.toLowerCase().indexOf("combodealdetails")==-1&&document.referrer.toLowerCase().indexOf("combobundledetails")==-1)){
                document.getElementById("BackToCombo").style.display="none";
            }else{
                document.getElementById("BackToCombo").style.display="";
            }
            if(Web.Environment.Browser.currentVersion()==Web.Enum.Browser.IE_6 ){
                document.getElementById("BackToCombo").href="javascript:history.back();";
                document.getElementById("BackToCombo").onclick="";
            }
        };
        var pageName = "productDetail"; 
        var bloomReachParams="prod_id=28-840-014&prod_name=XYZprinting%20da%20Vinci%202.0%20Duo%20FFF%20%26%2340%3bFused%20Filament%20Fabrication%26%2341%3b%20ABS%26%2347%3bPLA%20Dual%20Nozzle%203D%20Printer&pstatus=discontinued&ptype=product&user_agent=Scrappy-LinkExpanding%201.0%20%28%2bhttps%3a%2f%2fgithub.com%2fblakeembrey%2fnode-scrappy%29";
    </script>
    <script type="text/javascript">
        jQuery(document).ready(function(){
            var script = document.createElement("script");
            script.src = "//assets.pinterest.com/js/pinit.js";
            document.body.appendChild(script);
        });
    </script>
    <input id="productVersion" value="newProductPage" type="hidden">
    <input id="mboParentItemNumber" name="hiddenQValue" type="hidden" value="28-840-014" />
    <input id="mboMappingId" name="hiddenQValue" type="hidden" value="" />
    <input id="buyBoxItemNumber" value="28-840-014" type="hidden">
    <input id="persMainItemNumber" value="28-840-014" type="hidden">
    <input id="persMainItemState" value="0" type="hidden">
    <input id="productPersonalizationFlag" value="True" type="hidden" />
    <input id="productBuzzFlag" value="True" type="hidden" />
    <input id="moreBuyOptionFlag" value="True" type="hidden" />
    <input id="moreBuyOptionTrigger" value="2" type="hidden" />
    <input id="moreBuyingOptionLoaded" value="0" type="hidden" />
    <input id="shoppingInsightFlag" value="True" type="hidden" />
	
    
        <script type="text/javascript">
            Biz.Product.ServicePlan.init();
        </script>
    
    <script type="text/javascript">
        NEG.run(function(require) {
            var lazyload = require("Biz.Product.LazyLoad")();
            lazyload.init();
        });
    </script>
    <div data-neg-title="cellphoneSecure_title" style="display: none">Price Available at Checkout</div>
    <div data-neg-popid="cellphoneSecure_content" style="display: none"><strong>Why can’t we show you details of this product?</strong><p>Some manufacturers place restrictions on how details of their products may be communicated.</p></div>
    <div id="MAPpopup_Content" style="display: none;">
        <strong>How do I find out the price?</strong><ol><li>Add it to your shopping cart</li><li>Go to checkout, the price will be listed in the Order Summary</li><li>You can remove the product from your order by clicking the "Edit Shopping Cart" button</li><li>To keep it, click the "Submit Order" button</li></ol><strong>Why can’t we show you details of this product?</strong><p>Some manufacturers place restrictions on how details of their products may be communicated.</p>
    </div>
    <div id="CellPhoneMAPpopup_Content" style="display: none;">
        <strong>Why can’t we show you details of this product?</strong><p>Some manufacturers place restrictions on how details of their products may be communicated.</p>
    </div>

			<div class="smartSortXHRNoDataHide">
			</div>
		
			
		
	</div>
	<!--end, bodyArea-->
    <!--body area end-->
    </div><!--end, container-->
    
	
	
    <!--footer area begin-->
    <footer class="page-footer ">
        

<div class="bottomModule  page-footer-inner" id="boxViewed">
	<div id="boxViewedContent">
		<div id="recentlyViewed2013" ></div>
	</div>

	<div id="recentlySearch2013" style="display: none;"></div>
	<div class="bdrBottomModule"></div>
	<script type="text/javascript" language="javascript">
		Web && Web.Config && (Web.Config.HasBloomReach = 0);

		NEG.run(function(require) {
			var moduleType = 0;
    		var enableLazyLoad = true;
    		var recentlyView = require("Biz.Common.RecentlyView2012")(moduleType, Web.Config.HasBloomReach, enableLazyLoad);
    		recentlyView.getData();
    	});
		Biz.Common.CommonPop.init();
	</script>
</div>

	<div id="recentlyMap_Content" style="display: none;">
		<strong>How do I find out the price?</strong><ol><li>Add it to your shopping cart</li><li>Go to checkout, the price will be listed in the Order Summary</li><li>You can remove the product from your order by clicking the "Edit Shopping Cart" button</li><li>To keep it, click the "Submit Order" button</li></ol><strong>Why can’t we show you details of this product?</strong><p>Some manufacturers place restrictions on how details of their products may be communicated.</p>
	</div>


            <nav class="shop-region">
                
                    <div class="page-footer-inner">
                        <span class="shop-region-title">Shop by Region:</span>
                        <ul class="shop-region-list">
                            
                                    <li>
                                        <strong>
                                            United States
                                        </strong>
                                    </li>
                                    <li>
                                        <a href="//www.newegg.ca">
                                            Canada
                                        </a>
                                    </li>
                                
                            <li>
                                <a href="http://www.newegg.cn" rel="nofollow">
                                    China
                                </a>
                            </li>
                            <li>
                                <a href="http://www.newegg.com.tw" rel="nofollow">Taiwan</a>
                            </li>
                        </ul>
                        
        <div id="google_translate_element"></div>
        <script type="text/javascript">
        function googleTranslateElementInit() {
          new google.translate.TranslateElement({pageLanguage: 'en', layout: google.translate.TranslateElement.InlineLayout.HORIZONTAL, gaTrack: true, gaId: 'UA-1147542-1'}, 'google_translate_element');
        }
        </script>
        <script type="text/javascript" src="//translate.google.com/translate_a/element.js?cb=googleTranslateElementInit"></script>
      
                    </div>
                
            </nav>
        
        <nav class="footer-site-map">
            <div class="page-footer-inner nav-row">
                <ul class="nav-col first">
                    <li class="footer-site-map-title">
                        customer service
                    </li>
                    <li class="footer-site-map-item"><a href="https://kb.newegg.com/" title="Customer Help Center">
                        Customer Help Center
                    </a></li>
                    <li class="footer-site-map-item"><a id="trackOrder" rel="nofollow" title="Track an Order" href="https://secure.newegg.com/Guest/OrderLogin.aspx?Source=1">
                        Track an Order
                    </a></li>
                    <li class="footer-site-map-item"><a id="returnItem" rel="nofollow" title="Return an Item" href="https://secure.newegg.com/Guest/OrderLogin.aspx?Source=2">
                        Return an Item
                    </a></li>
                    <li class="footer-site-map-item"><a href="https://kb.newegg.com/Article/Index/12/3?id=1167" title="Return Policy"
                        rel="nofollow">
                        Return Policy
                    </a></li>
                    <li class="footer-site-map-item"><a title="Privacy & Security" href="https://kb.newegg.com/Article/Index/12/3?id=1166">
                        Privacy & Security
                    </a></li>
                    <li class="footer-site-map-item"><a title="Feedback" href="javascript:newegg_inhouse_feedback && newegg_inhouse_feedback.show();" id="footer_feedback">
                        Feedback
                    </a></li>
                    
                </ul>
                <ul class="nav-col">
                    <li class="footer-site-map-title">
                        My Account
                    </li>
                    <li class="footer-site-map-item"><a href="https://secure.newegg.com/NewMyAccount/AccountLogin.aspx" title="Login/Register">
                        Login/Register
                    </a></li>
                    <li class="footer-site-map-item"><a href="https://secure.newegg.com/NewMyAccount/Index.aspx?p=f" rel="nofollow" title="My Dashboard">
                        My Dashboard
                    </a></li>
                    <li class="footer-site-map-item"><a title="Order History" href="https://secure.newegg.com/NewMyAccount/OrderStatus.aspx"
                        rel="nofollow">
                        Order History
                    </a></li>
                    <li class="footer-site-map-item"><a rel="nofollow" title="Returns History" href="https://secure.newegg.com/RMA/Returns.aspx">
                        Returns History
                    </a></li>
                    <li class="footer-site-map-item"><a rel="nofollow" title="Address Book" href="https://secure.newegg.com/NewMyAccount/AddressBook.aspx">
                        Address Book
                    </a></li>
                    
                    <li class="footer-site-map-item"><a rel="nofollow" title="Wish Lists" href="https://secure.newegg.com/WishList/WishListCurrent.aspx">
                        Wish Lists
                    </a></li>
                    <li class="footer-site-map-item"><a href="https://secure.newegg.com/Guest/EmailNotifications.aspx" title="Email Notifications" rel="nofollow">
                        Email Notifications
                    </a></li>
                    
                        <li class="footer-site-map-item"><a href="https://secure.newegg.com/NewMyAccount/NeweggSubscriptions.aspx" title="Subscriptions Orders" rel="nofollow">
                            Subscriptions Orders
                        </a></li>
                    
                    <li class="footer-site-map-item"><a rel="nofollow" title="Auto Notifications" href="https://secure.newegg.com/NewMyAccount/AutoNotifyManagement.aspx">
                        Auto Notifications
                    </a></li>
                </ul>
                <ul class="nav-col">
                    <li class="footer-site-map-title">
                        Company Information
                    </li>
                    <li class="footer-site-map-item"><a title="About Newegg" href="//www.newegg.com/Info/AboutUs.aspx">
                        About Newegg
                    </a></li>
                    <li class="footer-site-map-item"><a title="Awards/Rankings" href="//www.newegg.com/Info/Awards.aspx">
                        Awards/Rankings
                    </a></li>
                    <li class="footer-site-map-item"><a title="Hours and Locations" href="//www.newegg.com/Info/OfficeHours.aspx"
                        rel="nofollow">
                        Hours and Locations
                    </a></li>
                    <li class="footer-site-map-item"><a title="Careers" href="//www.newegg.com/Careers/TabIndex.aspx"
                        rel="nofollow">
                        Careers
                    </a></li>
                    <li class="footer-site-map-item"><a title="Newsroom" href="//www.newegg.com/Info/Newsroom.aspx">
                        Newsroom
                    </a></li>
                    
                    <li class="footer-site-map-item"><a title="Newegg Blog" href="https://blog.newegg.com/"
                        target="_blank">
                        Newegg Blog
                    </a></li>
                    
                        <li class="footer-site-map-item"><a title="Calif. Transparency in Supply Chains Act " href="https://kb.newegg.com/Article/Index/12/3?id=1331">
                            Calif. Transparency <br/>in Supply Chains Act 
                        </a></li>
                    
                </ul>
                <ul class="nav-col">
                    <li class="footer-site-map-title">
                        Tools & Resources
                    </li>
                    <li class="footer-site-map-item"><a title="Sell on Newegg Marketplace" href="//www.newegg.com/sellers/" rel="nofollow">
                        Sell on Newegg Marketplace
                    </a></li>
                    
                        <li class="footer-site-map-item"><a title="Shipped by Newegg" href="http://www.newegg.com/sbn/index.html" rel="nofollow">
                            Shipped by Newegg
                        </a></li>
                    
                    <li class="footer-site-map-item"><a title="Become an Affiliate" href="//www.newegg.com/Info/Affiliates.aspx">
                        Become an Affiliate
                    </a></li>
                    <li class="footer-site-map-item"><a title="Become a Newegg Vendor" href="//promotions.newegg.com/nepro/12-0435/index.html">
                        Become a Newegg Vendor
                    </a></li>
                    <li class="footer-site-map-item"><a title="Site Map" href="//www.newegg.com/Info/SiteMap.aspx">
                        Site Map
                    </a></li>
                    
                        <li class="footer-site-map-item"><a href="//www.newegg.com/ProductSort/BrandList.aspx?Depa=0" title="Shop by Brand" 
                            rel="nofollow">
                            Shop by Brand
                        </a></li>
                    
                    <li class="footer-site-map-item"><a title="Product Review" href="//www.newegg.com/Feedback/Reviews.aspx"
                        rel="nofollow">
                        Product Review
                    </a></li>
                    <li class="footer-site-map-item"><a title="Video Center" href="//www.newegg.tv/"
                        rel="nofollow">
                        Video Center
                    </a></li>
                    <li class="footer-site-map-item"><a title="Rebates" href="//www.newegg.com/Special/Rebate.aspx?name=Rebate-Center">
                        Rebates
                    </a></li>
                    
                        <li class="footer-site-map-item"><a href="//promotions.newegg.com/warranty/14-2470/index.html?name=Trade-In-Program" title="Trade-In Your Items" rel="nofollow">
                            Trade-In Your Items
                        </a></li>
                    
                    <li class="footer-site-map-item"><a title="Mobile Apps" href="http://www.newegg.com/mobile?name=Mobile-Apps"
                        rel="nofollow">
                        Mobile Apps
                    </a></li>
                </ul>
            </div>
        </nav>
        
            <nav class="shop-region">
                <div class="page-footer-inner">
                    <span class="shop-region-title">
                        Affiliated Sites:
                    </span>
                    <ul class="shop-region-list">
                        
                            <li>
                                <a title="Newegg Retail Site(new window)"
                                    target="_blank" rel="nofollow" href="//www.neweggbusiness.com/">
                                     NeweggBusiness
                                    <br>
                                    <span class="shop-region-list-note">
                                        For Business Needs
                                    </span>
                                </a>
                            </li>
                        
                            <li>
                                <a title="Newegg Community(new window)" target="_blank"
                                    rel="nofollow" href="https://community.newegg.com/">
                                    Newegg Community
                                    <br>
                                    <span class="shop-region-list-note">
                                        Newegg Community
                                    </span>

                                </a>
                                </li>
                        
                                <li>
                                <a title="Newegg GameCrate(new window)" target="_blank"
                                    rel="nofollow" href="http://www.gamecrate.com/">
                                    Newegg GameCrate
                                    <br>
                                    <span class="shop-region-list-note">
                                        Gaming and Hardware News
                                    </span>
                                </a>
                                </li>
                        
                    </ul>
                    <ul class="social-follow-list">
                        
                                <li class="social-follow-item">
                                    <a class="fa fa-facebook social-follow-item-icon" target="_blank" href="http://www.facebook.com/Newegg"><span style="display: none">Facebook</span></a>
                                </li>
                                <li class="social-follow-item">
                                    <a class="fa fa-twitter social-follow-item-icon" target="_blank" href="http://twitter.com/Newegg"><span style="display: none">Twitter</span></a>
                                </li>
                                <li class="social-follow-item">
                                    <a class="fa fa-instagram social-follow-item-icon" target="_blank" href="http://instagram.com/newegg/"><span style="display: none">Instagram</span></a>
                                </li>
                                <li class="social-follow-item">
                                    <a class="fa fa-google-plus social-follow-item-icon" target="_blank" href="https://plus.google.com/+Newegg"><span style="display: none">Google</span></a>
                                </li>
                                <li class="social-follow-item">
                                    <a class="fa fa-pinterest social-follow-item-icon" target="_blank" href="http://pinterest.com/newegg/"><span style="display: none">Pinterest</span></a>
                                </li>
                                <li class="social-follow-item">
                                    <a class="fa fa-youtube-play social-follow-item-icon" target="_blank" href="http://www.youtube.com/neweggtv"><span style="display: none">YouTube</span></a>
                                </li>
                                
                                    <li class="social-follow-item">
                                        <a class="fa fa-rss social-follow-item-icon" target="_blank" href="//www.newegg.com/RSS/Index.aspx"><span style="display: none">Rss</span></a>
                                    </li>
                                
                    </ul>
                </div>
            </nav>
        
        <div id="footerAwards" class="footer-awards">
            <script type="text/javascript">
                usingNamespace("Biz.Footer")["Config"] = {
                    veriSignUrl: "https://trustsealinfo.websecurity.norton.com/splash?form_file=fdf/splash.fdf&dn=SECURE.NEWEGG.COM&lang=en"
                };
            </script>

            
                    <a href="javascript:Biz.Common.VeriSign.open();" class="noline">
                        <img src="//images10.newegg.com/WebResource/Themes/2005/Nest/awards_04.gif" style="border: 0;" alt="VeriSign">
                    </a>
                
                    <a class="noline" title="Click for the BBB Business Review of this Computers - Supplies & Parts in Whittier CA" href="http://www.bbb.org/los-angeles/business-reviews/computers-supplies-and-parts/newegg-in-whittier-ca-13146135#sealclick">
                        <img alt="Click for the BBB Business Review of this Computers - Supplies & Parts in Whittier CA"
                            style="border: 0;" src="//images10.newegg.com/WebResource/Themes/2005/Nest/blue-seal-newegginc.png" />
                    </a>
                <script type="text/javascript" src="https://sealserver.trustwave.com/seal.js?code=337bdba159684b989be28d750101ed87"></script><a href="//www.newegg.com/Info/Awards.aspx" class="noline"
                    rel="nofollow">
                    <img src="//images10.newegg.com/WebResource/Themes/2005/Nest/inc500.gif" style="border: 0;" alt="Inc500"></a><span id="gtrust_badges"></span>
                
        </div>
    </footer>
    <!--footer area end-->
    <div class="footer-disclaimer">
        
                    <a href="https://kb.newegg.com/Article/Index/12/3?id=1165" rel="nofollow">
                        Policy &amp; Agreement
                    </a>| <a href="https://kb.newegg.com/Article/Index/12/3?id=1166" rel="nofollow">
                        Privacy Policy
                    </a>
                
        &nbsp;&copy; 2000-2016 Newegg Inc.
		&nbsp;<span id="ieFontCheck" style="width:0px;">A</span>ll rights reserved.
    </div>
    <div id="overlay" class="v655" style="display: none;">
    </div>
    <div id="modal" class="v655" style="display: none;">
        <span class="atnIcon icnInfo">
            <img alt="More Information" src="//images10.newegg.com/WebResource/Themes/2005/Nest/none.gif" /></span> <a class="atnIcon icnClose"
                href="javascript:void();" onclick="display.closeModal();">
                <img alt="close" src="//images10.newegg.com/WebResource/Themes/2005/Nest/none.gif" />Close</a>
        <div class="content">
        </div>
        <img style="display: none;" src="//images10.newegg.com/WebResource/Themes/2005/Nest/loading16.gif" alt="loading" />
    </div>
    
        <div class="v660">
            <div id="modalCommon" style="display: none;">
                <span class="atnIcon icnInfoNew" id="AlarmPanelNewCommon">
                    <img class="iconNew" alt="" src="//images10.newegg.com/WebResource/Themes/2005/Nest/none.gif" />
                    <span class="title"></span></span><a class="atnIcon icnCloseNew" href="javascript:void(0);"
                        onclick="Biz.Common.CommonPop.closePopup();">
                        <img alt="close window" src="//images10.newegg.com/WebResource/Themes/2005/Nest/none.gif" /></a>
                <div class="content popUpLink" id="modalContent">
                </div>
                <div class="footer">
                    <a href="javascript:void(0);" onclick="Biz.Common.CommonPop.closePopup();">
                        close window
                    </a>
                </div>
            </div>
        </div>
    
<img src="//images10.newegg.com/WebResource/Themes/2005/Nest/Gomeznone88.gif" alt="" title="" width="0" height="0" />
<span style="display: none;">
    If the Adobe Reader does not appear when you click on a link for a PDF file, you can <a href='https://www.adobe.com/products/acrobat/readstep.html'>download Adobe Reader from the Adobe web site</a>.
</span>
<script type="text/javascript">
    jQuery(document).ready(function () { Biz.Common.PageFooter.setLink(); });
</script>

	<script type='text/javascript'> Biz.Common.NVTC.generateAndUpdate();</script>






<!-- BEGIN SiteCatalyst -->
<script type='text/javascript' >
jQuery(document).ready(function () {
var parms=[];var re1 = new RegExp('(\\?|&)?icid=([^&]*)');
jQuery('a').each(function (n) {
var m_name = re1.exec(jQuery(this).attr('href'));
if (m_name!=null) { parms.push(m_name[2]);}});
if (parms.length>0) {Biz.Common.SiteCatalyst.sendForOnClick({ 'prop21': parms.join(",")}, 'banner impression');}})
</script>
<script type='text/javascript' >
var scp=typeof(scp)=='undefined'?{}:scp;
scp.cmPageName="PRODUCT\x3a3D PRT XYZ \x7c DA VINCI 2.0 DUO R_28-840-014";
scp.serverName="E4WEB38";
scp.pageType="Browsing;Product Browsing";
scp.pageName="Home \x3e Computer Systems \x3e 3D Printing \x3e 3D Printers \x3e XYZprinting \x3e Item\x23\x3aN82E16828840014\x3aPRODUCT"
scp.searchType="";

scp.events=scp.events?scp.events:"prodView,event20";
scp.isfreeshipping="Free Shipping";
scp.products=scp.products?scp.products:"28-840-014";
scp.brandName=scp.brandName?scp.brandName:"XYZprinting";
scp.sellerName=scp.sellerName?scp.sellerName:"Newegg";
scp.pageNickName="PRODUCT";
Biz.Common.SiteCatalyst.send(scp);
</script>
<!-- END SiteCatalyst -->











				<!-- BEGIN: Google Trusted Store -->
					<script type="text/javascript">
					  var gts = gts || [];
									 
					  gts.push(["id", "69025"]);
					  gts.push(["google_base_offer_id", ""]);
					  gts.push(["google_base_subaccount_id","8277688"]);
					  gts.push(["google_base_country","US"]);
					  gts.push(["google_base_language","en"]);
	          gts.push(["gtsContainer","gtrust_badges"]); 

					  (function() {
						var scheme = (("https:" == document.location.protocol) ? "https://" : "http://");
						var gts = document.createElement("script");
						gts.type = "text/javascript";
						gts.async = true;
						gts.src = scheme + "www.googlecommerce.com/trustedstores/gtmp_compiled.js";
						var s = document.getElementsByTagName("script")[0];
						s.parentNode.insertBefore(gts, s);
					  })();
					</script>
				<!-- END: Google Trusted Store -->
			



      <script type='text/javascript'>
      var utag_data = {
      page_breadcrumb:'Home &gt; Computer Systems &gt; 3D Printing &gt; 3D Printers &gt; XYZprinting &gt; Item#:N82E16828840014',
            page_tab_name:'Computer Systems',
            product_category_id:['340'],
            product_category_name:['3D Printing'],
            product_subcategory_id:['3266'],
            product_subcategory_name:['3D Printers'],
            product_id:['28-840-014'],
            product_web_id:['N82E16828840014'],
            product_title:['XYZprinting da Vinci 2.0 Duo FFF &amp;#40;Fused Filament Fabrication&amp;#41; ABS&amp;#47;PLA Dual Nozzle 3D Printer'],
            product_manufacture:['XYZprinting'],
            product_model:['da Vinci 2.0 Duo'],
            product_instock:['0'],
            product_group_id:['71056745'],
            page_type:'Product',
            site_region:'USA',
            site_currency:'USD',
            page_name:'NewProductDetail',
            search_scope:jQuery('#haQuickSearchStore option:selected').text(),
            user_nvtc:Web.StateManager.Cookies.get(Web.StateManager.Cookies.Name.NVTC),
            user_name:Web.StateManager.Cookies.get(Web.StateManager.Cookies.Name.LOGIN,'LOGINID6'),
            third_party_render:['78b8b16d9d0f6f2e8419ac12fa710f5153f1cee3','2a5e772a0f941c862180037f8a5c118c7abf2f7d']
            
      };
      </script>
      <script type='text/javascript'>
      (function(a,b,c,d){
          a='//tags.tiqcdn.com/utag/newegg/newegg.com/prod/utag.js';
          b=document;
          c='script';
          d=b.createElement(c);
          d.src=a;
          d.type='text/java'+c;
          d.async=true;
          a=b.getElementsByTagName(c)[0];
          a.parentNode.insertBefore(d,a)
      })();
      </script>
     
      


<script type='text/javascript'>var store_data={storeTypeInt:'-1',
storeType:'product',
};</script>

	
	

	<script type="text/javascript">
		var dom = document.getElementById('overlay');
		var div = document.getElementById('container');
		div.appendChild(dom);
	</script>
	
    <script type="text/javascript">_satellite.pageBottom();</script>
</body>
</html>
","rawHeaders":["Content-Type","text/html; charset=utf-8","Server","NEWEGG","GA","0","x-server-id","138","Date","Mon, 19 Dec 2016 01:54:58 GMT","Cteonnt-Length","154262","Age","0","X-Served-By","40009","X-Ver","11301601","x-newegg-flow","PASS","X-newegg-index","0","Vary","Accept-Encoding","Connection","keep-alive","Accept-Ranges","bytes","Cache-Control","private","Content-Encoding","gzip","Transfer-Encoding","chunked"],"url":"http://www.newegg.com/Product/Product.aspx?Item=28-840-014","status":200,"statusText":"OK","varyHeaders":[["Accept-Encoding",null]]},"ttl":null,"stored":1482112499060}