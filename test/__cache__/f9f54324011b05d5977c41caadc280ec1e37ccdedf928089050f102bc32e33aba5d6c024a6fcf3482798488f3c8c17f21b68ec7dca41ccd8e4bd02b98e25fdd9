{"item":{"body":"","rawHeaders":["Content-Encoding","gzip","Content-Type","text/html; charset=utf-8","Server","nginx","Content-Length","6433","Vary","Accept-Encoding","Cache-Control","max-age=21600","Expires","Mon, 19 Dec 2016 07:55:24 GMT","Date","Mon, 19 Dec 2016 01:55:24 GMT","Connection","close","Set-Cookie","PLAY_LANG=en-US; Path=/","Set-Cookie","ealocale=en-us; expires=Mon, 31-Dec-2038 23:59:59 GMT; path=/; domain=.battlefield.com","X-LDNR-NOT-ROOT-HL-NOTSET","yes","X-Frame-Options","SAMEORIGIN"],"url":"https://www.battlefield.com/favicon.ico","status":404,"statusText":"Not Found","varyHeaders":[["Accept-Encoding",null]]},"ttl":null,"stored":1482112524160}