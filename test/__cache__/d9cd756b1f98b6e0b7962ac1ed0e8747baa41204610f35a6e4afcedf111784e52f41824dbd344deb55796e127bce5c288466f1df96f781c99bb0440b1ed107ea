{"item":{"body":"","rawHeaders":["Server","nginx","Date","Mon, 19 Dec 2016 01:55:17 GMT","Content-Type","text/html; charset=utf-8","Transfer-Encoding","chunked","Connection","close","X-ShopId","3257933","X-ShardId","15","Content-Language","en","Content-Encoding","gzip","Content-Security-Policy-Report-Only","default-src 'self' *; connect-src 'self' * wss:; font-src 'self' * data:; frame-src 'self' * shopify-pos:; img-src 'self' * data:; media-src 'self' *; object-src 'self' *; script-src 'self' * 'unsafe-inline' 'unsafe-eval'; style-src 'self' * 'unsafe-inline'; frame-ancestors shop.boostedboards.com; report-uri /csp-report/c38c6c08-561f-451e-984f-46cee6e1f901?source%5Baction%5D=products&source%5Bcontroller%5D=storefront_section%2Fshop&source%5Bsection%5D=storefront;","X-XSS-Protection","1; mode=block; report=/xss-report/c38c6c08-561f-451e-984f-46cee6e1f901?source%5Baction%5D=products&source%5Bcontroller%5D=storefront_section%2Fshop&source%5Bsection%5D=storefront","ETag","cacheable:45bd9fff69e7927e84d17b4dfebbd15b","X-Alternate-Cache-Key","cacheable:47beefe32f1ccd9ed666e05813f4e8f3","X-Cache","hit, server","Set-Cookie","_session_id=5c9d5d95ea3729b38835ab4cc175da5e; path=/; HttpOnly","P3P","CP=\"NOI DSP COR NID ADMa OPTa OUR NOR\"","X-Dc","chi2,ash","X-Download-Options","noopen","X-Permitted-Cross-Domain-Policies","none","X-Content-Type-Options","nosniff","X-Content-Type-Options","nosniff","X-Request-ID","c38c6c08-561f-451e-984f-46cee6e1f901","Set-Cookie","customer_sig=; path=/; expires=Fri, 19 Dec 2036 01:55:17 -0000; HttpOnly","Set-Cookie","_orig_referrer=; Expires=Mon, 02-Jan-17 01:55:17 GMT; Path=/; HttpOnly","Set-Cookie","_landing_page=%2Fproducts%2Fboosted-dual-plus%3Fvariant%3D1141824744; Expires=Mon, 02-Jan-17 01:55:17 GMT; Path=/; HttpOnly","Set-Cookie","cart_sig=; path=/; expires=Mon, 02 Jan 2017 01:55:17 -0000; HttpOnly","X-Content-Type-Options","nosniff"],"url":"http://shop.boostedboards.com/products/boosted-dual-plus?variant=1141824744","status":200,"statusText":"OK","varyHeaders":[]},"ttl":null,"stored":1482112518217}