{"item":{"body":"","rawHeaders":["Server","nginx","Date","Mon, 05 Dec 2016 06:26:15 GMT","Content-Type","text/html; charset=utf-8","Transfer-Encoding","chunked","Connection","close","X-ShopId","3257933","X-ShardId","15","Content-Language","en","Content-Encoding","gzip","Content-Security-Policy-Report-Only","default-src 'self' *; connect-src 'self' * wss:; font-src 'self' * data:; frame-src 'self' * shopify-pos:; img-src 'self' * data:; media-src 'self' *; object-src 'self' *; script-src 'self' * 'unsafe-inline' 'unsafe-eval'; style-src 'self' * 'unsafe-inline'; frame-ancestors shop.boostedboards.com; report-uri /csp-report/3995f8d4-783d-4d70-8d82-2f3d7e75191f?source%5Baction%5D=products&source%5Bcontroller%5D=storefront_section%2Fshop&source%5Bsection%5D=storefront;","X-XSS-Protection","1; mode=block; report=/xss-report/3995f8d4-783d-4d70-8d82-2f3d7e75191f?source%5Baction%5D=products&source%5Bcontroller%5D=storefront_section%2Fshop&source%5Bsection%5D=storefront","ETag","cacheable:2f2e33710b177edacf3cc8c476881950","X-Alternate-Cache-Key","cacheable:47beefe32f1ccd9ed666e05813f4e8f3","X-Cache","hit, server","Set-Cookie","_orig_referrer=; Expires=Mon, 19-Dec-16 06:26:15 GMT; Path=/; HttpOnly","P3P","CP=\"NOI DSP COR NID ADMa OPTa OUR NOR\"","X-Dc","chi2,ash","X-Download-Options","noopen","X-Permitted-Cross-Domain-Policies","none","X-Content-Type-Options","nosniff","X-Content-Type-Options","nosniff","X-Request-ID","3995f8d4-783d-4d70-8d82-2f3d7e75191f","Set-Cookie","_landing_page=%2Fproducts%2Fboosted-dual-plus%3Fvariant%3D1141824744; Expires=Mon, 19-Dec-16 06:26:15 GMT; Path=/; HttpOnly","Set-Cookie","customer_sig=; path=/; expires=Fri, 05 Dec 2036 06:26:15 -0000; HttpOnly","Set-Cookie","_session_id=c9d98d1a47714a650925ee196eae84f0; path=/; HttpOnly","Set-Cookie","cart_sig=; path=/; expires=Mon, 19 Dec 2016 06:26:15 -0000; HttpOnly","X-Content-Type-Options","nosniff","Age","531"],"url":"http://shop.boostedboards.com/products/boosted-dual-plus?variant=1141824744","status":200,"statusText":"OK","varyHeaders":[]},"ttl":null,"stored":1480969626868}