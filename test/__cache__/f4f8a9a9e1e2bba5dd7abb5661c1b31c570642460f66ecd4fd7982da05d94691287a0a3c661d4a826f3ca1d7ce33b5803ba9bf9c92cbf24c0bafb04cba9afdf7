{"item":{"body":"","rawHeaders":["Strict-Transport-Security","max-age=31536000; includeSubdomains","X-Content-Type-Options","nosniff","Content-Language","en","Expires","Mon, 05 Dec 2016 07:26:01 GMT","Vary","Accept-Language","Last-Modified","Wed, 22 Jun 2016 20:38:53 GMT","X-XSS-Protection","1; mode=block","Cache-Control","must_revalidate, public, max-age=3600","X-Frame-Options","SAMEORIGIN","Content-Type","text/html; charset=utf-8","X-Cloud-Trace-Context","6959a8e02d00864cb80eec71845a9bb3","Date","Mon, 05 Dec 2016 06:26:01 GMT","Server","Google Frontend","Content-Length","58226","Alt-Svc","quic=\":443\"; ma=2592000; v=\"36,35,34\"","Connection","close","Age","531"],"url":"https://developers.google.com/search/docs/guides/intro-structured-data","status":200,"statusText":"OK","varyHeaders":[["Accept-Language",null]]},"ttl":null,"stored":1480969625888}