{"item":{"body":"","rawHeaders":["Server","GitHub.com","Date","Mon, 05 Dec 2016 06:26:21 GMT","Content-Type","text/html; charset=utf-8","Transfer-Encoding","chunked","Connection","close","Status","200 OK","Cache-Control","no-cache","Vary","X-PJAX","X-UA-Compatible","IE=Edge,chrome=1","Set-Cookie","logged_in=no; domain=.github.com; path=/; expires=Fri, 05 Dec 2036 06:26:21 -0000; secure; HttpOnly","Set-Cookie","_gh_sess=eyJzZXNzaW9uX2lkIjoiOTNjNWIwMGY5ZTAyMjhkMzZkZGM2OWQ4MzYyMWUxMzUiLCJfY3NyZl90b2tlbiI6Ikw0alk5eUZOTVJBTGRLc05oU1VZQ0lFbjhhMmhtVTRQd1VtQk5VekMxRWM9In0%3D--21ac8db445f7a6e6de2599c20fcf65af87040fe8; path=/; secure; HttpOnly","X-Request-Id","50d46d0802628eb70c9cc56995d48bbb","X-Runtime","0.013008","Content-Security-Policy","default-src 'none'; base-uri 'self'; block-all-mixed-content; child-src render.githubusercontent.com; connect-src 'self' uploads.github.com status.github.com collector.githubapp.com api.github.com www.google-analytics.com github-cloud.s3.amazonaws.com wss://live.github.com; font-src assets-cdn.github.com; form-action 'self' github.com gist.github.com; frame-ancestors 'none'; frame-src render.githubusercontent.com; img-src 'self' data: assets-cdn.github.com identicons.github.com collector.githubapp.com github-cloud.s3.amazonaws.com *.githubusercontent.com; media-src 'none'; script-src assets-cdn.github.com; style-src 'unsafe-inline' assets-cdn.github.com","Strict-Transport-Security","max-age=31536000; includeSubdomains; preload","Public-Key-Pins","max-age=5184000; pin-sha256=\"WoiWRyIOVNa9ihaBciRSC7XHjliYS9VwUGOIud4PB18=\"; pin-sha256=\"RRM1dGqnDFsCJXBTHky16vi1obOlCgFFn/yOhI/y+ho=\"; pin-sha256=\"k2v657xBsOVe1PQRwOsHsw3bsGT2VzIqz5K+59sNQws=\"; pin-sha256=\"K87oWBWM9UZfyddvDfoxL+8lpNyoUB2ptGtn0fv6G2Q=\"; pin-sha256=\"IQBnNBEiFuhj+8x6X8XLgh01V9Ic5/V3IRQLNFFc7v4=\"; pin-sha256=\"iie1VXtL7HzAMF+/PVPR9xzT80kQxdZeJ+zduCB3uj0=\"; pin-sha256=\"LvRiGEjRqfzurezaWuj8Wie2gyHMrW5Q06LspMnox7A=\"; includeSubDomains","X-Content-Type-Options","nosniff","X-Frame-Options","deny","X-XSS-Protection","1; mode=block","Vary","Accept-Encoding","X-Served-By","cd77d0e314015a41e6ff7ecd541d504d","Content-Encoding","gzip","X-GitHub-Request-Id","424BF412:1CD3:2BFF78BF:5845088D","Age","532"],"url":"https://github.com/","status":200,"statusText":"OK","varyHeaders":[["X-PJAX",null]]},"ttl":null,"stored":1480969627473}