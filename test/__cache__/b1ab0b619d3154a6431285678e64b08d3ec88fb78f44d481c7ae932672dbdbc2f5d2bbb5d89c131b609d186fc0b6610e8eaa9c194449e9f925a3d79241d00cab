{"item":{"body":"








<!DOCTYPE html>
<html
xmlns:og="http://ogp.me/ns#"
xmlns:fb="http://www.facebook.com/2008/fbml">
    <head>
        <meta charset="utf-8">
        <meta http-equiv="X-UA-Compatible" content="IE=edge">

    <meta name="apple-itunes-app" content="app-id=342792525, app-argument=imdb:///title/tt1375666?src=mdot">
        
    
            <script type="text/javascript">var ue_t0=window.ue_t0||+new Date();</script>
            <script type="text/javascript">
                var ue_mid = "A1EVAM02EL8SFB"; 
                var ue_sn = "www.imdb.com";  
                var ue_furl = "fls-na.amazon.com";
                var ue_sid = "244-9544173-1430077";
                var ue_id = "1EF5D7PVBB78RP27QXDQ";
                (function(e){var c=e;var a=c.ue||{};a.main_scope="mainscopecsm";a.q=[];a.t0=c.ue_t0||+new Date();a.d=g;function g(h){return +new Date()-(h?0:a.t0)}function d(h){return function(){a.q.push({n:h,a:arguments,t:a.d()})}}function b(m,l,h,j,i){var k={m:m,f:l,l:h,c:""+j,err:i,fromOnError:1,args:arguments};c.ueLogError(k);return false}b.skipTrace=1;e.onerror=b;function f(){c.uex("ld")}if(e.addEventListener){e.addEventListener("load",f,false)}else{if(e.attachEvent){e.attachEvent("onload",f)}}a.tag=d("tag");a.log=d("log");a.reset=d("rst");c.ue_csm=c;c.ue=a;c.ueLogError=d("err");c.ues=d("ues");c.uet=d("uet");c.uex=d("uex");c.uet("ue")})(window);(function(e,d){var a=e.ue||{};function c(g){if(!g){return}var f=d.head||d.getElementsByTagName("head")[0]||d.documentElement,h=d.createElement("script");h.async="async";h.src=g;f.insertBefore(h,f.firstChild)}function b(){var k=e.ue_cdn||"z-ecx.images-amazon.com",g=e.ue_cdns||"images-na.ssl-images-amazon.com",j="/images/G/01/csminstrumentation/",h=e.ue_file||"ue-full-11e51f253e8ad9d145f4ed644b40f692._V1_.js",f,i;if(h.indexOf("NSTRUMENTATION_FIL")>=0){return}if("ue_https" in e){f=e.ue_https}else{f=e.location&&e.location.protocol=="https:"?1:0}i=f?"https://":"http://";i+=f?g:k;i+=j;i+=h;c(i)}if(!e.ue_inline){if(a.loadUEFull){a.loadUEFull()}else{b()}}a.uels=c;e.ue=a})(window,document);
                if (!('CS' in window)) { window.CS = {}; }
                    window.CS.loginLocation = "https://www.imdb.com/registration/signin?u=%2Ftitle%2Ftt1375666%2F";
            </script>
 

        
        <script type="text/javascript">var IMDbTimer={starttime: new Date().getTime(),pt:'java'};</script>
        
  <script>(function(t){ (t.events = t.events || {})["csm_head_pre_title"] = new Date().getTime(); })(IMDbTimer);</script>
        <title>Inception (2010) - IMDb</title>
  <script>(function(t){ (t.events = t.events || {})["csm_head_post_title"] = new Date().getTime(); })(IMDbTimer);</script>
        
            <link rel="canonical" href="http://www.imdb.com/title/tt1375666/" />
            <meta property="og:url" content="http://www.imdb.com/title/tt1375666/" />
        
  <script>(function(t){ (t.events = t.events || {})["csm_head_pre_icon"] = new Date().getTime(); })(IMDbTimer);</script>
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/safari-favicon-517611381._CB522318126_.svg" mask rel="icon" sizes="any">
        <link rel="icon" type="image/ico" href="http://ia.media-imdb.com/images/G/01/imdb/images/favicon-2165806970._CB522318090_.ico" />
        <meta name="theme-color" content="#000000" />
        <link rel="shortcut icon" type="image/x-icon" href="http://ia.media-imdb.com/images/G/01/imdb/images/desktop-favicon-2165806970._CB522317956_.ico" />
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/mobile/apple-touch-icon-web-4151659188._CB522318140_.png" rel="apple-touch-icon"> 
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/mobile/apple-touch-icon-web-76x76-53536248._CB522318124_.png" rel="apple-touch-icon" sizes="76x76"> 
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/mobile/apple-touch-icon-web-120x120-2442878471._CB522317855_.png" rel="apple-touch-icon" sizes="120x120"> 
        <link href="http://ia.media-imdb.com/images/G/01/imdb/images/mobile/apple-touch-icon-web-152x152-1475823641._CB522318083_.png" rel="apple-touch-icon" sizes="152x152">            
        <link rel="search" type="application/opensearchdescription+xml" href="http://ia.media-imdb.com/images/G/01/imdb/images/imdbsearch-3349468880._CB522317914_.xml" title="IMDb" />
  <script>(function(t){ (t.events = t.events || {})["csm_head_post_icon"] = new Date().getTime(); })(IMDbTimer);</script>
        
        <meta property="pageId" content="tt1375666" />
        <meta property="pageType" content="title" />
        <meta property="subpageType" content="main" />


        <link rel='image_src' href="https://images-na.ssl-images-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_UY1200_CR90,0,630,1200_AL_.jpg">
        <meta property='og:image' content="https://images-na.ssl-images-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_UY1200_CR90,0,630,1200_AL_.jpg" />

        <meta property='og:type' content="video.movie" />
    <meta property='fb:app_id' content='115109575169727' />

    <meta property='og:title' content="Inception (2010)" />
    <meta property='og:site_name' content='IMDb' />
    <meta name="title" content="Inception (2010) - IMDb" />
        <meta name="description" content="Directed by Christopher Nolan.  With Leonardo DiCaprio, Joseph Gordon-Levitt, Ellen Page, Ken Watanabe. A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO." />
        <meta property="og:description" content="Directed by Christopher Nolan.  With Leonardo DiCaprio, Joseph Gordon-Levitt, Ellen Page, Ken Watanabe. A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO." />
        <meta name="keywords" content="Reviews, Showtimes, DVDs, Photos, Message Boards, User Ratings, Synopsis, Trailers, Credits" />
        <meta name="request_id" content="1EF5D7PVBB78RP27QXDQ" />
        
  <script>(function(t){ (t.events = t.events || {})["csm_head_pre_css"] = new Date().getTime(); })(IMDbTimer);</script>
<!-- h=ics-1a-c3-2xl-07a6f690.us-east-1 -->

            <link rel="stylesheet" type="text/css" href="http://ia.media-imdb.com/images/G/01/imdb/css/collections/title-flat-v2-877276176._CB522318275_.css" />
        <noscript>
            <link rel="stylesheet" type="text/css" href="http://ia.media-imdb.com/images/G/01/imdb/css/wheel/nojs-2827156349._CB522318292_.css">
        </noscript>
  <script>(function(t){ (t.events = t.events || {})["csm_head_post_css"] = new Date().getTime(); })(IMDbTimer);</script>
        
  <script>(function(t){ (t.events = t.events || {})["csm_head_pre_ads"] = new Date().getTime(); })(IMDbTimer);</script>
        <script>
window.ads_js_start = new Date().getTime();
var imdbads = imdbads || {}; imdbads.cmd = imdbads.cmd || [];
</script>
<!-- begin SRA -->
<script>
!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";a(2)},{2:2}],2:[function(a,b,c){"use strict";!function(){var a,b,c=function(a){return"[object Array]"===Object.prototype.toString.call(a)},d=function(a,b){for(var c=0;c<a.length;c++)c in a&&b.call(null,a[c],c)},e=[],f=!1,g=!1,h=function(){var a=[],b=[],c={};return d(e,function(e){var f="";d(e.dartsite.split("/"),function(b){""!==b&&(b in c||(c[b]=a.length,a.push(b)),f+="/"+c[b])}),b.push(f)}),{iu_parts:a,enc_prev_ius:b}},i=function(){var a=[];return d(e,function(b){var c=[];d(b.sizes,function(a){c.push(a.join("x"))}),a.push(c.join("|"))}),a},j=function(){var a=[];return d(e,function(b){a.push(k(b.targeting))}),a.join("|")},k=function(a,b){var c,d=[];for(var e in a){c=[];for(var f=0;f<a[e].length;f++)c.push(encodeURIComponent(a[e][f]));b?d.push(e+"="+encodeURIComponent(c.join(","))):d.push(e+"="+c.join(","))}return d.join("&")},l=function(){var a=+new Date;g||document.readyState&&"loaded"!==document.readyState||(g=!0,f&&imdbads.cmd.push(function(){for(var b=0;b<e.length;b++)generic.monitoring.record_metric(e[b].name+".fail",csm.duration(a))}))};window.tinygpt={define_slot:function(a,b,c,d){e.push({dartsite:a.replace(/\/$/,""),sizes:b,name:c,targeting:d})},set_targeting:function(b){a=b},callback:function(a){for(var c,d,f={},g=+new Date,h=0;h<e.length;h++)c=e[h].dartsite,d=e[h].name,a[h][c]?f[d]=a[h][c]:window.console&&console.error&&console.error("Unable to correlate GPT response for "+d);imdbads.cmd.push(function(){for(var a=0;a<e.length;a++)ad_utils.slot_events.trigger(e[a].name,"request",{timestamp:b}),ad_utils.slot_events.trigger(e[a].name,"tagdeliver",{timestamp:g});ad_utils.gpt.handle_response(f)})},send:function(){var d,g,m=[],n=function(a,b){c(b)&&(b=b.join(",")),b&&m.push(a+"="+encodeURIComponent(""+b))};if(0===e.length)return void tinygpt.callback({});n("gdfp_req","1"),n("correlator",Math.floor(4503599627370496*Math.random())),n("output","json_html"),n("callback","tinygpt.callback"),n("impl","fifs"),n("json_a","1");var o=h();n("iu_parts",o.iu_parts),n("enc_prev_ius",o.enc_prev_ius),n("prev_iu_szs",i()),n("prev_scp",j()),n("cust_params",k(a,!0)),d=document.createElement("script"),g=document.getElementsByTagName("script")[0],d.async=!0,d.type="text/javascript",d.src="http://pubads.g.doubleclick.net/gampad/ads?"+m.join("&"),d.id="tinygpt",d.onload=d.onerror=d.onreadystatechange=l,f=!0,g.parentNode.insertBefore(d,g),b=+new Date}}}()},{}]},{},[1]);</script>
<script>
tinygpt.define_slot('/4215/imdb2.consumer.title/maindetails',
[[728,90],[1008,150],[1008,200],[1008,30],[970,250],[1008,400],[9,1]],
'top_ad',
{
'p': ['top','t']
});
tinygpt.define_slot('/4215/imdb2.consumer.title/maindetails',
[[300,250],[300,600],[300,300],[11,1]],
'top_rhs',
{
'p': ['tr']
});
tinygpt.set_targeting({
'tt' : ['f'],
'ab' : ['c'],
'coo' : ['us','gb'],
'b' : ['t25','t250','t250a','glbst','loop'],
'c' : ['1'],
'g' : ['ac','ad','sf','baa','th'],
'bpx' : ['2'],
'm' : ['PG13'],
'fv' : ['1'],
'md' : ['tt1375666'],
'mh' : ['PG13'],
'id' : ['tt1375666'],
'ml' : ['PG13'],
'u': ['073968080611'],
'oe': ['utf-8']
});
tinygpt.send();
</script>
<!-- begin ads header -->
<script src="https://ia.media-imdb.com/images/G/01/imdbads/js/collections/tarnhelm-1221404212._CB522318283_.js"></script>
<script id="ads_doWithAds">
doWithAds = function(inside, failureMessage){
if ('consoleLog' in window &&
'generic' in window &&
'ad_utils' in window &&
'custom' in window &&
'monitoring' in generic &&
'document_is_ready' in generic) {
try{
inside.call(this);
}catch(e) {
if ( window.ueLogError ) {
if(typeof failureMessage !== 'undefined'){
e.message = failureMessage;
}
e.attribution = "Advertising";
e.logLevel = "ERROR";
ueLogError(e);
}
if( (document.location.hash.match('debug=1')) &&
(typeof failureMessage !== 'undefined') ){
console.error(failureMessage);
}
}
} else {
if( (document.location.hash.match('debug=1')) &&
(typeof failureMessage !== 'undefined') ){
console.error(failureMessage);
}
}
};
</script><script id="ads_monitoring_setup">
doWithAds(function(){
generic.monitoring.set_forester_info("title");
generic.monitoring.set_twilight_info(
"title",
"US",
"717f74899b5b72f9f521c5d99f5d9ac28b824f86",
"2016-12-19T01%3A53%3A20GMT",
"http://s.media-imdb.com/twilight/?",
"consumer");
generic.monitoring.start_timing("page_load");
generic.seconds_to_midnight = 22000;
generic.days_to_midnight = 0.2546296417713165;
},"Generic not defined, skipping monitoring setup.");
</script>
<script src="https://images-na.ssl-images-amazon.com/images/G/01/dacx/sf/DAsf-1.34_FX1._V275812351_.js"></script>
<script id="ads_safeframe_setup">
doWithAds(function(){
if (typeof DAsf != 'undefined' && typeof DAsf.registerCustomMessageListener === 'function') {
DAsf.registerCustomMessageListener('adFeedback', window.ad_utils.show_ad_feedback);
DAsf.registerCustomMessageListener('sendMetrics', window.generic.monitoring.update_sf_slot_metrics);
DAsf.registerCustomMessageListener('expand', window.ad_utils.expand_overlay);
DAsf.registerCustomMessageListener('collapse', window.ad_utils.collapse_overlay);
}
},"ads js missing, skipping safeframe setup.");
</script>
<script id="ads_general_setup">
doWithAds(function(){
generic.monitoring.record_metric("ads_js_request_to_done", (new Date().getTime()) - window.ads_js_start);
generic.send_csm_head_metrics && generic.send_csm_head_metrics();
ad_utils.set_slots_on_page({ 'injected_billboard':1, 'injected_navstrip':1, 'bottom_ad':1, 'top_ad':1, 'navboard':1, 'btf_rhs2':1, 'top_rhs':1, 'rhs_cornerstone':1 });
custom.full_page.data_url = "https://ia.media-imdb.com/images/G/01/imdbads/js/graffiti_data-2014630474._CB522318289_.js";
consoleLog('advertising initialized','ads');
},"ads js missing, skipping general setup.");
var _gaq = _gaq || [];
_gaq.push(['_setCustomVar', 4, 'ads_abtest_treatment', 'c']);
</script>
<script>doWithAds(function() { ad_utils.ads_header.done(); });</script>
<!-- end ads header -->
        <script  type="text/javascript">
            // ensures js doesn't die if ads service fails.  
            // Note that we need to define the js here, since ad js is being rendered inline after this.
            (function(f) {
                // Fallback javascript, when the ad Service call fails.  
                
                if((window.csm == null || window.generic == null || window.consoleLog == null)) {
                    if (window.console && console.log) {
                        console.log("one or more of window.csm, window.generic or window.consoleLog has been stubbed...");
                    }
                }
                
                window.csm = window.csm || { measure:f, record:f, duration:f, listen:f, metrics:{} };
                window.generic = window.generic || { monitoring: { start_timing: f, stop_timing: f } };
                window.consoleLog = window.consoleLog || f;
            })(function() {});
        </script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_head_delivery_finished');
    }
  </script>
        </head>
    <body id="styleguide-v2" class="fixed">
<script>
    if (typeof uet == 'function') {
      uet("bb");
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_body_delivery_started');
    }
  </script>
        <div id="wrapper">
            <div id="root" class="redesign">
<script>
    if (typeof uet == 'function') {
      uet("ns");
    }
</script>
<div id="nb20" class="navbarSprite">
<div id="supertab">	
	<!-- begin TOP_AD -->
<div id="top_ad_wrapper" class="dfp_slot">
<script>
window.generic = window.generic || {};
generic.alphalfaComponents = {
"alphalfa-container.html" : "https://ia.media-imdb.com/images/G/01/imdbads/alphalfa-container-253150330._CB522318155_.html",
"js/collections/alphalfa.js" : "https://ia.media-imdb.com/images/G/01/imdbads/js/collections/alphalfa-3292747090._CB522318325_.js"
};
</script>
<script type="text/javascript">
doWithAds(function(){
ad_utils.register_ad('top_ad');
});
</script>
<iframe data-dart-params="#imdb2.consumer.title/maindetails;!TILE!;sz=728x90,1008x150,1008x200,1008x30,970x250,1008x400,9x1;p=top;p=t;g=ac;g=ad;g=sf;g=baa;g=th;tt=f;m=PG13;mh=PG13;ml=PG13;coo=us;coo=gb;b=t25;b=t250;b=t250a;b=glbst;b=loop;fv=1;id=tt1375666;ab=c;bpx=2;md=tt1375666;c=1;oe=utf-8;[CLIENT_SIDE_KEYVALUES];u=073968080611;ord=073968080611?" id="top_ad" name="top_ad" class="yesScript" width="0" height="0" data-original-width="0" data-original-height="0" data-config-width="0" data-config-height="0" data-cookie-width="null" data-cookie-height="null" marginwidth="0" marginheight="0" frameborder="0" scrolling="no" allowtransparency="true" onload="doWithAds.call(this, function(){ ad_utils.on_ad_load(this); });"></iframe>
<noscript> <a href="http://pubads.g.doubleclick.net/gampad/jump?&iu=4215/imdb2.consumer.title/maindetails&sz=728x90|1008x150|1008x200|1008x30|970x250|1008x400|9x1&t=p%3Dtop%26p%3Dt%26g%3Dac%26g%3Dad%26g%3Dsf%26g%3Dbaa%26g%3Dth%26tt%3Df%26m%3DPG13%26mh%3DPG13%26ml%3DPG13%26coo%3Dus%26coo%3Dgb%26b%3Dt25%26b%3Dt250%26b%3Dt250a%26b%3Dglbst%26b%3Dloop%26fv%3D1%26id%3Dtt1375666%26ab%3Dc%26bpx%3D2%26md%3Dtt1375666%26c%3D1&tile=0&c=073968080611" target="_blank"> <img src="http://pubads.g.doubleclick.net/gampad/ad?&iu=4215/imdb2.consumer.title/maindetails&sz=728x90|1008x150|1008x200|1008x30|970x250|1008x400|9x1&t=p%3Dtop%26p%3Dt%26g%3Dac%26g%3Dad%26g%3Dsf%26g%3Dbaa%26g%3Dth%26tt%3Df%26m%3DPG13%26mh%3DPG13%26ml%3DPG13%26coo%3Dus%26coo%3Dgb%26b%3Dt25%26b%3Dt250%26b%3Dt250a%26b%3Dglbst%26b%3Dloop%26fv%3D1%26id%3Dtt1375666%26ab%3Dc%26bpx%3D2%26md%3Dtt1375666%26c%3D1&tile=0&c=073968080611" border="0" alt="advertisement" /> </a> </noscript>
</div>
<div id="top_ad_reflow_helper"></div>
<script>
doWithAds(function(){
ad_utils.gpt.render_ad('top_ad');
}, "ad_utils not defined, unable to render client-side GPT ad.");
</script>
<!-- End TOP_AD -->
	
</div>
  <div id="navbar" class="navbarSprite">
<noscript>
  <link rel="stylesheet" type="text/css" href="http://ia.media-imdb.com/images/G/01/imdb/css/site/consumer-navbar-no-js-3652782989._CB522318326_.css" />
</noscript>
<!--[if IE]><link rel="stylesheet" type="text/css" href="http://ia.media-imdb.com/images/G/01/imdb/css/site/consumer-navbar-ie-2133976414._CB522318112_.css"><![endif]-->
<span id="home_img_holder">
<a href="/?ref_=nv_home"
title="Home" class="navbarSprite" id="home_img" ></a>  <span class="alt_logo">
    <a href="/?ref_=nv_home"
title="Home" >IMDb</a>
  </span>
</span>
<form
 method="get"
 action="/find"
 class="nav-searchbar-inner"
 id="navbar-form"

>
  <div id="nb_search">
    <noscript><div id="more_if_no_javascript"><a href="/search/">More</a></div></noscript>
    <button id="navbar-submit-button" class="primary btn" type="submit"><div class="magnifyingglass navbarSprite"></div></button>
    <input type="hidden" name="ref_" value="nv_sr_fn" />
    <input type="text" autocomplete="off" value="" name="q" id="navbar-query" placeholder="Find Movies, TV shows, Celebrities and more...">
    <div class="quicksearch_dropdown_wrapper">
      <select name="s" id="quicksearch" class="quicksearch_dropdown navbarSprite"
              onchange="jumpMenu(this); suggestionsearch_dropdown_choice(this);">
        <option value="all" >All</option>
        <option value="tt" >Titles</option>
        <option value="ep" >TV Episodes</option>
        <option value="nm" >Names</option>
        <option value="co" >Companies</option>
        <option value="kw" >Keywords</option>
        <option value="ch" >Characters</option>
        <option value="qu" >Quotes</option>
        <option value="bi" >Bios</option>
        <option value="pl" >Plots</option>
      </select>
    </div>
    <div id="navbar-suggestionsearch"></div>
  </div>
</form>
<div id="megaMenu">
    <ul id="consumer_main_nav" class="main_nav">
        <li class="spacer"></li>
        <li class="css_nav_item" id="navTitleMenu">
            <p class="navCategory">
                <a href="/movies-in-theaters/?ref_=nv_tp_inth_1"
>Movies</a>,
                <a href="/chart/toptv/?ref_=nv_tp_tv250_2"
>TV</a><br />
                & <a href="/showtimes/?ref_=nv_tp_sh_3"
>Showtimes</a></p>
            <span class="downArrow"></span>
            <div id="navMenu1" class="sub_nav">
                <div id="titleAd"></div>
                <div class="subNavListContainer">
                    <h5>MOVIES</h5>
                    <ul>
                        <li><a href="/movies-in-theaters/?ref_=nv_mv_inth_1"
>In Theaters</a></li>
                        <li><a href="/showtimes/?ref_=nv_mv_sh_2"
>Showtimes & Tickets</a></li>
                        <li><a href="/trailers/?ref_=nv_mv_tr_3"
>Latest Trailers</a></li>
                        <li><a href="/movies-coming-soon/?ref_=nv_mv_cs_4"
>Coming Soon</a></li>
                        <li><a href="/calendar/?ref_=nv_mv_cal_5"
>Release Calendar</a></li>
                        <li><a href="/chart/top?ref_=nv_mv_250_6"
>Top Rated Movies</a></li>
                        <li><a href="/chart/top-indian-movies?ref_=nv_mv_250_in_7"
>Top Rated Indian Movies</a></li>
                        <li><a href="/chart/moviemeter?ref_=nv_mv_mpm_8"
>Most Popular Movies</a></li>
                    </ul>
                    <h5>CHARTS & TRENDS</h5>
                    <ul>
                        <li><a href="/chart/?ref_=nv_ch_cht_1"
>Box Office</a></li>
                        <li><a href="/search/title?count=100&groups=oscar_best_picture_winners&sort=year,desc&ref_=nv_ch_osc_2"
>Oscar Winners</a></li>
                        <li><a href="/genre/?ref_=nv_ch_gr_3"
>Most Popular by Genre</a></li>
                    </ul>
                </div>
                <div class="subNavListContainer">
                    <h5>TV & VIDEO</h5>
                    <ul>
                        <li><a href="/tv/?ref_=nv_tvv_tv_1"
>IMDb TV</a></li>
                        <li><a href="/tvgrid/?ref_=nv_tvv_ls_2"
>On Tonight</a></li>
                        <li><a href="/chart/toptv/?ref_=nv_tvv_250_3"
>Top Rated TV Shows</a></li>
                        <li><a href="/chart/tvmeter?ref_=nv_tvv_mptv_4"
>Most Popular TV Shows</a></li>
                        <li><a href="/feature/watch-now-on-amazon/?ref_=nv_tvv_wn_5"
>Watch Now on Amazon</a></li>
                        <li><a href="/sections/dvd/?ref_=nv_tvv_dvd_6"
>DVD & Blu-Ray</a></li>
                    </ul>
                    <h5>SPECIAL FEATURES</h5>
                    <ul>
                        <li><a href="/imdbpicks/?ref_=nv_sf_picks_1"
>IMDb Picks</a></li>
                        <li><a href="/scary-good/?ref_=nv_sf_sg_2"
>Scary Good</a></li>
                        <li><a href="/amazon-originals/?ref_=nv_sf_ams_3"
>Amazon Originals</a></li>
                        <li><a href="/streaming/?ref_=nv_sf_stm_4"
>Holiday Streaming</a></li>
                        <li><a href="/star-wars/?ref_=nv_sf_stw_5"
>Star Wars on IMDb</a></li>
                    </ul>
                </div>
            </div>
        </li>
        <li class="spacer"></li>
        <li class="css_nav_item" id="navNameMenu">
            <p class="navCategory">
                <a href="/search/name?gender=male,female&ref_=nv_tp_cel_1"
>Celebs</a>,
                <a href="/awards-central/?ref_=nv_tp_awrd_2"
>Events</a><br />
                & <a href="/gallery/rg784964352?ref_=nv_tp_ph_3"
>Photos</a></p>
            <span class="downArrow"></span>
            <div id="navMenu2" class="sub_nav">
                <div id="nameAd"></div>
                <div class="subNavListContainer">
                    <h5>CELEBS</h5>
                    <ul>
                            <li><a href="/search/name?birth_monthday=12-19&refine=birth_monthday&ref_=nv_cel_brn_1"
>Born Today</a></li>
                        <li><a href="/news/celebrity?ref_=nv_cel_nw_2"
>Celebrity News</a></li>
                        <li><a href="/search/name?gender=male,female&ref_=nv_cel_m_3"
>Most Popular Celebs</a></li>
                    </ul>
                    <h5>PHOTOS</h5>
                    <ul>
                        <li><a href="/gallery/rg1859820288?ref_=nv_ph_ls_1"
>Latest Stills</a></li>
                        <li><a href="/gallery/rg1624939264?ref_=nv_ph_lp_2"
>Latest Posters</a></li>
                        <li><a href="/gallery/rg1641716480?ref_=nv_ph_lv_3"
>Photos We Love</a></li>
                    </ul>
                </div>
                <div class="subNavListContainer">
                    <h5>EVENTS</h5>
                    <ul>
                        <li><a href="/awards-central/?ref_=nv_ev_awrd_1"
>Awards Central</a></li>
                        <li><a href="/golden-globes/?ref_=nv_ev_gg_2"
>Golden Globes</a></li>
                        <li><a href="/sundance/?ref_=nv_ev_sun_3"
>Sundance</a></li>
                        <li><a href="/cannes/?ref_=nv_ev_can_6"
>Cannes</a></li>
                        <li><a href="/comic-con/?ref_=nv_ev_comic_7"
>Comic-Con</a></li>
                        <li><a href="/emmys/?ref_=nv_ev_rte_8"
>Emmy Awards</a></li>
                        <li><a href="/venice/?ref_=nv_ev_venice_9"
>Venice Film Festival</a></li>
                        <li><a href="/toronto/?ref_=nv_ev_tff_10"
>Toronto Film Festival</a></li>
                        <li><a href="/festival-central/?ref_=nv_ev_fc_11"
>Festival Central</a></li>
                        <li><a href="/festival-central/tribeca?ref_=nv_ev_tff_12"
>Tribeca</a></li>
                        <li><a href="/event/all/?ref_=nv_ev_all_13"
>All Events</a></li>
                    </ul>
                </div>
            </div>
        </li>
        <li class="spacer"></li>
        <li class="css_nav_item" id="navNewsMenu">
            <p class="navCategory">
                <a href="/news/top?ref_=nv_tp_nw_1"
>News</a> &<br />
                <a href="/boards/?ref_=nv_tp_bd_2"
>Community</a></p>
            <span class="downArrow"></span>
            <div id="navMenu3" class="sub_nav">
                <div id="latestHeadlines">
                    <div class="subNavListContainer">
                        <h5>LATEST HEADLINES</h5>
    <ul>
                <li itemprop="headline">
<a href="/news/ni60576508/?ref_=nv_nw_tn_1"
> Zsa Zsa Gabor, Actress and Socialite, Dies at 99
</a><br />
                        <span class="time">3 hours ago</span>
                </li>
                <li itemprop="headline">
<a href="/news/ni60576089/?ref_=nv_nw_tn_2"
> 'Star Wars: Rogue One' Debuts With Over $290 Million Worldwide, 'Collateral Beauty' Struggles
</a><br />
                        <span class="time">8 hours ago</span>
                </li>
                <li itemprop="headline">
<a href="/news/ni60576065/?ref_=nv_nw_tn_3"
> Denzel Washington’s ‘Fences’ Posts Sturdy Debut at Indie Box Office
</a><br />
                        <span class="time">8 hours ago</span>
                </li>
    </ul>
                    </div>
                </div>
                <div class="subNavListContainer">
                    <h5>NEWS</h5>
                    <ul>
                        <li><a href="/news/top?ref_=nv_nw_tp_1"
>Top News</a></li>
                        <li><a href="/news/movie?ref_=nv_nw_mv_2"
>Movie News</a></li>
                        <li><a href="/news/tv?ref_=nv_nw_tv_3"
>TV News</a></li>
                        <li><a href="/news/celebrity?ref_=nv_nw_cel_4"
>Celebrity News</a></li>
                        <li><a href="/news/indie?ref_=nv_nw_ind_5"
>Indie News</a></li>
                    </ul>
                    <h5>COMMUNITY</h5>
                    <ul>
                        <li><a href="/boards/?ref_=nv_cm_bd_1"
>Message Boards</a></li>
                        <li><a href="/czone/?ref_=nv_cm_cz_2"
>Contributor Zone</a></li>
                        <li><a href="/poll/?ref_=nv_cm_pl_3"
>Polls</a></li>
                    </ul>
                </div>
            </div>
        </li>
        <li class="spacer"></li>
        <li class="css_nav_item" id="navWatchlistMenu">
<p class="navCategory singleLine watchlist">
    <a href="/list/watchlist?ref_=nv_wl_all_0"
>Watchlist</a>
</p>
<span class="downArrow"></span>
<div id="navMenu4" class="sub_nav">
    <h5>
            YOUR WATCHLIST
    </h5>
    <ul id="navWatchlist">
    </ul>
    <script>
    if (!('imdb' in window)) { window.imdb = {}; }
    window.imdb.watchlistTeaserData = [
                {
                        href : "/list/watchlist",
                src : "http://ia.media-imdb.com/images/G/01/imdb/images/navbar/watchlist_slot1_logged_out-1670046337._CB522318126_.jpg"
                },
                {
                    href : "/search/title?count=100&title_type=feature,tv_series",
                src : "http://ia.media-imdb.com/images/G/01/imdb/images/navbar/watchlist_slot2_popular-4090757197._CB522318281_.jpg"
                },
                {
                    href : "/chart/top",
                src : "http://ia.media-imdb.com/images/G/01/imdb/images/navbar/watchlist_slot3_top250-575799966._CB522318261_.jpg"
                }
    ];
    </script>
</div>
        </li>
        <li class="spacer"></li>
    </ul>
<script>
if (!('imdb' in window)) { window.imdb = {}; }
window.imdb.navbarAdSlots = {
    titleAd : {
            clickThru : "/title/tt0034583/",
            imageUrl : "http://ia.media-imdb.com/images/M/MV5BMTk3MTMyMjc3Nl5BMl5BanBnXkFtZTcwODg4NDYwOA@@._V1._SY400_CR30,30,410,315_.jpg",
            titleYears : "1942",
            rank : 33,
                    headline : "Casablanca"
    },
    nameAd : {
            clickThru : "/name/nm1325419/",
            imageUrl : "http://ia.media-imdb.com/images/M/MV5BMTc4NzMwMjQyOV5BMl5BanBnXkFtZTcwOTczMzcyNw@@._V1._SX250_CR0,0,250,315_.jpg",
            rank : 212,
            headline : "Kristen Wiig"
    }
}
</script>
</div>
<div id="nb_extra">
    <ul id="nb_extra_nav" class="main_nav">
        <li class="css_nav_item" id="navProMenu">
            <p class="navCategory">
<a href="http://pro.imdb.com/signup/index.html?rf=cons_nb_hm&ref_=cons_nb_hm"
> <img alt="IMDbPro Menu" src="http://ia.media-imdb.com/images/G/01/imdb/images/navbar/imdbpro_logo_nb-720143162._CB522317951_.png" />
</a>            </p>
            <span class="downArrow"></span>
            <div id="navMenuPro" class="sub_nav">
<a href="http://pro.imdb.com/signup/index.html?rf=cons_nb_hm&ref_=cons_nb_hm"
id="proLink" > <div id="proAd">
<script>
if (!('imdb' in window)) { window.imdb = {}; }
window.imdb.proMenuTeaser = {
imageUrl : "http://ia.media-imdb.com/images/G/01/imdb/images/navbar/imdbpro_menu_user-2082544740._CB522318088_.jpg"
};
</script>
</div>
<div class="subNavListContainer">
<img alt="Go to IMDbPro" title="Go to IMDbPro" src="http://ia.media-imdb.com/images/G/01/imdb/images/navbar/imdbpro_logo_menu-2185879182._CB522318115_.png" />
<h5>GET INFORMED</h5>
<p>Industry information at your fingertips</p>
<h5>GET CONNECTED</h5>
<p>Over 200,000 Hollywood insiders</p>
<h5>GET DISCOVERED</h5>
<p>Enhance your IMDb Page</p>
<p><strong>Go to IMDbPro &raquo;</strong></p>
</div>
</a>            </div>
        </li>
        <li class="spacer"><span class="ghost">|</span></li>
        <li>
            <a href="/help/?ref_=nb_hlp"
>Help</a>
        </li>
        <li class="social">

    <a href="/offsite/?page-action=fol_fb&token=BCYiPoV8KtZCmJXGhr3ZfLhwGtu50C3l5JiMy0aQ8EtFOKFbKjWpfL8ejIqtfs8cqF3iPCXmTZE7%0D%0AHRq_tDd5Towhqa_YiI3BIuFQSUXGoYQQzuWSlNxjRXHptI46quWmNZzHww3yipDPtaq0SnTWku4E%0D%0AvDI6lJBU1jFJiRx_RxJrpBGPx_4-9DfWoPeQKdnvaybsAY08s1gnsR5z4JGcOImbAQ%0D%0A&ref_=tt_nv_fol_fb"
title="Follow IMDb on Facebook" target="_blank" itemprop='url'> <span class="desktop-sprite follow-facebook" ></span>
</a>
    <a href="/offsite/?page-action=fol_tw&token=BCYvYXLlOD0qefkQmP7IOC_0PQUrMSVRs4lxn-xTzbeOn6KKrI5MNojB1Gp885sruZIvf5NioxGu%0D%0ASM-0erBZqw-ba0kYTA_lgsV7qgPnfNWSCwRtw56BsV2pgQK2pHTI9qMYgQ2TEYkTA0slKH6Z8NFf%0D%0AbcHbb6m55tLmwB41dyFb_LPI2YUIPQUhUXV8vbtFSkJzF-gxhfqZyUCTPwWU1rUQXw%0D%0A&ref_=tt_nv_fol_tw"
title="Follow IMDb on Twitter" target="_blank" itemprop='url'> <span class="desktop-sprite follow-twitter" ></span>
</a>
    <a href="/offsite/?page-action=fol_inst&token=BCYg7wK80cZ92uwkfxy3-ZDD9_L96vocH4gq6CGawNZXKQTLCH1jhhyQ_2Um1PzxtvkdUeOSUpFP%0D%0A5dkmL6R7c4nxZhxR-7W5B0n-WBdv4nDlYOGqgb-wBeNWvIQaLSKLyMOIbGnL2g1a7pKvnr_WKgq-%0D%0AxogQZ9Sm5CoKuUz6DVbFR3EhMfFNRQNG7cU_rHDjEbycXcr0OAOuQpNxuP5NRcEZWw%0D%0A&ref_=tt_nv_fol_inst"
title="Follow IMDb on Instagram" target="_blank" itemprop='url'> <span class="desktop-sprite follow-instagram" ></span>
</a>
        </li>
    </ul>
</div>
<div id="nb_personal">
    <ul id="consumer_user_nav" class="main_nav">

            <li class="css_nav_menu no_arrow" id="navUserMenu">
            <p class="navCategory singleLine">
                <a id="facebook-signin-link" href="https://graph.facebook.com/v2.8/oauth/authorize?client_id=127059960673829&scope=email%2Cuser_about_me%2Cuser_birthday&state=eyI0OWU2YyI6Ijg2OWEiLCJ1IjoiaHR0cHM6Ly93d3cuaW1kYi5jb20vIn0&redirect_uri=https%3A%2F%2Fwww.imdb.com%2Fregistration%2Ffacebookhandler%2F" class="signin-button">
                <span class="facebook-logo"></span>
                <span class="signin-facebook-text">Sign in with Facebook</span></a>
                <a href="https://www.imdb.com/registration/signin?u=/title/tt1375666/&ref_=nv_usr_lgin_1"
rel="login" class="signin-other-options-text" id="nblogin" >Other Sign in options</a>
                </p>
        </li>
    </ul>
</div>
  </div>
</div>
	
	<!-- no content received for slot: navstrip -->
	
	
	<!-- begin injectable INJECTED_NAVSTRIP -->
<div id="injected_navstrip_wrapper" class="injected_slot">
<iframe id="injected_navstrip" name="injected_navstrip" class="yesScript" width="0" height="0" data-dart-params="#doubleclick;u=073968080611;ord=073968080611?" data-original-width="0" data-original-height="0" data-config-width="0" data-config-height="0" data-cookie-width="null" data-cookie-height="null" marginwidth="0" marginheight="0" frameborder="0" scrolling="no" allowtransparency="true" onload="doWithAds.call(this, function(){ ad_utils.on_ad_load(this); });"></iframe> </div>
<script>
doWithAds(function(){
ad_utils.inject_ad.register('injected_navstrip');
}, "ad_utils not defined, unable to render injected ad.");
</script>
<div id="injected_navstrip_reflow_helper"></div>
<!-- end injectable INJECTED_NAVSTRIP -->
	
<script>
    if (typeof uet == 'function') {
      uet("ne");
    }
</script>
              

                    <div id="pagecontent" class="pagecontent" itemscope itemtype="http://schema.org/Movie">
	
	<!-- begin injectable INJECTED_BILLBOARD -->
<div id="injected_billboard_wrapper" class="injected_slot">
<iframe id="injected_billboard" name="injected_billboard" class="yesScript" width="0" height="0" data-dart-params="#doubleclick;u=073968080611;ord=073968080611?" data-original-width="0" data-original-height="0" data-config-width="0" data-config-height="0" data-cookie-width="null" data-cookie-height="null" marginwidth="0" marginheight="0" frameborder="0" scrolling="no" allowtransparency="true" onload="doWithAds.call(this, function(){ ad_utils.on_ad_load(this); });"></iframe> </div>
<script>
doWithAds(function(){
ad_utils.inject_ad.register('injected_billboard');
}, "ad_utils not defined, unable to render injected ad.");
</script>
<div id="injected_billboard_reflow_helper"></div>
<!-- end injectable INJECTED_BILLBOARD -->
	


    
    
    

    
    
    

    
    
    

	
	<!-- begin injectable NAVBOARD -->
<div id="navboard_wrapper" class="injected_slot">
<iframe id="navboard" name="navboard" class="yesScript" width="0" height="0" data-dart-params="#doubleclick;u=073968080611;ord=073968080611?" data-original-width="0" data-original-height="0" data-config-width="0" data-config-height="0" data-cookie-width="null" data-cookie-height="null" marginwidth="0" marginheight="0" frameborder="0" scrolling="no" allowtransparency="true" onload="doWithAds.call(this, function(){ ad_utils.on_ad_load(this); });"></iframe> </div>
<script>
doWithAds(function(){
ad_utils.inject_ad.register('navboard');
}, "ad_utils not defined, unable to render injected ad.");
</script>
<div id="navboard_reflow_helper"></div>
<!-- end injectable NAVBOARD -->
	


    
    
    

    
    
    

<div id="content-2-wide" class="flatland">
    <div id="main_top" class="main">

    
    
    


    
    
    

            <div class="title-overview">


  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleOverviewWidget_started');
    }
  </script>
        <div id="title-overview-widget" class="heroic-overview">
            <div class="message_box">
                <div id="star-ratings-widget-error" class="hidden error">
                    <h2>There was an error trying to load your rating for this title.</h2>
                    <p>Some parts of this page won't work property. Please reload or try later.</p>
                </div>
            </div>
            <div class="vital">                
      <div id="quicklinksBar" class="subnav">
  <div id="quicklinksMainSection">
         <a href="/title/tt1375666/fullcredits?ref_=tt_ql_1"
class="quicklink" >FULL CAST AND CREW</a> <span class="ghost">|</span>
         <a href="/title/tt1375666/trivia?ref_=tt_ql_2"
class="quicklink" >TRIVIA</a> <span class="ghost">|</span>
         <a href="/title/tt1375666/reviews?ref_=tt_ql_3"
class="quicklink" >USER REVIEWS</a> <span class="ghost">|</span>
      <a href="http://pro.imdb.com/title/tt1375666?rf=cons_tt_contact&ref_=cons_tt_contact"
class="quicklink" >IMDbPro</a>
        <span class="ghost">|</span>
        <span class="show_more quicklink">
            MORE<span class="titleOverviewSprite quicklinksArrowUp"></span>
        </span>
        <span class="show_less quicklink" style="display:none">
           LESS<span class="titleOverviewSprite quicklinksArrowDown"></span>
        </span>
  </div>

    <span class="titleOverviewShareButton launch-share-popover quicklink">SHARE</span>
    <div id="share-popover">
        <a class="close-popover" href="#">X</a>
        <h4>Share</h4>
        
    
    
    <a onclick="window.open(&quot;http://www.facebook.com/sharer.php?u=http%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1375666%2F%3Fref_%3Dext_shr_fb_tt&quot;, 'newWindow', 'width=626,height=436'); return false;"
       href="http://www.facebook.com/sharer.php?u=http%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1375666%2F%3Fref_%3Dext_shr_fb_tt"
       title="Share on Facebook"
       class="facebook"
       target="_blank"><div class="option facebook">
                            <span class="titlePageSprite share_facebook"></span>
                            <div>Facebook</div>
                        </div></a>
    
    
    <a onclick="window.open(&quot;http://twitter.com/intent/tweet?text=Inception%20(16%20July%202010%20(USA))%20-%20imdb.com%2Ftitle%2Ftt1375666%2F%3Fref_%3Dext_shr_tw_tt&quot;, 'newWindow', 'width=815,height=436'); return false;"
       href="http://twitter.com/intent/tweet?text=Inception%20(16%20July%202010%20(USA))%20-%20imdb.com%2Ftitle%2Ftt1375666%2F%3Fref_%3Dext_shr_tw_tt"
       title="Share on Twitter"
       class="twitter"
       target="_blank"><div class="option twitter">
                            <span class="titlePageSprite share_twitter"></span>
                            <div>Twitter</div>
                        </div></a>
    <a href="mailto:?subject=IMDb%3A%20Inception%20(16%20July%202010%20(USA))&body=IMDb%3A%20Inception%20(16%20July%202010%20(USA))%0AA%20thief%2C%20who%20steals%20corporate%20secrets%20through%20use%20of%20dream-sharing%20technology%2C%20is%20given%20the%20inverse%20task%20of%20planting%20an%20idea%20into%20the%20mind%20of%20a%20CEO.%0Ahttp%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1375666%2F%3Fref_%3Dext_shr_eml_tt" 
       title="Share by e-mail"
       class=""><div class='option email'>
                    <span class='titlePageSprite share_email'></span>
                    <div>E-mail</div>
                    </div></a>
     <a href="#" class="open-checkin-popover">
        <div class="option checkin">
            <span class="titlePageSprite share_checkin"></span>
            <div>Check in</div>
        </div>
     </a>     
            
    </div>
    
        <div id="share-checkin">
<div class="add_to_checkins" data-const="tt1375666" data-lcn="title-maindetails">
<span class="btn2_wrapper"><a onclick='' class="btn2 large btn2_text_on disabled checkins_action_btn"><span class="btn2_glyph">0</span><span class="btn2_text">Check in</span></a></span>    <div class="popup checkin-dialog">
        <a class="small disabled close btn">X</a>
        <span class="beta">Beta</span>
        <span class="title">I'm Watching This!</span>
        <div class="body">
            <div class="info">Keep track of everything you watch; tell your friends.
            </div>
            <div class="small message_box">
                <div class="hidden error"><h2>Error</h2> Please try again!</div>
                <div class="hidden success"><h2>Added to Your Check-Ins.</h2> <a href="/list/checkins">View</a></div>
            </div>
            <textarea data-msg="Enter a comment..."></textarea>
            <div class="share">
                <button class="large primary btn"><span>Check in</span></button>
<!--
                    Check-ins are more fun when<br>
                    you <a href="/register/sharing">enable Facebook sharing</a>!
-->
            </div>
        </div>
    </div>
    <input type="hidden" name="49e6c" value="869a">
</div>
        </div>

   <div class="quicklinkSection" id="full_subnav" style="display:none">           
               <div class="quicklinkSectionColumn">
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">DETAILS</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/fullcredits?ref_=tt_ql_dt_1"
class="quicklink" >Full Cast and Crew</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/releaseinfo?ref_=tt_ql_dt_2"
class="quicklink" >Release Dates</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/officialsites?ref_=tt_ql_dt_3"
class="quicklink" >Official Sites</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/business?ref_=tt_ql_dt_4"
class="quicklink" >Box Office/Business</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/companycredits?ref_=tt_ql_dt_5"
class="quicklink" >Company Credits</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/locations?ref_=tt_ql_dt_6"
class="quicklink" >Filming Locations</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/technical?ref_=tt_ql_dt_7"
class="quicklink" >Technical Specs</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/literature?ref_=tt_ql_dt_8"
class="quicklink quicklinkGray" >Literature</a>                </div>
    </div>
               </div>
               <div class="quicklinkSectionColumn">
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">STORYLINE</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/taglines?ref_=tt_ql_stry_1"
class="quicklink" >Taglines</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/plotsummary?ref_=tt_ql_stry_2"
class="quicklink" >Plot Summary</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/synopsis?ref_=tt_ql_stry_3"
class="quicklink" >Synopsis</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/keywords?ref_=tt_ql_stry_4"
class="quicklink" >Plot Keywords</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/parentalguide?ref_=tt_ql_stry_5"
class="quicklink" >Parents Guide</a>                </div>
    </div>
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">RELATED ITEMS</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/news?ref_=tt_ql_rel_1"
class="quicklink" >NewsDesk</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/externalsites?ref_=tt_ql_rel_2"
class="quicklink" >External Sites</a>                </div>
    </div>
               </div>
               <div class="quicklinkSectionColumn">
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">OPINION</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/awards?ref_=tt_ql_op_1"
class="quicklink" >Awards</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/faq?ref_=tt_ql_op_2"
class="quicklink" >FAQ</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/reviews?ref_=tt_ql_op_3"
class="quicklink" >User Reviews</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/ratings?ref_=tt_ql_op_4"
class="quicklink" >User Ratings</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/externalreviews?ref_=tt_ql_op_5"
class="quicklink" >External Reviews</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/criticreviews?ref_=tt_ql_op_6"
class="quicklink" >Metacritic Reviews</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/board/?ref_=tt_ql_op_7"
class="quicklink" >Message Board</a>                </div>
    </div>
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">PHOTO & VIDEO</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/mediaindex?ref_=tt_ql_pv_1"
class="quicklink" >Photo Gallery</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/videogallery?ref_=tt_ql_pv_2"
class="quicklink" >Trailers and Videos</a>                </div>
    </div>
               </div>
               <div class="quicklinkSectionColumn">
    <div class="quicklinkGroup">
        <div class="quicklinkSectionHeader">DID YOU KNOW?</div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/trivia?ref_=tt_ql_trv_1"
class="quicklink" >Trivia</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/goofs?ref_=tt_ql_trv_2"
class="quicklink" >Goofs</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/crazycredits?ref_=tt_ql_trv_3"
class="quicklink" >Crazy Credits</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/quotes?ref_=tt_ql_trv_4"
class="quicklink" >Quotes</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/alternateversions?ref_=tt_ql_trv_5"
class="quicklink quicklinkGray" >Alternate Versions</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/movieconnections?ref_=tt_ql_trv_6"
class="quicklink" >Connections</a>                </div>
                <div class="quicklinkSectionItem">
<a href="/title/tt1375666/soundtrack?ref_=tt_ql_trv_7"
class="quicklink" >Soundtracks</a>                </div>
    </div>
               </div>
   </div>
      </div>  
         
                <div class="title_block">
                    <div class="title_bar_wrapper">

    <div class="ratings_wrapper">
        <div class="imdbRating" itemtype="http://schema.org/AggregateRating" itemscope="" itemprop="aggregateRating">
                <div class="ratingValue">
<strong title="8.8 based on 1,516,540 user ratings"><span itemprop="ratingValue">8.8</span></strong><span class="grey">/</span><span class="grey" itemprop="bestRating">10</span>                </div>
                <a href="/title/tt1375666/ratings?ref_=tt_ov_rt"
><span class="small" itemprop="ratingCount">1,516,540</span></a>
                    <div class="hiddenImportant">
                            <span itemprop="reviewCount">2,835 user</span>
                            <span itemprop="reviewCount">647 critic</span>
                    </div>
        </div>
  <div id="star-rating-widget" class="star-rating-widget" data-tconst="tt1375666" data-rating="0" data-user="" data-auth="" data-tracking-tag="title-maindetails">
    <div class="star-rating-button">
      <button>
        <span class="star-rating-star no-rating"></span>
            <span class="star-rating-text">Rate This</span>
      </button>
    </div>
  </div>
    </div>
    <div class="titleBar">
        <div class="primary_ribbon">
            <div class="ribbonize" data-tconst="tt1375666" data-caller-name="title"></div>
            <div class="wlb_dropdown_btn" data-tconst="tt1375666" data-size="large" data-caller-name="title" data-type="primary"></div>
            <div class="wlb_dropdown_list" style="display:none"></div>
        </div>

        <div class="title_wrapper">
<h1 itemprop="name" class="">Inception&nbsp;<span id="titleYear">(<a href="/year/2010/?ref_=tt_ov_inf"
>2010</a>)</span>            </h1>
            <div class="subtext">
                    <meta itemprop="contentRating" content="PG-13">PG-13
<span class="ghost">|</span>                    <time itemprop="duration" datetime="PT148M">
                        2h 28min
                    </time>
<span class="ghost">|</span>
<a href="/genre/Action?ref_=tt_ov_inf"
><span class="itemprop" itemprop="genre">Action</span></a>, 
<a href="/genre/Adventure?ref_=tt_ov_inf"
><span class="itemprop" itemprop="genre">Adventure</span></a>, 
<a href="/genre/Sci-Fi?ref_=tt_ov_inf"
><span class="itemprop" itemprop="genre">Sci-Fi</span></a>
<span class="ghost">|</span>
<a href="/title/tt1375666/releaseinfo?ref_=tt_ov_inf"
title="See more release dates" >16 July 2010 (USA)
<meta itemprop="datePublished" content="2010-07-16" />
</a>            </div>
        </div>
    </div>
                    </div>
                </div>



                
                    <div class="slate_wrapper">
    <div class="poster">
<a href="/title/tt1375666/mediaviewer/rm3426651392?ref_=tt_ov_i"
> <img alt="Inception Poster" title="Inception Poster"
src="https://images-na.ssl-images-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_UX182_CR0,0,182,268_AL_.jpg"
itemprop="image" />
</a>    </div>
    <div class="slate">
<a href="/video/imdb/vi4219471385?playlistId=tt1375666&ref_=tt_ov_vi"
class="slate_button prevent-ad-overlay video-modal" data-type='recommends' data-tconst='tt1375666' data-video='vi4219471385' data-context='imdb' itemprop='trailer' data-refsuffix='tt_ov_vi' data-pixels=''> <img alt="Trailer"
title="Trailer"
src="https://images-na.ssl-images-amazon.com/images/M/MV5BMjI2NDI3NTA4M15BMl5BanBnXkFtZTgwMDQ5NjYzMzE@._V1_CR167,0,946,532_AL_UY268_CR84,0,477,268_AL_.jpg"
itemprop="image" />
<div class="slate_fade_top"></div>
<div class="slate_fade_bottom"></div>
</a>        <div class="caption"> 
            <div style="float: left;">2:03 <span class="ghost">|</span> Trailer</div>
                <div style="float: right;">        <a href="/title/tt1375666/videogallery?ref_=tt_ov_vi_sm"
>17 VIDEOS</a>
<span class="ghost">|</span>        <a href="/title/tt1375666/mediaindex?ref_=tt_ov_mi_sm"
>215 IMAGES</a>
</div>
            <div style="clear: both;"></div>
        </div>
    </div>
                    </div>
            </div>

    
    
        <a name="slot_center-2"></a>
        
        
    
        
                                

    
            <script type="text/javascript">if(typeof uet === 'function'){uet('bb','TitleWatchBar',{wb:1});}</script>
                                

                    
    
        <span class="ab_widget">
                <div class="watchbar2 article">
    <div class="showtime  full-table">
        <div class="winner-option watch-option " 
                    data-offsite="1" 
                    data-href="/offsite/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2425422342&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=center-2&pf_rd_t=15021&pf_rd_i=tt1375666&page-action=watch-aiv&token=BCYqbs-jvUIIHIs-WXptvMImlGJu6gI0ts91TwDDK3UcWcE1oWJJKe5IbaZo2yMTBce7p39QnHGn%0D%0A8rLUlPmUk7JdtsTHL66THylZnfeQOTllzWqC9ZOpcZgQQuxo1Cwxievj4AYlVs3t1aCZdyKMB680%0D%0A-Rp6ZUQS6qdgIeldI_HA-UUxCVNbVDecy9YKHa6nYcFVyjywYKyhcxe4Mc73T1XCwxatGFAtCH5V%0D%0A5HNiIm1feRw7SzFwvmR9yilHF4hfKSkK%0D%0A&ref_=tt_wbr_aiv" 
                    title="Watch Now">
            <div id="watchbar2" class="watch-icon winner provider amazon-instant-video">
            </div>
            <div class="info table-cell">
                <h2>
<a href="/offsite/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2425422342&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=center-2&pf_rd_t=15021&pf_rd_i=tt1375666&page-action=watch-aiv&token=BCYqbs-jvUIIHIs-WXptvMImlGJu6gI0ts91TwDDK3UcWcE1oWJJKe5IbaZo2yMTBce7p39QnHGn%0D%0A8rLUlPmUk7JdtsTHL66THylZnfeQOTllzWqC9ZOpcZgQQuxo1Cwxievj4AYlVs3t1aCZdyKMB680%0D%0A-Rp6ZUQS6qdgIeldI_HA-UUxCVNbVDecy9YKHa6nYcFVyjywYKyhcxe4Mc73T1XCwxatGFAtCH5V%0D%0A5HNiIm1feRw7SzFwvmR9yilHF4hfKSkK%0D%0A&ref_=tt_wbr_aiv"
class="segment-link " target="_blank"> Watch Now
</a>                </h2>
                <p>

            From $2.99 (SD) on
Amazon Video                </p>
            </div>
        </div>
    <script type="text/javascript">
        var xmlhttp = new XMLHttpRequest();
        xmlhttp.open("POST","/tr/",true);
        xmlhttp.setRequestHeader("Content-type","application/x-www-form-urlencoded");
        xmlhttp.send("ref_=tt_wbr_aiv&pt=title&spt=main&pageAction=showing-aiv&ht=actionOnly");
    </script>
            <div title="On TV" class="watch-option secondary-watch-option " data-href="/title/tt1375666/tvschedule?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2425422342&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=center-2&pf_rd_t=15021&pf_rd_i=tt1375666&ref_=tt_wbr_tv" data-optiontype="tv">
                <div class="watch-icon tv"></div>
                <div class="secondary-info">ON&nbsp;TV</div>
            </div>
            <div title="On Disc" class="watch-option secondary-watch-option " data-href="/offsite/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2425422342&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=center-2&pf_rd_t=15021&pf_rd_i=tt1375666&page-action=watch-amazon&token=BCYh-4MXZoZmvZ1BNpYa7SIvqxXOgr8Q-2M1E8eHOUsnole44IYt4l9K3J9TtBjnIH2GvcJzOcfa%0D%0Ai7eT5GroTl7CsN-fv6vujK3b_pwAtWbiigHp6KRiValmQ2dhpjTS3UIDk8cYGL0NCHnNFTXDUDj4%0D%0AEOE-yx13tfv90zZ5tLvQjDTfDO7741zvUTGcKCGtPwPbNJRDg1htGe_XVqL1X5aS52_CAzDMco48%0D%0AJKRyMqE6KQBcAjDCLzbJICmN2G0wJcKV%0D%0A&ref_=tt_wbr_amazon" data-optiontype="physical">
                <div class="watch-icon physical"></div>
                <div class="secondary-info">ON&nbsp;DISC</div>
            </div>
        <div title="All Watch Options" class="watch-option secondary-watch-option has-watchoptions" data-href="/watch/_ajax/box/tt1375666?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2425422342&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=center-2&pf_rd_t=15021&pf_rd_i=tt1375666&ref_=tt_wbr_sm#watchoptions">
                <div class="watch-icon all"></div>
                <div class="secondary-info">ALL</div>
            </div>
    </div>
        </div>

                        
        </span>



            <script type="text/javascript">
                if(typeof uex === 'function'){uex('ld','TitleWatchBar',{wb:1});}
            </script>
        




        
    
    <div class="plot_summary_wrapper">
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitlePlotAndCreditSummaryWidget_started');
    }
  </script>
    <div class="plot_summary ">
            <div class="summary_text" itemprop="description">
                    A thief, who steals corporate secrets through use of dream-sharing technology, is given the inverse task of planting an idea into the mind of a CEO.
            </div>
        
    <div class="credit_summary_item">
        <h4 class="inline">Director:</h4>
            <span itemprop="director" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0634240?ref_=tt_ov_dr"
itemprop='url'><span class="itemprop" itemprop="name">Christopher Nolan</span></a>            </span>
    </div>
    <div class="credit_summary_item">
        <h4 class="inline">Writer:</h4>
            <span itemprop="creator" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0634240?ref_=tt_ov_wr"
itemprop='url'><span class="itemprop" itemprop="name">Christopher Nolan</span></a>            </span>
    </div>
    <div class="credit_summary_item">
        <h4 class="inline">Stars:</h4>
            <span itemprop="actors" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0000138?ref_=tt_ov_st_sm"
itemprop='url'><span class="itemprop" itemprop="name">Leonardo DiCaprio</span></a>,             </span>
            <span itemprop="actors" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0330687?ref_=tt_ov_st_sm"
itemprop='url'><span class="itemprop" itemprop="name">Joseph Gordon-Levitt</span></a>,             </span>
            <span itemprop="actors" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0680983?ref_=tt_ov_st_sm"
itemprop='url'><span class="itemprop" itemprop="name">Ellen Page</span></a>            </span>
            <span class="ghost">|</span>
<a href="fullcredits?ref_=tt_ov_st_sm"
>See full cast & crew</a>&nbsp;&raquo;
    </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitlePlotAndCreditSummaryWidget_finished');
    }
  </script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleReviewsAndPopularityWidget_started');
    }
  </script>
      <div class="titleReviewBar ">           
    <div class="titleReviewBarItem">
<a href="criticreviews?ref_=tt_ov_rt"
> <div class="metacriticScore score_favorable titleReviewBarSubItem">
<span>74</span>
</div></a>        <div class="titleReviewBarSubItem">
            <div><a href="criticreviews?ref_=tt_ov_rt"
>
Metascore
</a>            </div>
            <div><span class="subText"> 
               From <a href="http://www.metacritic.com"
target='_blank'>metacritic.com</a> 
               </span>
            </div>
        </div>
    </div>
                   <div class="divider"></div>
           
    <div class="titleReviewBarItem titleReviewbarItemBorder">
        <div>
        Reviews
        </div>
        <div>
            <span class="subText">
                   <a href="reviews?ref_=tt_ov_rt"
>2,835 user</a>                   
                       <span class="ghostText">|</span>
                   <a href="externalreviews?ref_=tt_ov_rt"
>647 critic</a>
             </span>
        </div>
    </div>
                   <div class="divider"></div>

    <div class="titleReviewBarItem">
  <div class="titleOverviewSprite popularityTrendUp"></div>
        <div class="titleReviewBarSubItem">
            <div>
            Popularity
            </div>
            <div>
                <span class="subText">
                    136
      (<span class="titleOverviewSprite popularityImageUp"></span> <span class="popularityUpOrFlat">13</span>)
                </span>
            </div>
        </div>                                   
    </div>
      </div>              
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleReviewsAndPopularityWidget_finished');
    }
  </script>
    </div>
        </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleOverviewWidget_finished');
    }
  </script>
            </div> 

<script>
    if (typeof uet == 'function') {
      uet("af");
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_atf_main');
    }
  </script>

    </div> 

<script>
    if (typeof uet == 'function') {
      uet("cf");
    }
</script>


    <div id="sidebar">

	
	<!-- begin TOP_RHS -->
<div id="top_rhs_wrapper" class="dfp_slot">
<script>
window.generic = window.generic || {};
generic.alphalfaComponents = {
"alphalfa-container.html" : "https://ia.media-imdb.com/images/G/01/imdbads/alphalfa-container-253150330._CB522318155_.html",
"js/collections/alphalfa.js" : "https://ia.media-imdb.com/images/G/01/imdbads/js/collections/alphalfa-3292747090._CB522318325_.js"
};
</script>
<script type="text/javascript">
doWithAds(function(){
ad_utils.register_ad('top_rhs');
});
</script>
<iframe data-dart-params="#imdb2.consumer.title/maindetails;!TILE!;sz=300x250,300x600,300x300,11x1;p=tr;g=ac;g=ad;g=sf;g=baa;g=th;tt=f;m=PG13;mh=PG13;ml=PG13;coo=us;coo=gb;b=t25;b=t250;b=t250a;b=glbst;b=loop;fv=1;id=tt1375666;ab=c;bpx=2;md=tt1375666;c=1;oe=utf-8;[CLIENT_SIDE_KEYVALUES];u=073968080611;ord=073968080611?" id="top_rhs" name="top_rhs" class="yesScript" width="300" height="250" data-original-width="300" data-original-height="250" data-config-width="300" data-config-height="250" data-cookie-width="null" data-cookie-height="null" marginwidth="0" marginheight="0" frameborder="0" scrolling="no" allowtransparency="true" onload="doWithAds.call(this, function(){ ad_utils.on_ad_load(this); });"></iframe>
<noscript> <a href="http://pubads.g.doubleclick.net/gampad/jump?&iu=4215/imdb2.consumer.title/maindetails&sz=300x250|300x600|300x300|11x1&t=p%3Dtr%26g%3Dac%26g%3Dad%26g%3Dsf%26g%3Dbaa%26g%3Dth%26tt%3Df%26m%3DPG13%26mh%3DPG13%26ml%3DPG13%26coo%3Dus%26coo%3Dgb%26b%3Dt25%26b%3Dt250%26b%3Dt250a%26b%3Dglbst%26b%3Dloop%26fv%3D1%26id%3Dtt1375666%26ab%3Dc%26bpx%3D2%26md%3Dtt1375666%26c%3D1&tile=1&c=073968080611" target="_blank"> <img src="http://pubads.g.doubleclick.net/gampad/ad?&iu=4215/imdb2.consumer.title/maindetails&sz=300x250|300x600|300x300|11x1&t=p%3Dtr%26g%3Dac%26g%3Dad%26g%3Dsf%26g%3Dbaa%26g%3Dth%26tt%3Df%26m%3DPG13%26mh%3DPG13%26ml%3DPG13%26coo%3Dus%26coo%3Dgb%26b%3Dt25%26b%3Dt250%26b%3Dt250a%26b%3Dglbst%26b%3Dloop%26fv%3D1%26id%3Dtt1375666%26ab%3Dc%26bpx%3D2%26md%3Dtt1375666%26c%3D1&tile=1&c=073968080611" border="0" alt="advertisement" /> </a> </noscript>
</div>
<div id="top_rhs_reflow_helper"></div>
<div id="top_rhs_after" class="after_ad" style="visibility:hidden;">
<a class="yesScript" href="#" onclick="ad_utils.show_ad_feedback('top_rhs');return false;" id="ad_feedback_top_rhs">ad feedback</a>
</div>
<script>
doWithAds(function(){
ad_utils.gpt.render_ad('top_rhs');
}, "ad_utils not defined, unable to render client-side GPT ad.");
</script>
<!-- End TOP_RHS -->
	
  <script>
    if ('csm' in window) {
      csm.measure('csm_atf_sidebar');
    }
  </script>


    
    
    

    
    
    




    
    
        <a name="slot_right-3"></a>
        <div class="mini-article">
        
    
        
                                

    
            <script type="text/javascript">if(typeof uet === 'function'){uet('bb','NinjaWidget',{wb:1});}</script>
                                

                    
    
        <span class="ab_widget">
        
    

    <div class="ab_ninja">
<span class="widget_header"> <span class="oneline"> <a href="/best-of/best-of-2016-best-movie-stills/rg1289394944?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2748521502&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-3&pf_rd_t=15021&pf_rd_i=tt1375666&ref_=tt_ecw_bms16_hd" > <h3>Best Movie Stills of 2016</h3> </a> </span> </span> <div class="widget_content no_inline_blurb"> <div class="widget_nested"> <div class="ninja_image_pack"> <div class="ninja_center"> <div class="ninja_image first_image last_image" style="width:307px;height:auto;" > <div style="width:307px;height:auto;margin:0 auto;"> <div class="widget_image"> <div class="image"> <a href="/best-of/best-of-2016-best-movie-stills/rg1289394944?imageid=rm2149965824&pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2748521502&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-3&pf_rd_t=15021&pf_rd_i=tt1375666&ref_=tt_ecw_bms16_i_1" > <img itemprop="image" class="pri_image" src="https://images-na.ssl-images-amazon.com/images/M/MV5BMjUxMTQ4MjQzOF5BMl5BanBnXkFtZTgwOTExMDE0NzE@._CR397,178,1137,852_UX614_UY460._SY230_SX307_AL_.jpg" data-src-x2="https://images-na.ssl-images-amazon.com/images/M/MV5BMjUxMTQ4MjQzOF5BMl5BanBnXkFtZTgwOTExMDE0NzE@._CR397,178,1137,852_UX614_UY460._SY230_SX307_AL_UY460_UX614_AL_.jpg" /> </a> </div> </div> </div> </div> </div> </div> </div> </div> <p class="blurb">Take a look at some of our favorite movie stills from the past year.</p> <p class="seemore"><a href="/best-of/best-of-2016-best-movie-stills/rg1289394944?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2748521502&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-3&pf_rd_t=15021&pf_rd_i=tt1375666&ref_=tt_ecw_bms16_sm" class="position_bottom supplemental" >See the full gallery</a></p>    </div>
    

                        
        </span>



            <script type="text/javascript">
                if(typeof uex === 'function'){uex('ld','NinjaWidget',{wb:1});}
            </script>
        




        </div>
    

  <div class="aux-content-widget-2"> 
    <div class="social">     
  <script type="text/javascript">if (uet) { uet('bb', 'facebook_like_iframe', {wb: 1}); }</script>
  <div class="social_networking_like">
    <iframe
      id="iframe_like"
      name="fbLikeIFrame_0"
      class="social-iframe"
      scrolling="no"
      frameborder="0"
      allowTransparency="allowTransparency"
      ref="http://www.imdb.com/title/tt1375666/"
      width=280
      height=65></iframe>
  </div>
    </div>
  </div>

	
	<!-- begin RHS_CORNERSTONE -->
<div id="rhs_cornerstone_wrapper" class="cornerstone_slot">
<script type="text/javascript">
doWithAds(function(){
ad_utils.register_ad('rhs_cornerstone');
});
</script>
<iframe id="rhs_cornerstone" name="rhs_cornerstone" class="yesScript" width="300" height="125" data-original-width="300" data-original-height="125" data-blank-serverside marginwidth="0" marginheight="0" frameborder="0" scrolling="no" allowtransparency="true" onload="doWithAds.call(this, function(){ ad_utils.on_ad_load(this); });" allowfullscreen="true"></iframe>
</div>
<div id="rhs_cornerstone_reflow_helper"></div>
<script>
doWithAds(function(){
ad_utils.inject_serverside_ad('rhs_cornerstone', '');
},"unable to inject serverside ad");
</script>
	


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "RelatedNewsWidgetRHS", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_RelatedNewsWidgetRHS_started');
    }
  </script>

      <div class="mini-article" >
        <h3>Related News</h3>

        
                
                    
                    
                    <div class="news_item odd" >
                        <span itemprop="headline" >
                            <a href="/title/tt1375666/news?ref_=tt_nwr_1#ni60565135"
>Five things we learned from the first trailer for Christopher Nolan's Dunkirk</a>
                        </span>
                        
                        <br /><small>
                                <span itemprop="datePublished">
                                  15 December 2016 3:50 AM, -08:00
                                </span>
                            
                                <span class="ghost">|</span><span itemprop="provider" >
                                        <a href="/news/ns0000680?ref_=tt_nwr_1"
>The Guardian - Film News</a>
                                </span>
                        </small>
                    </div>
                
                    
                    
                    <div class="news_item even" >
                        <span itemprop="headline" >
                            <a href="/title/tt1375666/news?ref_=tt_nwr_2#ni60568720"
>Christopher Nolan’s ‘Dunkirk’ Sets Sights on Awards Glory</a>
                        </span>
                        
                        <br /><small>
                                <span itemprop="datePublished">
                                  14 December 2016 1:49 PM, -08:00
                                </span>
                            
                                <span class="ghost">|</span><span itemprop="provider" >
                                        <a href="/news/ns0000016?ref_=tt_nwr_2"
>backstage.com</a>
                                </span>
                        </small>
                    </div>
                
                    
                    
                    <div class="news_item odd" >
                        <span itemprop="headline" >
                            <a href="/title/tt1375666/news?ref_=tt_nwr_3#ni60566946"
>Watch Tom Hardy, Kenneth Branagh, Cillian Murphy And Harry Styles In Official Dunkirk Survival Teaser Trailer</a>
                        </span>
                        
                        <br /><small>
                                <span itemprop="datePublished">
                                  14 December 2016 10:27 AM, -08:00
                                </span>
                            
                                <span class="ghost">|</span><span itemprop="provider" >
                                        <a href="/news/ns0000310?ref_=tt_nwr_3"
>WeAreMovieGeeks.com</a>
                                </span>
                        </small>
                    </div>
       
            <div class="see-more">
                <a href="/title/tt1375666/news?ref_=tt_nwr_sm"
>See all 10483 related articles</a>&nbsp;&raquo;
            </div>

      </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_RelatedNewsWidgetRHS_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "RelatedNewsWidgetRHS", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "RelatedNewsWidgetRHS", {wb: 1});
    }
</script>


    
    
        <a name="slot_right-5"></a>
        <div class="mini-article">
        
    
        
                                

    
            <script type="text/javascript">if(typeof uet === 'function'){uet('bb','NinjaWidget',{wb:1});}</script>
                                

                    
    
        <span class="ab_widget">
        
    

    <div class="ab_ninja">
<span class="widget_header"> <span class="oneline"> <a href="/list/ls053181649/videoplayer/vi1422898713?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2767820882&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-5&pf_rd_t=15021&pf_rd_i=tt1375666&ref_=tt_ams_mithc_rhs_hd" > <h3>What's Next for "The Man in the High Castle" Season 2?</h3> </a> </span> </span> <div class="widget_content no_inline_blurb"> <div class="widget_nested"> <div class="ninja_image_pack"> <div class="ninja_center"> <div class="ninja_image first_image last_image" style="width:307px;height:auto;" > <div style="width:307px;height:auto;margin:0 auto;"> <div class="widget_image"> <div class="image"> <a href="/list/ls053181649/videoplayer/vi1422898713?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2767820882&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-5&pf_rd_t=15021&pf_rd_i=tt1375666&ref_=tt_ams_mithc_rhs_i_1" class="video-modal" data-refsuffix="tt_ams_mithc_rhs" data-ref="tt_ams_mithc_rhs_i_1"> <img itemprop="image" class="pri_image" title="The Man in the High Castle (2015-)" alt="The Man in the High Castle (2015-)" src="https://images-na.ssl-images-amazon.com/images/M/MV5BMjM2MjI3MTg1Ml5BMl5BanBnXkFtZTgwMDA0MDY2OTE@._CR358,156,2249,1685_UX614_UY460._SY230_SX307_AL_.jpg" data-src-x2="https://images-na.ssl-images-amazon.com/images/M/MV5BMjM2MjI3MTg1Ml5BMl5BanBnXkFtZTgwMDA0MDY2OTE@._CR358,156,2249,1685_UX614_UY460._SY230_SX307_AL_UY460_UX614_AL_.jpg" /> <img alt="The Man in the High Castle (2015-)" title="The Man in the High Castle (2015-)" class="image_overlay overlay_mouseout" src="https://images-na.ssl-images-amazon.com/images/G/01/IMDb/icon/play-button._CB318667375_.png" data-src-x2="https://images-na.ssl-images-amazon.com/images/G/01/IMDb/icon/play-button._CB318667375_.png" /> <img alt="The Man in the High Castle (2015-)" title="The Man in the High Castle (2015-)" class="image_overlay overlay_mouseover" src="https://images-na.ssl-images-amazon.com/images/G/01/IMDb/icon/play-button-hover._CB318667374_.png" data-src-x2="https://images-na.ssl-images-amazon.com/images/G/01/IMDb/icon/play-button-hover._CB318667374_.png" /> </a> </div> </div> </div> </div> </div> </div> </div> </div> <p class="blurb">IMDb sits down with the cast of "<a href="/title/tt1740299/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2767820882&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-5&pf_rd_t=15021&pf_rd_i=tt1375666&ref_=tt_ams_mithc_rhs_lk1">The Man in the High Castle</a>" to discuss where we find their characters as Season 2 kicks off. <a href="/offsite/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2767820882&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-5&pf_rd_t=15021&pf_rd_i=tt1375666&page-action=offsite-amazon&token=BCYm-XuO1Iimjci1EzTdnFiSD4eZMnMtx9FcVS_xXjCeZgwMy36Fp5TEOOl2OQKPdT0TYt6yVh44%0D%0ApHo63h0JehjOa-Bn3srQxJ6822DUfLsg5yw7EhUxLHJ_H1Z6e_RfzU8TUM5_UmmI6BOXz9jtq5GC%0D%0ADvdLBZIG7msyCkzCheYmz54bC5NdXSDL8RdyZB4YoY0v-Cpf4KvsHAopGOJwrWOGiJDY5Q36pNLQ%0D%0AOy6L8kLaXLC_CZLsclji_mb510niea5l6gd75cgsmXv-f-Qf_qaw9w%0D%0A&ref_=tt_ams_mithc_rhs_lk2">Watch Season 2 now on Amazon Video</a>.</p> <p class="seemore"><a href="/list/ls053181649/videoplayer/vi1422898713?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2767820882&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-5&pf_rd_t=15021&pf_rd_i=tt1375666&ref_=tt_ams_mithc_rhs_sm" class="position_bottom supplemental" >Watch our interview</a></p>    </div>
    

                        
        </span>



            <script type="text/javascript">
                if(typeof uex === 'function'){uex('ld','NinjaWidget',{wb:1});}
            </script>
        




        </div>
    

	
	<!-- no content received for slot: middle_rhs -->
	


    
    
    


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "RelatedListsWidget", {wb: 1});
    }
</script>
        <div class="mini-article">
            <div id="relatedListsWidget">
                <div class="rightcornerlink">
                    <a href="/list/create?ref_=tt_rls"
>Create a list</a>&nbsp;&raquo;
                </div>
                <h3>User Lists</h3>
                <p>Related lists from IMDb users</p>

    <div class="list-preview even">
        <div class="list-preview-item-narrow">
<a href="/list/ls003886860?ref_=tt_rls_1"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/film.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTkxMTA5OTAzMl5BMl5BanBnXkFtZTgwNjA5MDc3NjE@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls003886860?ref_=tt_rls_1"
>
My Favorites
</a></strong>
        </div>
        <div class="list_meta">
            a list of 48 titles
            <br />created 21&nbsp;Nov&nbsp;2011
        </div>
        <div class="clear">&nbsp;</div>
    </div>
    <div class="list-preview odd">
        <div class="list-preview-item-narrow">
<a href="/list/ls076768570?ref_=tt_rls_2"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/film.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNTc0ZDk1YWItZDZiNi00NTdmLWE0MDctNTVhYTRhMDBmZjNjXkEyXkFqcGdeQXVyMjUzOTY1NTc@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls076768570?ref_=tt_rls_2"
>
Has Seen
</a></strong>
        </div>
        <div class="list_meta">
            a list of 24 titles
            <br />created 21&nbsp;Feb&nbsp;2015
        </div>
        <div class="clear">&nbsp;</div>
    </div>
    <div class="list-preview even">
        <div class="list-preview-item-narrow">
<a href="/list/ls076310036?ref_=tt_rls_3"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/film.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMGExOGExM2UtNWM5ZS00OWEzLTllNzYtM2NlMTJlYjBlZTJkXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls076310036?ref_=tt_rls_3"
>
Good Plot Ideas
</a></strong>
        </div>
        <div class="list_meta">
            a list of 25 titles
            <br />created 07&nbsp;Mar&nbsp;2015
        </div>
        <div class="clear">&nbsp;</div>
    </div>
    <div class="list-preview odd">
        <div class="list-preview-item-narrow">
<a href="/list/ls072079063?ref_=tt_rls_4"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/film.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTZkZTBhYmUtMTIzNy00YTViLTg1OWItNGUwMmVlN2FjZTVkXkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls072079063?ref_=tt_rls_4"
>
A bunch of SciFi films worth watching
</a></strong>
        </div>
        <div class="list_meta">
            a list of 27 titles
            <br />created 28&nbsp;Apr&nbsp;2015
        </div>
        <div class="clear">&nbsp;</div>
    </div>
    <div class="list-preview even">
        <div class="list-preview-item-narrow">
<a href="/list/ls032870196?ref_=tt_rls_5"
><img height="86" width="86" alt="list image" title="list image"src="/images/nopicture/medium/film.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjE4NzgzNzEwMl5BMl5BanBnXkFtZTgwMTMzMDE0NjE@._V1_UX86_CR0,0,86,86_AL_.jpg" /></a>        </div>
        <div class="list_name">
            <strong><a href="/list/ls032870196?ref_=tt_rls_5"
>
My Top 50 Favorite Movies Ever
</a></strong>
        </div>
        <div class="list_meta">
            a list of 34 titles
            <br />created 8&nbsp;months&nbsp;ago
        </div>
        <div class="clear">&nbsp;</div>
    </div>
                <div class="see-more">
                    <a href="/lists/tt1375666?ref_=tt_rls_sm"
>See all related lists</a>&nbsp;&raquo;
                </div>
            </div>
        </div>
<script>
    if (typeof uet == 'function') {
      uet("be", "RelatedListsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "RelatedListsWidget", {wb: 1});
    }
</script>


    
    
        <a name="slot_right-8"></a>
        <div class="mini-article">
        
    
        
                                

    
            <script type="text/javascript">if(typeof uet === 'function'){uet('bb','MessageWidget',{wb:1});}</script>
                                

                    
    
        <span class="ab_widget">
        
    

    <div class="ab_message">
<span class="widget_header"> <h3>Related Items</h3> </span> <div class="widget_content inline_blurb"> <div class="widget_nested"> <div class="ninja_image_pack"> <div class="ninja_left"> <div class="ninja_image first_image last_image" style="width:38px;height:auto;" > <div style="width:38px;height:auto;margin:0 auto;"> <div class="widget_image"> <div class="image"> <a href="/offsite/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2696332842&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-8&pf_rd_t=15021&pf_rd_i=tt1375666&page-action=offsite-amazon&token=BCYmbHc4nS83hl_4EtrFexVwo65xtdJbk6qXOeLA08yRI4DWVdmSZ4blhRSdaE7qdrD6e7ogj4XU%0D%0Aec1IxQgcCTxB0nxbDY-S2AqSkq0dQv3X5P_Z_D4DVkY2phNd5_J2Qwb6c4YSRlHKoMX80iFEKiWM%0D%0AjtkQ1MH-Vcrghi26oi0-6HN8n-sS8QOtjl6gBmHIgLGzZyWGu7597YwQ4aioU6IPXt74MuVeopRE%0D%0A0c8vKkuBD3Bgr2H4KixQy_yGGLYguH74Pft2p2Q1H2lyA4nneqx45gdk-Gv6tmZB3CqZXLh2GYY%0D%0A&ref_=tt_msg_i_1" > <img itemprop="image" class="pri_image" title="Search for &quot;Inception&quot; on Amazon.com" alt="Search for &quot;Inception&quot; on Amazon.com" src="https://images-na.ssl-images-amazon.com/images/G/01/imdb/images/widget/amazon._CB339202444_.png" data-src-x2="https://images-na.ssl-images-amazon.com/images/G/01/imdb/images/widget/amazon._CB339202444_UY76_UX76_AL_.png" /> </a> </div> </div> </div> </div> </div> </div> </div> <div class="ninja_image ninja_image_fixed_padding widget_padding"></div><div class="widget_inline_blurb"><p class="blurb">Search for "<a href="/offsite/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2696332842&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-8&pf_rd_t=15021&pf_rd_i=tt1375666&page-action=offsite-amazon&token=BCYnwqSUbM86gtsMifXu_zRooDpAj-yVvbfGSartZTQXGGxZdTx5uxmNgwSVhvby3T2d3qDJq_ht%0D%0AkrYb7PsJf0PBYzeQKn-0Ua3J5_rzZ8mpCAMS9RIRxmcvkqVZHGiaMFP067x18wR9P8A4sYZMAz7H%0D%0ARMMsZ3kevRZjllg4skVzNEPI2y7vkgyXrSjdm61R00n9-IHD2JJ3IU_4pR5qaxu-OPmvK7XhCFqg%0D%0AGryCEPa0B-KQFqwzKpvSDkmdWQRnVqRqxGJD9nQlztIluC-7-zeGRwutblUrm-0zRff1S6r1hbU%0D%0A&ref_=tt_msg_ov">Inception</a>" on <a href="/offsite/?pf_rd_m=A2FGELUUNOQJNL&pf_rd_p=2696332842&pf_rd_r=1EF5D7PVBB78RP27QXDQ&pf_rd_s=right-8&pf_rd_t=15021&pf_rd_i=tt1375666&page-action=offsite-amazon&token=BCYqp193X8xMJzsnzbuhi_mdZ_5AL86VXycsoYRzV86SV36dpjdPUbXIK4kA4WoWbU4qV53au9rw%0D%0AMlI1zRPik5PY27UrFTu6ZLxuWolsc8gAWEFhGekEzlI9udFWEyFsREdfzwIn05l_FzAYosZY5yAF%0D%0AtxYNoahRxFMoKHMPvnp7xqu-v8m6QcOemeEyi4r9OdOQ1uNxp2fBgPnDUtpnXppznFUqX7heyPIp%0D%0ARptaKuhaSc58O1lc9IZSXV0eGW8WcCk2AUBd78EpYxj_A5C1A_6tTec8gw_gPDB-VBBM5PvTpcw%0D%0A&ref_=tt_msg_ov">Amazon.com</a></p> </div> </div>    </div>
    

                        
        </span>



            <script type="text/javascript">
                if(typeof uex === 'function'){uex('ld','MessageWidget',{wb:1});}
            </script>
        




        </div>
    

	
	<!-- no content received for slot: btf_rhs1 -->
	


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "ConnectWidget", {wb: 1});
    }
</script>
    <div class="mini-article">
        <h3>Connect with IMDb</h3>
        <div id="facebookWrapper">
            <iframe
                scrolling="no"
                frameborder="0"
                id="facebookIframe"
                allowTransparency="true"></iframe>
        </div>
        <hr>
        <iframe allowtransparency="true"
            frameborder="0"
            role="presentation"
            scrolling="no"
            id="twitterIframe"></iframe>
    </div>
<script>
    if (typeof uet == 'function') {
      uet("be", "ConnectWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "ConnectWidget", {wb: 1});
    }
</script>


    
    
    


  
      
    <div class="mini-article">
        <div id="ratingWidget">
            <h3>Share this Rating</h3>
            <p>
                Title:
                <strong>Inception</strong>
                (2010)
            </p>
            <span class="imdbRatingPlugin imdbRatingStyle1" data-user="" data-title="tt1375666" data-style="t1">
<a href="/title/tt1375666/?ref_=tt_plg_rt"
> <img alt="Inception (2010) on IMDb"
src="http://ia.media-imdb.com/images/G/01/imdb/images/plugins/imdb_46x22-2264473254._CB522318304_.png">
</a>                <span class="rating">8.8<span class="ofTen">/10</span></span>                
<img src="http://ia.media-imdb.com/images/G/01/imdb/images/plugins/imdb_star_22x21-2889147855._CB522318141_.png" class="star">
            </span>
            <p>Want to share IMDb's rating on your own site? Use the HTML below.</p>
            <div id="ratingPluginHTML" class="hidden">
                <div class="message_box small">
                    <div class="error">
                        <p>
                        You must be a registered user to use the IMDb rating plugin.
                        </p>
                        <a href="/register/login?ref_=tt_plg_rt"
class="cboxElement" rel='login'>Login</a>
                    </div>
                </div>
            </div>
            <div id="ratingWidgetLinks">
                <span class="titlePageSprite arrows show"></span>
                <a href="/plugins?titleId=tt1375666&ref_=tt_plg_rt"
id="toggleRatingPluginHTML" itemprop='url' >Show HTML</a>
                <a href="/plugins?titleId=tt1375666&ref_=tt_plg_rt"
itemprop='url'>View more styles</a>
            </div>
        </div>
    </div>


    
    
    


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleMainDetailsRelatedPolls", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMainDetailsRelatedPolls_started');
    }
  </script>
<div class="mini-article poll-widget-rhs ">
    <style>
        .mini-article.poll-widget-rhs ul li { margin-bottom: 0.5em; clear: left; font-weight: bold;}
        .mini-article.poll-widget-rhs span { margin-bottom: 0.5em; clear: left;}
        .mini-article.poll-widget-rhs img { float: left; padding: 0 5px 5px 0; height: 86px; width: 86px;}
    </style>
    <h3>User Polls</h3>
    <ul>
        <li>
<a href="/poll/8NhWtNQLpds/?ref_=tt_po_i1"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMzA5Zjc3ZTMtMmU5YS00YTMwLWI4MWUtYTU0YTVmNjVmODZhXkEyXkFqcGdeQXVyNjU0OTQ0OTY@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/8NhWtNQLpds/?ref_=tt_po_q1"
>Favorite movie of the year according to IMDb?</a>
        <li>
<a href="/poll/6AE6he9cqoY/?ref_=tt_po_i2"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNDQxOTc0MzMtZmRlOS00OWQ5LWI2ZDctOTAwNmMwOTYxYzlhXkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/6AE6he9cqoY/?ref_=tt_po_q2"
>Best Thought Provoking Sci-Fi Film?</a>
        <li>
<a href="/poll/rQeYMED9l-U/?ref_=tt_po_i3"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNjIzNTcwMDc3Nl5BMl5BanBnXkFtZTgwNzU5NTY5NzE@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/rQeYMED9l-U/?ref_=tt_po_q3"
>The Most Original Film Since 2000</a>
        <li>
<a href="/poll/PtCmZzT8wGM/?ref_=tt_po_i4"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/PtCmZzT8wGM/?ref_=tt_po_q4"
>Face-Off: Inception Vs. The Matrix</a>
        <li>
<a href="/poll/0H8pnvkYmS8/?ref_=tt_po_i5"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNTEyMjAwMDU1OV5BMl5BanBnXkFtZTcwNDQyNTkxMw@@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/0H8pnvkYmS8/?ref_=tt_po_q5"
>Best Cinematic Year Of The 21st Century ?</a>
        <li>
<a href="/poll/zvW2wGjtad8/?ref_=tt_po_i6"
><img height="86" width="86" alt="poll image" title="poll image"src="http://i.imdb.com/images/nopicture/140x209/unknown.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SX86_CR0,0,86,86_.jpg" /></a>        <a href="/poll/zvW2wGjtad8/?ref_=tt_po_q6"
>Favorite Film Genre</a>
    </ul>
    <div class="see-more"><a href="/poll/?ref_=tt_po_sm"
>See more polls &raquo;</a></div>
</div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMainDetailsRelatedPolls_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleMainDetailsRelatedPolls", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleMainDetailsRelatedPolls", {wb: 1});
    }
</script>


    
    
    

	
	<!-- no content received for slot: bottom_rhs -->
	


    
    
    

	
	<!-- begin BTF_RHS2 -->
<div id="btf_rhs2_wrapper" class="cornerstone_slot">
<script type="text/javascript">
doWithAds(function(){
ad_utils.register_ad('btf_rhs2');
});
</script>
<iframe id="btf_rhs2" name="btf_rhs2" class="yesScript" width="300" height="250" data-original-width="300" data-original-height="250" data-blank-serverside marginwidth="0" marginheight="0" frameborder="0" scrolling="no" allowtransparency="true" onload="doWithAds.call(this, function(){ ad_utils.on_ad_load(this); });" allowfullscreen="true"></iframe>
</div>
<div id="btf_rhs2_reflow_helper"></div>
<script>
doWithAds(function(){
ad_utils.inject_serverside_ad('btf_rhs2', '');
},"unable to inject serverside ad");
</script>
	


    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    </div> 

    <div id="main_bottom" class="main">

    
    
    



    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleAwardsWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleAwardsWidget_started');
    }
  </script>
      <div class="article highlighted" id="titleAwardsRanks">
          <strong>
<a href="/chart/top?ref_=tt_awd"
> Top Rated Movies #14
</a>          </strong>
          |

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleAwardsSummaryWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleAwardsSummaryWidget_started');
    }
  </script>
    <span itemprop="awards">
      <b>
        Won
        4
        Oscars.
      </b>
    </span>
    <span itemprop="awards">
        Another
      144 wins &amp; 198 nominations.
    </span>
    <span class="see-more inline">
<a href="/title/tt1375666/awards?ref_=tt_awd"
class="btn-full" >See more awards</a>&nbsp;&raquo;    </span>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleAwardsSummaryWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleAwardsSummaryWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleAwardsSummaryWidget", {wb: 1});
    }
</script>
      </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleAwardsWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleAwardsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleAwardsWidget", {wb: 1});
    }
</script>


    
    
    



    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleMediaStripWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMediaStripWidget_started');
    }
  </script>


  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMediaStripWidget_started');
    }
  </script>

      <div class = "article" id="titleMediaStrip">
        <div class="mediastrip_container combined">
                <div id="combined-videos">
                    <h2>Videos</h2>
    <div class="mediastrip_big">
                <span class="video_slate" itemscope itemtype="http://schema.org/videoObject">
                <meta itemprop="duration" content="T1M14S" />

<a href="/video/screenplay/vi379389465?ref_=tt_pv_vi_aiv_1"
title="Inception -- Clip: Don't be afraid to dream a little bigger" alt="Inception -- Clip: Don't be afraid to dream a little bigger" class="video-modal" data-video="vi379389465" data-context="screenplay" data-rid="1EF5D7PVBB78RP27QXDQ" widget-context="titleMaindetails" itemprop="url" ><img height="105" width="139" alt="Inception -- Clip: Don't be afraid to dream a little bigger" title="Inception -- Clip: Don't be afraid to dream a little bigger"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/no-video-slate-856072904._CB522318276_.png"class="loadlate hidden video" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTMwNjEwMDQwMF5BMl5BanBnXkFtZTcwMTM3NjQ2Mw@@._V1_SP229,229,0,C,0,0,0_CR45,62,139,105_PIimdb-blackband-204-14,TopLeft,0,0_PIimdb-blackband-204-28,BottomLeft,0,1_CR0,0,139,105_PIimdb-bluebutton-big,BottomRight,-1,-1_ZAClip,2,76,16,137,verdenab,8,255,255,255,1_ZAon%2520IMDb,2,1,14,137,verdenab,7,255,255,255,1_ZA01:14,103,1,14,36,verdenab,7,255,255,255,1_.jpg" itemprop='image' viconst="vi379389465" /></a>            </span>
                <span class="video_slate_last" itemscope itemtype="http://schema.org/videoObject">
                <meta itemprop="duration" content="T2M35S" />

<a href="/video/imdb/vi3399785241?ref_=tt_pv_vi_aiv_2"
title="Inception -- Inception: Behind the Scenes Featurette" alt="Inception -- Inception: Behind the Scenes Featurette" class="video-modal" data-video="vi3399785241" data-context="imdb" data-rid="1EF5D7PVBB78RP27QXDQ" widget-context="titleMaindetails" itemprop="url" ><img height="105" width="139" alt="Inception -- Inception: Behind the Scenes Featurette" title="Inception -- Inception: Behind the Scenes Featurette"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/no-video-slate-856072904._CB522318276_.png"class="loadlate hidden video" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTcxNTA2OTk1Nl5BMl5BanBnXkFtZTgwMDU1Njg4MjE@._V1_SP229,229,0,C,0,0,0_CR45,62,139,105_PIimdb-blackband-204-14,TopLeft,0,0_PIimdb-blackband-204-28,BottomLeft,0,1_CR0,0,139,105_PIimdb-bluebutton-big,BottomRight,-1,-1_ZAFeaturette,2,76,16,137,verdenab,8,255,255,255,1_ZAon%2520IMDb,2,1,14,137,verdenab,7,255,255,255,1_ZA02:35,103,1,14,36,verdenab,7,255,255,255,1_PIimdb-HDIconMiniWhite,BottomLeft,2,-2_.jpg" itemprop='image' viconst="vi3399785241" /></a>            </span>
    </div>
                </div>
                <div id="combined-photos">
                    <h2>Photos</h2>
    <div class="mediastrip">        	
                
<a href="/title/tt1375666/mediaviewer/rm504267520?context=default&ref_=tt_pv_md_1"
itemprop='thumbnailUrl'><img height="105" width="105" alt="Leonardo DiCaprio at Inception (2010)" title="Leonardo DiCaprio at Inception (2010)"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/unknown-1394846836._CB522318242_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjIzNjc5NTMwM15BMl5BanBnXkFtZTcwMjQyODU2Mw@@._V1_UX105_CR0,0,105,105_AL_.jpg" itemprop='image' /></a>                
<a href="/title/tt1375666/mediaviewer/rm437158656?context=default&ref_=tt_pv_md_2"
itemprop='thumbnailUrl'><img height="105" width="105" alt="Lukas Haas at Inception (2010)" title="Lukas Haas at Inception (2010)"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/unknown-1394846836._CB522318242_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTc3NTYyMTkyMl5BMl5BanBnXkFtZTcwNjQyODU2Mw@@._V1_UX105_CR0,0,105,105_AL_.jpg" itemprop='image' /></a>                
<a href="/title/tt1375666/mediaviewer/rm683639552?context=default&ref_=tt_pv_md_3"
itemprop='thumbnailUrl'><img height="105" width="105" alt="Lukas Haas and Ken Watanabe in Inception (2010)" title="Lukas Haas and Ken Watanabe in Inception (2010)"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/unknown-1394846836._CB522318242_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNDExNzM4MV5BMl5BanBnXkFtZTcwNDY0OTk1Mw@@._V1_UY105_CR26,0,105,105_AL_.jpg" itemprop='image' /></a>    </div>
                </div>
            <div class="combined-see-more see-more">
<a href="/title/tt1375666/mediaindex?ref_=tt_pv_mi_sm"
><span class="titlePageSprite showAllVidsAndPics"></span></a>
<a href="/title/tt1375666/mediaindex?ref_=tt_pv_mi_sm"
>215 photos</a>
<span class="ghost">|</span>
<a href="/title/tt1375666/videogallery?ref_=tt_pv_vi_sm"
>17 videos</a>
<span class="ghost">|</span>
<a href="/title/tt1375666/news?ref_=tt_pv_nw_sm"
>10483 news articles</a> &raquo;            </div>
        </div>
      </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMediaStripWidget_finished');
    }
  </script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMediaStripWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleMediaStripWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleMediaStripWidget", {wb: 1});
    }
</script>



<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleRecsWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleRecsWidget_started');
    }
  </script>
    
        <div class="article" id="titleRecs">
            <span class="rightcornerlink">
            <a href="/help/show_leaf?personalrecommendations&ref_=tt_rec_lm"
>Learn more</a>
            </span>
            
            <h2 class="rec_heading_wrapper">  
                <span class="rec_heading" data-spec="p13nsims:tt1375666">People who liked this also liked...&nbsp;</span>
            </h2>

            <div class="rec_wrapper" id="title_recs"
                data-items-per-request="24"
                data-items-per-page="6"
                data-specs="p13nsims:tt1375666"
                data-caller-name="p13nsims-title">      
                
    <div class="rec_const_picker">
        <div class="rec_view">
            <div class="rec_grave" style="display:none"></div>
            <div class="rec_slide">
                        <div class="rec_page">         
    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0468569">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0468569/?ref_=tt_rec_tti"
><img height="113" width="76" alt="The Dark Knight" title="The Dark Knight"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0137523">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0137523/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Fight Club" title="Fight Club"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMzc1YmU2ZjEtYWIwMC00ZjM3LWI0NTctMDVlNGQ3YmYwMzE5XkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_UY113_CR2,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0109830">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0109830/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Forrest Gump" title="Forrest Gump"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BYThjM2MwZGMtMzg3Ny00NGRkLWE4M2EtYTBiNWMzOTY0YTI4XkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_UY113_CR5,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0816692">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0816692/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Interstellar" title="Interstellar"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@._V1_UX76_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0133093">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0133093/?ref_=tt_rec_tti"
><img height="113" width="76" alt="The Matrix" title="The Matrix"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMDMyMmQ5YzgtYWMxOC00OTU0LWIwZjEtZWUwYTY5MjVkZjhhXkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_UY113_CR3,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt1345836">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1345836/?ref_=tt_rec_tti"
><img height="113" width="76" alt="The Dark Knight Rises" title="The Dark Knight Rises"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTk4ODQzNDY3Ml5BMl5BanBnXkFtZTcwODA0NTM4Nw@@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

                        </div>
                        <div class="rec_page">         
    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0110912">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0110912/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Pulp Fiction" title="Pulp Fiction"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTkxMTA5OTAzMl5BMl5BanBnXkFtZTgwNjA5MDc3NjE@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0167260">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0167260/?ref_=tt_rec_tti"
><img height="113" width="76" alt="The Lord of the Rings: The Return of the King" title="The Lord of the Rings: The Return of the King"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjE4MjA1NTAyMV5BMl5BanBnXkFtZTcwNzM1NDQyMQ@@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt1853728">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1853728/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Django Unchained" title="Django Unchained"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjIyNTQ5NjQ1OV5BMl5BanBnXkFtZTcwODg1MDU4OA@@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0167261">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0167261/?ref_=tt_rec_tti"
><img height="113" width="76" alt="The Lord of the Rings: The Two Towers" title="The Lord of the Rings: The Two Towers"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTAyNDU0NjY4NTheQTJeQWpwZ15BbWU2MDk4MTY2Nw@@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0120737">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0120737/?ref_=tt_rec_tti"
><img height="113" width="76" alt="The Lord of the Rings: The Fellowship of the Ring" title="The Lord of the Rings: The Fellowship of the Ring"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNTEyMjAwMDU1OV5BMl5BanBnXkFtZTcwNDQyNTkxMw@@._V1_UY113_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

    
    
    <div class="rec_item" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt1130884">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1130884/?ref_=tt_rec_tti"
><img height="113" width="76" alt="Shutter Island" title="Shutter Island"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/small/film-293970583._CB522318165_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxMTIyNzMxMV5BMl5BanBnXkFtZTcwOTc4OTI3Mg@@._V1_UX76_CR0,0,76,113_AL_.jpg" /> <br/>
</a>    </div>

                        </div>
            </div>
            <div class="rec_nav">
                <div class="rec_nav_page_num"></div>
                <a class="rec_nav_left">&#9668; Prev 6</a>
                <a class="rec_nav_right">Next 6 &#9658;</a>
            </div>
        </div>
    </div>
    
   <div class="rec_overviews">

         
      <div class="rec_overview" data-tconst="tt0468569">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0468569">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0468569/?ref_=tt_rec_tti"
><img height="190" width="128" alt="The Dark Knight" title="The Dark Knight"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_UY190_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0468569" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0468569/?ref_=tt_rec_tt"
><b>The Dark Knight</b></a>
            <span class="nobr">(2008)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for The Dark Knight (2008)"
                          class="us_pg_13 titlePageSprite absmiddle"></span>

                     Action          
 <span class="ghost">|</span> 
                     Crime          
 <span class="ghost">|</span> 
                     Drama          

        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0468569|imdb|9|9|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 9/10 (1,725,640 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 126px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">9</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0468569/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
When the menace known as the Joker wreaks havoc and chaos on the people of Gotham, the caped crusader must come to terms with one of the greatest psychological tests of his ability to fight injustice.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Christopher Nolan  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Christian Bale, 
Heath Ledger, 
Aaron Eckhart</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0137523">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0137523">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0137523/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Fight Club" title="Fight Club"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMzc1YmU2ZjEtYWIwMC00ZjM3LWI0NTctMDVlNGQ3YmYwMzE5XkEyXkFqcGdeQXVyMTQxNzMzNDI@._V1_UY190_CR3,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0137523" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0137523/?ref_=tt_rec_tt"
><b>Fight Club</b></a>
            <span class="nobr">(1999)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for Fight Club (1999)"
                          class="us_r titlePageSprite absmiddle"></span>

                     Drama          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0137523|imdb|8.8|8.8|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.8/10 (1,390,582 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 123.2px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.8</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0137523/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
An insomniac office worker, looking for a way to change his life, crosses paths with a devil-may-care soap maker, forming an underground fight club that evolves into something much, much more.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
David Fincher  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Brad Pitt, 
Edward Norton, 
Meat Loaf</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0109830">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0109830">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0109830/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Forrest Gump" title="Forrest Gump"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BYThjM2MwZGMtMzg3Ny00NGRkLWE4M2EtYTBiNWMzOTY0YTI4XkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_UY190_CR8,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0109830" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0109830/?ref_=tt_rec_tt"
><b>Forrest Gump</b></a>
            <span class="nobr">(1994)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for Forrest Gump (1994)"
                          class="us_pg_13 titlePageSprite absmiddle"></span>

                     Comedy          
 <span class="ghost">|</span> 
                     Drama          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0109830|imdb|8.8|8.8|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.8/10 (1,296,082 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 123.2px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.8</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0109830/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
Forrest Gump, while not intelligent, has accidentally been present at many historic moments, but his true love, Jenny Curran, eludes him.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Robert Zemeckis  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Tom Hanks, 
Robin Wright, 
Gary Sinise</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0816692">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0816692">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0816692/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Interstellar" title="Interstellar"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjIxNTU4MzY4MF5BMl5BanBnXkFtZTgwMzM4ODI3MjE@._V1_UX128_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0816692" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0816692/?ref_=tt_rec_tt"
><b>Interstellar</b></a>
            <span class="nobr">(2014)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for Interstellar (2014)"
                          class="us_pg_13 titlePageSprite absmiddle"></span>

                     Adventure          
 <span class="ghost">|</span> 
                     Drama          
 <span class="ghost">|</span> 
                     Sci-Fi          

        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0816692|imdb|8.6|8.6|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.6/10 (978,934 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 120.4px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.6</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0816692/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
A team of explorers travel through a wormhole in space in an attempt to ensure humanity's survival.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Christopher Nolan  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Matthew McConaughey, 
Anne Hathaway, 
Jessica Chastain</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0133093">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0133093">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0133093/?ref_=tt_rec_tti"
><img height="190" width="128" alt="The Matrix" title="The Matrix"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMDMyMmQ5YzgtYWMxOC00OTU0LWIwZjEtZWUwYTY5MjVkZjhhXkEyXkFqcGdeQXVyNDYyMDk5MTU@._V1_UY190_CR4,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0133093" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0133093/?ref_=tt_rec_tt"
><b>The Matrix</b></a>
            <span class="nobr">(1999)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for The Matrix (1999)"
                          class="us_r titlePageSprite absmiddle"></span>

                     Action          
 <span class="ghost">|</span> 
                     Sci-Fi          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0133093|imdb|8.7|8.7|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.7/10 (1,253,697 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 121.8px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.7</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0133093/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
A computer hacker learns from mysterious rebels about the true nature of his reality and his role in the war against its controllers.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Directors:</b>
Lana Wachowski,
Lilly Wachowski  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Keanu Reeves, 
Laurence Fishburne, 
Carrie-Anne Moss</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt1345836">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt1345836">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1345836/?ref_=tt_rec_tti"
><img height="190" width="128" alt="The Dark Knight Rises" title="The Dark Knight Rises"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTk4ODQzNDY3Ml5BMl5BanBnXkFtZTcwODA0NTM4Nw@@._V1_UY190_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt1345836" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt1345836/?ref_=tt_rec_tt"
><b>The Dark Knight Rises</b></a>
            <span class="nobr">(2012)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for The Dark Knight Rises (2012)"
                          class="us_pg_13 titlePageSprite absmiddle"></span>

                     Action          
 <span class="ghost">|</span> 
                     Thriller          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt1345836|imdb|8.5|8.5|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.5/10 (1,178,301 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 119px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.5</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt1345836/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
Eight years after the Joker's reign of anarchy, the Dark Knight, with the help of the enigmatic Selina, is forced from his imposed exile to save Gotham City, now on the edge of total annihilation, from the brutal guerrilla terrorist Bane.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Christopher Nolan  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Christian Bale, 
Tom Hardy, 
Anne Hathaway</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0110912">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0110912">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0110912/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Pulp Fiction" title="Pulp Fiction"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTkxMTA5OTAzMl5BMl5BanBnXkFtZTgwNjA5MDc3NjE@._V1_UX128_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0110912" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0110912/?ref_=tt_rec_tt"
><b>Pulp Fiction</b></a>
            <span class="nobr">(1994)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for Pulp Fiction (1994)"
                          class="us_r titlePageSprite absmiddle"></span>

                     Crime          
 <span class="ghost">|</span> 
                     Drama          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0110912|imdb|8.9|8.9|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.9/10 (1,363,503 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 124.6px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.9</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0110912/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
The lives of two mob hit men, a boxer, a gangster's wife, and a pair of diner bandits intertwine in four tales of violence and redemption.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Quentin Tarantino  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
John Travolta, 
Uma Thurman, 
Samuel L. Jackson</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0167260">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0167260">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0167260/?ref_=tt_rec_tti"
><img height="190" width="128" alt="The Lord of the Rings: The Return of the King" title="The Lord of the Rings: The Return of the King"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjE4MjA1NTAyMV5BMl5BanBnXkFtZTcwNzM1NDQyMQ@@._V1_UY190_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0167260" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0167260/?ref_=tt_rec_tt"
><b>The Lord of the Rings: The Return of the King</b></a>
            <span class="nobr">(2003)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for The Lord of the Rings: The Return of the King (2003)"
                          class="us_pg_13 titlePageSprite absmiddle"></span>

                     Adventure          
 <span class="ghost">|</span> 
                     Drama          
 <span class="ghost">|</span> 
                     Fantasy          

        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0167260|imdb|8.9|8.9|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.9/10 (1,250,531 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 124.6px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.9</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0167260/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
Gandalf and Aragorn lead the World of Men against Sauron's army to draw his gaze from Frodo and Sam as they approach Mount Doom with the One Ring.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Peter Jackson  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Elijah Wood, 
Viggo Mortensen, 
Ian McKellen</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt1853728">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt1853728">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1853728/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Django Unchained" title="Django Unchained"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjIyNTQ5NjQ1OV5BMl5BanBnXkFtZTcwODg1MDU4OA@@._V1_UY190_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt1853728" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt1853728/?ref_=tt_rec_tt"
><b>Django Unchained</b></a>
            <span class="nobr">(2012)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for Django Unchained (2012)"
                          class="us_r titlePageSprite absmiddle"></span>

                     Drama          
 <span class="ghost">|</span> 
                     Western          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt1853728|imdb|8.4|8.4|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.4/10 (990,583 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 117.6px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.4</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt1853728/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
With the help of a German bounty hunter, a freed slave sets out to rescue his wife from a brutal Mississippi plantation owner.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Quentin Tarantino  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Jamie Foxx, 
Christoph Waltz, 
Leonardo DiCaprio</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0167261">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0167261">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0167261/?ref_=tt_rec_tti"
><img height="190" width="128" alt="The Lord of the Rings: The Two Towers" title="The Lord of the Rings: The Two Towers"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTAyNDU0NjY4NTheQTJeQWpwZ15BbWU2MDk4MTY2Nw@@._V1_UY190_CR1,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0167261" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0167261/?ref_=tt_rec_tt"
><b>The Lord of the Rings: The Two Towers</b></a>
            <span class="nobr">(2002)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for The Lord of the Rings: The Two Towers (2002)"
                          class="us_pg_13 titlePageSprite absmiddle"></span>

                     Adventure          
 <span class="ghost">|</span> 
                     Drama          
 <span class="ghost">|</span> 
                     Fantasy          

        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0167261|imdb|8.7|8.7|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.7/10 (1,132,732 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 121.8px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.7</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0167261/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
While Frodo and Sam edge closer to Mordor with the help of the shifty Gollum, the divided fellowship makes a stand against Sauron's new ally, Saruman, and his hordes of Isengard.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Peter Jackson  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Elijah Wood, 
Ian McKellen, 
Viggo Mortensen</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt0120737">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt0120737">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt0120737/?ref_=tt_rec_tti"
><img height="190" width="128" alt="The Lord of the Rings: The Fellowship of the Ring" title="The Lord of the Rings: The Fellowship of the Ring"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BNTEyMjAwMDU1OV5BMl5BanBnXkFtZTcwNDQyNTkxMw@@._V1_UY190_CR1,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt0120737" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt0120737/?ref_=tt_rec_tt"
><b>The Lord of the Rings: The Fellowship of the Ring</b></a>
            <span class="nobr">(2001)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for The Lord of the Rings: The Fellowship of the Ring (2001)"
                          class="us_pg_13 titlePageSprite absmiddle"></span>

                     Adventure          
 <span class="ghost">|</span> 
                     Drama          
 <span class="ghost">|</span> 
                     Fantasy          

        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt0120737|imdb|8.8|8.8|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.8/10 (1,272,869 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 123.2px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.8</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt0120737/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
A meek Hobbit from the Shire and eight companions set out on a journey to destroy the powerful One Ring and save Middle Earth from the Dark Lord Sauron.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Peter Jackson  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Elijah Wood, 
Ian McKellen, 
Orlando Bloom</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
         
      <div class="rec_overview" data-tconst="tt1130884">
    
    
    
    <div class="rec_poster" data-info="" data-spec="p13nsims:tt1375666" data-tconst="tt1130884">
        <div class="rec_overlay">
            <div class="rec_filter"></div>
            <div class="glyph rec_watchlist_glyph"></div>
            <div class="glyph rec_blocked_glyph"></div>
            <div class="glyph rec_rating_glyph"></div>
            <div class="glyph rec_pending_glyph"></div>                        
        </div>            
<a href="/title/tt1130884/?ref_=tt_rec_tti"
><img height="190" width="128" alt="Shutter Island" title="Shutter Island"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/large/film-184890147._CB522318304_.png"class="loadlate hidden rec_poster_img" loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTMxMTIyNzMxMV5BMl5BanBnXkFtZTcwOTc4OTI3Mg@@._V1_UX128_CR0,0,128,190_AL_.jpg" /> <br/>
</a>    </div>

    
       <div class="rec_actions">
     
         <div class="rec_action_divider">
           <div class="wlb_classic_wrapper">
             <span class="wlb_wrapper">
               <a class="rec_wlb_watchlist_btn" data-tconst="tt1130884" data-size="medium" data-caller-name="p13nsims-title" data-type="primary"></a>
             </span>
           </div>  
         </div> 
       
         <div class="rec_action_divider">
           <span class="btn2_wrapper">
             <a class="rec_next rec_half_button btn2 medium btn2_text_on" title="Show me the next title" onclick="">
               <span class="btn2_glyph">0</span>
               <span class="btn2_text">Next &raquo;</span>
             </a>
           </span>
         </div>    
         
             <input type="hidden" name="49e6c" value="869a">
       </div>
       
       <div class="rec_details">
         <div class="rec-info">
         
           <div class="rec-jaw-upper">  

     <div class="rec-title">
       <a href="/title/tt1130884/?ref_=tt_rec_tt"
><b>Shutter Island</b></a>
            <span class="nobr">(2010)</span>
   </div>  
             


    <div class="rec-cert-genre rec-elipsis">
        

            
            
                
                    <span title="Ratings certificate for Shutter Island (2010)"
                          class="us_r titlePageSprite absmiddle"></span>

                     Mystery          
 <span class="ghost">|</span> 
                     Thriller          


        
    </div>
             
             <div class="rec-rating">
               

  

  
<div class="rating rating-list" data-starbar-class="rating-list" data-auth="" data-user="" id="tt1130884|imdb|8.1|8.1|p13nsims-title|tt1375666|title|main" data-ga-identifier=""
title="Users rated this 8.1/10 (815,452 votes) - click stars to rate" >
<span class="rating-bg">&nbsp;</span>
<span class="rating-imdb " style="width: 113.4px">&nbsp;</span>
<span class="rating-stars">
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>1</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>2</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>3</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>4</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>5</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>6</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>7</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>8</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>9</span></a>
      <a href="/register/login?why=vote&ref_=tt_ov_rt"
rel="nofollow" title="Register or login to rate this title" ><span>10</span></a>
</span>
<span class="rating-rating "><span class="value">8.1</span><span class="grey">/</span><span class="grey">10</span></span>
<span class="rating-cancel "><a href="/title/tt1130884/vote?v=X;k=" title="Delete" rel="nofollow"><span>X</span></a></span>
&nbsp;</div>

               <div class="rec-outline">
    <p>
In 1954, a U.S. marshal investigates the disappearance of a murderess who escaped from a hospital for the criminally insane.    </p>
               </div>
               
             </div>  
             
           </div>
           
           <div class="rec-jaw-lower">
             <div class="rec-jaw-teeth"></div>                       
 <div class="rec-director rec-ellipsis">
      <b>Director:</b>
Martin Scorsese  </div>
<div class="rec-actor rec-ellipsis"> <span>
    <b>Stars:</b> 
Leonardo DiCaprio, 
Emily Mortimer, 
Mark Ruffalo</span></div> 
           </div>
           
         </div>
       </div>
 
      </div>
     
    
   </div>
   
                
            </div>
        </div>  
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleRecsWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleRecsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleRecsWidget", {wb: 1});
    }
</script>


<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleCastWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleCastWidget_started');
    }
  </script>
    <div class="article" id="titleCast">
    <span class=rightcornerlink >
            <a href="/register/login?why=edit&ref_=tt_cl"
rel="login">Edit</a>
    </span>
        <h2>Cast</h2>
        
        <table class="cast_list">    
  <tr><td colspan="4" class="castlist_label">Cast overview, first billed only:</td></tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0000138/?ref_=tt_cl_i1"
><img height="44" width="32" alt="Leonardo DiCaprio" title="Leonardo DiCaprio"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjI0MTg3MzI0M15BMl5BanBnXkFtZTcwMzQyODU2Mw@@._V1_UY44_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0000138/?ref_=tt_cl_t1"
itemprop='url'> <span class="itemprop" itemprop="name">Leonardo DiCaprio</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0162705/?ref_=tt_cl_t1" >Cobb</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm0330687/?ref_=tt_cl_i2"
><img height="44" width="32" alt="Joseph Gordon-Levitt" title="Joseph Gordon-Levitt"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTQzOTg0NTkzNF5BMl5BanBnXkFtZTcwNTQ4MTcwOQ@@._V1_UY44_CR4,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0330687/?ref_=tt_cl_t2"
itemprop='url'> <span class="itemprop" itemprop="name">Joseph Gordon-Levitt</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0157860/?ref_=tt_cl_t2" >Arthur</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0680983/?ref_=tt_cl_i3"
><img height="44" width="32" alt="Ellen Page" title="Ellen Page"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTU3MzM3MDYzMV5BMl5BanBnXkFtZTcwNzk1Mzc3NA@@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0680983/?ref_=tt_cl_t3"
itemprop='url'> <span class="itemprop" itemprop="name">Ellen Page</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0162708/?ref_=tt_cl_t3" >Ariadne</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm0362766/?ref_=tt_cl_i4"
><img height="44" width="32" alt="Tom Hardy" title="Tom Hardy"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ3ODEyNjA4Nl5BMl5BanBnXkFtZTgwMTE4ODMyMjE@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0362766/?ref_=tt_cl_t4"
itemprop='url'> <span class="itemprop" itemprop="name">Tom Hardy</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0158128/?ref_=tt_cl_t4" >Eames</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0913822/?ref_=tt_cl_i5"
><img height="44" width="32" alt="Ken Watanabe" title="Ken Watanabe"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTQzMTUzNjc4Nl5BMl5BanBnXkFtZTcwMTUyODU2Mw@@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0913822/?ref_=tt_cl_t5"
itemprop='url'> <span class="itemprop" itemprop="name">Ken Watanabe</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0162706/?ref_=tt_cl_t5" >Saito</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm2438307/?ref_=tt_cl_i6"
><img height="44" width="32" alt="Dileep Rao" title="Dileep Rao"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTI5Nzc2NTc2MF5BMl5BanBnXkFtZTcwMDM2MTc1Mg@@._V1_UY44_CR17,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm2438307/?ref_=tt_cl_t6"
itemprop='url'> <span class="itemprop" itemprop="name">Dileep Rao</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0210668/?ref_=tt_cl_t6" >Yusuf</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0614165/?ref_=tt_cl_i7"
><img height="44" width="32" alt="Cillian Murphy" title="Cillian Murphy"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTUzMjg1NzIyOV5BMl5BanBnXkFtZTYwMzg2Mjgy._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0614165/?ref_=tt_cl_t7"
itemprop='url'> <span class="itemprop" itemprop="name">Cillian Murphy</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0209848/?ref_=tt_cl_t7" >Robert Fischer</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm0000297/?ref_=tt_cl_i8"
><img height="44" width="32" alt="Tom Berenger" title="Tom Berenger"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTk1OTQ5MzUzM15BMl5BanBnXkFtZTgwMDUxMTY1NDE@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0000297/?ref_=tt_cl_t8"
itemprop='url'> <span class="itemprop" itemprop="name">Tom Berenger</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0158129/?ref_=tt_cl_t8" >Browning</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0182839/?ref_=tt_cl_i9"
><img height="44" width="32" alt="Marion Cotillard" title="Marion Cotillard"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTQxNTEzNTkwNF5BMl5BanBnXkFtZTcwNzQ2NDIwOQ@@._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0182839/?ref_=tt_cl_t9"
itemprop='url'> <span class="itemprop" itemprop="name">Marion Cotillard</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0168247/?ref_=tt_cl_t9" >Mal</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm0000592/?ref_=tt_cl_i10"
><img height="44" width="32" alt="Pete Postlethwaite" title="Pete Postlethwaite"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTMyMjIxMTQ2NV5BMl5BanBnXkFtZTYwNDQ0NTE1._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0000592/?ref_=tt_cl_t10"
itemprop='url'> <span class="itemprop" itemprop="name">Pete Postlethwaite</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0209597/?ref_=tt_cl_t10" >Maurice Fischer</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm0000323/?ref_=tt_cl_i11"
><img height="44" width="32" alt="Michael Caine" title="Michael Caine"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMjAwNzIwNTQ4Ml5BMl5BanBnXkFtZTYwMzE1MTUz._V1_UX32_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0000323/?ref_=tt_cl_t11"
itemprop='url'> <span class="itemprop" itemprop="name">Michael Caine</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0209733/?ref_=tt_cl_t11" >Miles</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm0001305/?ref_=tt_cl_i12"
><img height="44" width="32" alt="Lukas Haas" title="Lukas Haas"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png"class="loadlate hidden " loadlate="https://images-na.ssl-images-amazon.com/images/M/MV5BMTQ3MjU1MDMxM15BMl5BanBnXkFtZTgwODk5ODE4MDE@._V1_UY44_CR0,0,32,44_AL_.jpg" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm0001305/?ref_=tt_cl_t12"
itemprop='url'> <span class="itemprop" itemprop="name">Lukas Haas</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0210669/?ref_=tt_cl_t12" >Nash</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm2581730/?ref_=tt_cl_i13"
><img height="44" width="32" alt="Tai-Li Lee" title="Tai-Li Lee"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png" class="" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm2581730/?ref_=tt_cl_t13"
itemprop='url'> <span class="itemprop" itemprop="name">Tai-Li Lee</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0478982/?ref_=tt_cl_t13" >Tadashi</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="even">
          <td class="primary_photo">
<a href="/name/nm3637500/?ref_=tt_cl_i14"
><img height="44" width="32" alt="Claire Geare" title="Claire Geare"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png" class="" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm3637500/?ref_=tt_cl_t14"
itemprop='url'> <span class="itemprop" itemprop="name">Claire Geare</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0149905/?ref_=tt_cl_t14" >Phillipa (3 years)</a> 
                  
              </div>
          </td>
      </tr>
      <tr class="odd">
          <td class="primary_photo">
<a href="/name/nm3960408/?ref_=tt_cl_i15"
><img height="44" width="32" alt="Magnus Nolan" title="Magnus Nolan"src="http://ia.media-imdb.com/images/G/01/imdb/images/nopicture/32x44/name-2138558783._CB522318235_.png" class="" /></a>          </td>
          <td class="itemprop" itemprop="actor" itemscope itemtype="http://schema.org/Person">
<a href="/name/nm3960408/?ref_=tt_cl_t15"
itemprop='url'> <span class="itemprop" itemprop="name">Magnus Nolan</span>
</a>          </td>
          <td class="ellipsis">
              ...
          </td>
          <td class="character">
              <div>
            <a href="/character/ch0162707/?ref_=tt_cl_t15" >James (20 months)</a> 
                  
              </div>
          </td>
      </tr>
        </table>
        <div class="see-more">
            <a href="fullcredits?ref_=tt_cl_sm#cast"
>See full cast</a>&nbsp;&raquo;
        </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleCastWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleCastWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleCastWidget", {wb: 1});
    }
</script>



    
    
    

	
	<!-- no content received for slot: maindetails_center_ad -->
	


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleStorylineWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleStorylineWidget_started');
    }
  </script>
    <div class = "article" id="titleStoryLine">
    <span class=rightcornerlink >
            <a href="/register/login?why=edit&ref_=tt_stry"
rel="login">Edit</a>
    </span>
    
        <h2>Storyline</h2>
        
        <div class="inline canwrap" itemprop="description">
            <p>
Dom Cobb is a skilled thief, the absolute best in the dangerous art of extraction, stealing valuable secrets from deep within the subconscious during the dream state, when the mind is at its most vulnerable. Cobb's rare ability has made him a coveted player in this treacherous new world of corporate espionage, but it has also made him an international fugitive and cost him everything he has ever loved. Now Cobb is being offered a chance at redemption. One last job could give him his life back but only if he can accomplish the impossible - inception. Instead of the perfect heist, Cobb and his team of specialists have to pull off the reverse: their task is not to steal an idea but to plant one. If they succeed, it could be the perfect crime. But no amount of careful planning or expertise can prepare the team for the dangerous enemy that seems to predict their every move. An enemy that only Cobb could have seen coming.                <em class="nobr">Written by
<a href="/search/title?plot_author=Warner%20Bros.%20Pictures&view=simple&sort=alpha&ref_=tt_stry_pl"
>Warner Bros. Pictures</a></em>            </p>
        </div>
        
        <span class="see-more inline"> 
                <a href="/title/tt1375666/plotsummary?ref_=tt_stry_pl"
>Plot Summary</a>
    <span>|</span>
        <a href="/title/tt1375666/synopsis?ref_=tt_stry_pl"
>Plot Synopsis</a>
    </span>
        <hr />
        <div class="see-more inline canwrap" itemprop="keywords">
            <h4 class="inline">Plot Keywords:</h4>
<a href="/keyword/dream?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">dream</span></a>
                        <span>|</span>
<a href="/keyword/subconscious?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">subconscious</span></a>
                        <span>|</span>
<a href="/keyword/ambiguous-ending?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">ambiguous ending</span></a>
                        <span>|</span>
<a href="/keyword/thief?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">thief</span></a>
                        <span>|</span>
<a href="/keyword/architecture?ref_=tt_stry_kw"
> <span class="itemprop" itemprop="keywords">architecture</span></a>
            <span>|</span>&nbsp;<nobr><a href="/title/tt1375666/keywords?ref_=tt_stry_kw"
>See All (283)</a>&nbsp;&raquo;</nobr>

        </div>      
        <hr />
        <div class="txt-block">
            <h4 class="inline">Taglines:</h4>
Your mind is the scene of the crime                <span class="see-more inline">
<a href="/title/tt1375666/taglines?ref_=tt_stry_tg"
> See more</a>&nbsp;&raquo;
                </span>
        </div>
        <hr />
        <div class="see-more inline canwrap" itemprop="genre">
            <h4 class="inline">Genres:</h4>
<a href="/genre/Action?ref_=tt_stry_gnr"
> Action</a>&nbsp;<span>|</span>
<a href="/genre/Adventure?ref_=tt_stry_gnr"
> Adventure</a>&nbsp;<span>|</span>
<a href="/genre/Sci-Fi?ref_=tt_stry_gnr"
> Sci-Fi</a>&nbsp;<span>|</span>
<a href="/genre/Thriller?ref_=tt_stry_gnr"
> Thriller</a>
        </div>      
        
             <hr/>
    
    <div class="txt-block">
                <h4>Motion Picture Rating
                    (<a href="/mpaa?ref_=tt_stry_pg"
>MPAA</a>)
                </h4>
            <span itemprop="contentRating">Rated PG-13 for sequences of violence and action throughout</span>
<span class="ghost">|</span>            <span class="see-more inline">
<a href="/title/tt1375666/parentalguide?ref_=tt_stry_pg#certification"
> See all certifications</a>&nbsp;&raquo;
            </span>
    </div>
    <div class="txt-block">
        <h4 class="inline">Parents Guide:</h4>
        <span class="see-more inline" itemprop="audience" itemscope itemtype="http://schema.org/Audience">
<a href="/title/tt1375666/parentalguide?ref_=tt_stry_pg"
itemprop='url'> View content advisory</a>&nbsp;&raquo;
        </span>
    </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleStorylineWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleStorylineWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleStorylineWidget", {wb: 1});
    }
</script>


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleDetailsWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleDetailsWidget_started');
    }
  </script>
    
    <div class = "article" id="titleDetails">
    <span class=rightcornerlink >
            <a href="/register/login?why=edit&ref_=tt_dt_dt"
rel="login">Edit</a>
    </span>
        <h2>Details</h2>
      <div class="txt-block">
      <h4 class="inline">Official Sites:</h4>
    <a href="/offsite/?page-action=offsite-facebook&token=BCYmw-AnJAktINTtlVU4RaRFQ79DkCG0TjQyruM712JgGAFUVhfbBtNwmAa9G1fPURaI8n_Jn5__%0D%0AIiFcK5kSxofW4uleP1wJFo5UX4dtzapa_WXCq3d3CwG3NxiYch-VOL3ufLVrYWxXNZsmII6RYaHe%0D%0AiEUX9IQxsWOmsYX6fShY5PXdPFoaaBPvLSJWgolBlsbS1fIv-HcrVq42-IETuHFV7OzTOsaYzYWa%0D%0Aoba8fq_AqO0%0D%0A&ref_=tt_pdt_ofs_offsite_0"
rel="nofollow" itemprop='url'>Official Facebook</a>
          <span class="ghost">|</span>
        
    <a href="/offsite/?page-action=offsite-warnerbros&token=BCYlAcKNmUhVW_YyfVlhZqwNZ3kSh4-nZpxbjhZTAme04tY5jar9dzBw09tYT8KjLWiw_pwUspzP%0D%0AhTQ36D9T9qVhwfBMzaI4dpRvE2Q6w2jOmF-zGkSNOa5Wl_4j1i5-aArXcOCsUQGtKWtpYqep7R7q%0D%0AbTXegPTbjownQ_D42-1yByFVVp6ZQIuKFvdd9NJOXcTUIFQsn9lKSUpgL_53Jz9KybHs-GoXTLtV%0D%0AsOmvaZwsJhE%0D%0A&ref_=tt_pdt_ofs_offsite_1"
rel="nofollow" itemprop='url'>Warner Bros. [Germany]</a>
          <span class="ghost">|</span>
               <span class="see-more inline">
          <a href="externalsites?ref_=tt_dt_dt#official"
itemprop='url'>See more</a>&nbsp;&raquo;
      </span>
      </div>
  
    <div class="txt-block">
    <h4 class="inline">Country:</h4>
        <a href="/search/title?country_of_origin=us&ref_=tt_dt_dt"
itemprop='url'>USA</a>
              <span class="ghost">|</span>
        <a href="/search/title?country_of_origin=gb&ref_=tt_dt_dt"
itemprop='url'>UK</a>
    </div>
  
    <div class="txt-block">
    <h4 class="inline">Language:</h4>
        <a href="/search/title?title_type=feature&primary_language=en&sort=moviemeter,asc&ref_=tt_dt_dt"
itemprop='url'>English</a>
            <span class="ghost">|</span>
        <a href="/search/title?title_type=feature&primary_language=ja&sort=moviemeter,asc&ref_=tt_dt_dt"
itemprop='url'>Japanese</a>
            <span class="ghost">|</span>
        <a href="/search/title?title_type=feature&primary_language=fr&sort=moviemeter,asc&ref_=tt_dt_dt"
itemprop='url'>French</a>
    </div>
  
    
    <div class="txt-block">
    <h4 class="inline">Release Date:</h4> 16 July 2010 (USA)
    <span class="see-more inline">
      <a href="releaseinfo?ref_=tt_dt_dt"
itemprop='url'>See more</a>&nbsp;&raquo;
    </span>
    </div>
  
      <div class="txt-block">
      <h4 class="inline">Also Known As:</h4> Inception: The IMAX Experience
      <span class="see-more inline">
        <a href="releaseinfo?ref_=tt_dt_dt#akas"
itemprop='url'>See more</a>&nbsp;&raquo;
      </span>
      </div>
  
    <div class="txt-block">
    <h4 class="inline">Filming Locations:</h4> 
    <a href="/search/title?locations=Bedfordshire,%20England,%20UK&ref_=tt_dt_dt"
itemprop='url'>Bedfordshire, England, UK</a>
      <span class="see-more inline">
        <a href="locations?ref_=tt_dt_dt"
itemprop='url'>See more</a>&nbsp;&raquo;
      </span>
    </div>
  
    <hr /> 
    <h3 class="subheading">Box Office</h3>
  
      <div class="txt-block">
      <h4 class="inline">Budget:</h4>        $160,000,000        

      <span class="attribute">(estimated)</span>
      </div>
  
    <div class="txt-block">
    <h4 class="inline">Opening Weekend:</h4>         &pound;5,912,814        

      (UK)
      <span class="attribute">(16 July 2010)</span>
    </div>
  
    <div class="txt-block">
    <h4 class="inline">Gross:</h4>        $292,568,851        

      <span class="attribute">(USA)</span>
      <span class="attribute">(31 December 2010)</span>
    </div>
  
  <span class="see-more inline">
    <a href="business?ref_=tt_dt_bus"
itemprop='url'>See more</a>&nbsp;&raquo;
  </span>  
  <hr /> 
  <h3 class="subheading">Company Credits</h3>
    <div class="txt-block">
    <h4 class="inline">Production Co:</h4>
        <span itemprop="creator" itemscope itemtype="http://schema.org/Organization">
<a href="/company/co0026840?ref_=tt_dt_co"
itemprop='url'><span class="itemprop" itemprop="name">Warner Bros.</span></a></span>,        <span itemprop="creator" itemscope itemtype="http://schema.org/Organization">
<a href="/company/co0159111?ref_=tt_dt_co"
itemprop='url'><span class="itemprop" itemprop="name">Legendary Entertainment</span></a></span>,        <span itemprop="creator" itemscope itemtype="http://schema.org/Organization">
<a href="/company/co0147954?ref_=tt_dt_co"
itemprop='url'><span class="itemprop" itemprop="name">Syncopy</span></a></span>      <span class="see-more inline">
        <a href="companycredits?ref_=tt_dt_co"
itemprop='url'>See more</a>&nbsp;&raquo;
      </span>
    </div>
  <div class="txt-block"> 
  Show detailed
<a href="http://pro.imdb.com/title/tt1375666/companycredits?rf=cons_tt_cocred_tt&ref_=cons_tt_cocred_tt"
itemprop='url'>company contact information</a>
  on 
  <a href="http://pro.imdb.com/signup/index.html?rf=cons_tt_cocred_spl&ref_=cons_tt_cocred_spl"
itemprop='url'>IMDbPro</a>&nbsp;&raquo;
  </div>
  

  <hr />
  <h3 class="subheading">Technical Specs</h3>
  
    <div class="txt-block">
      <h4 class="inline">Runtime:</h4> 
        <time itemprop="duration" datetime="PT148M">148 min</time>
    </div>
  
    <div class="txt-block">
    <h4 class="inline">Sound Mix:</h4>
        <a href="/search/title?sound_mixes=dolby_digital&ref_=tt_dt_spec"
itemprop='url'>Dolby Digital</a>
<span class="ghost">|</span>        <a href="/search/title?sound_mixes=dts&ref_=tt_dt_spec"
itemprop='url'>DTS</a>
<span class="ghost">|</span>        <a href="/search/title?sound_mixes=sdds&ref_=tt_dt_spec"
itemprop='url'>SDDS</a>
    </div>
  
    <div class="txt-block">
    <h4 class="inline">Color:</h4>
        <a href="/search/title?colors=color&ref_=tt_dt_spec"
itemprop='url'>Color</a>
    </div>
  
    <div class="txt-block">
    <h4 class="inline">Aspect Ratio:</h4> 2.35 : 1
    </div>
  
  See <a href="technical?ref_=tt_dt_spec"
itemprop='url'>full technical specs</a>&nbsp;&raquo;
    </div>

  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleDetailsWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleDetailsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleDetailsWidget", {wb: 1});
    }
</script>


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleDidYouKnowWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleDidYouKnowWidget_started');
    }
  </script>
    <div id="titleDidYouKnow" class="article">
    <span class=rightcornerlink >
            <a href="/register/login?why=edit&ref_=tt_trv_trv"
rel="login">Edit</a>
    </span>
        <h2>Did You Know?</h2>
    <div id="trivia" class="txt-block">
        <h4>Trivia</h4>
Working title: Oliver's Arrow, after both <a href="/name/nm0634240?ref_=tt_trv_trv">Christopher Nolan</a>'s second son Oliver and the character "Oliver Queen, Green Arrow" from a comic book published by DC, who also produces Batman, of whom Nolan made 3 movies.        <a href="trivia?ref_=tt_trv_trv"
class="nobr" >See more</a>  &raquo;
    </div>
                <hr />
     <div id="goofs"  class="txt-block">
        <h4>Goofs</h4>
When Arthur is tying up the team in the hotel scene, Eames' arms are tightly bound to his sides. When Arthur is pushing them down the corridors, Eames' arms float freely. Then, in the shot looking down into the elevator, his arms are once again bound tightly.        <a href="trivia?tab=gf&ref_=tt_trv_gf"
class="nobr" >See more</a>  &raquo;
    </div>   
                <hr />
    <div id="quotes" class="text-block">
        <h4>Quotes</h4>
[<span class="fine">first lines</span>]
<br /><a href="/name/nm0645785/?ref_=tt_trv_qu"
><span class="character">Saito's Attendant</span></a>:
He was delirious but asked for you by name. Show him...
<br /><a href="/name/nm0556070/?ref_=tt_trv_qu"
><span class="character">Japanese Security Guard</span></a>:
He was carrying nothing but this...
<br />[<span class="fine">gun</span>]
<br /><a href="/name/nm0556070/?ref_=tt_trv_qu"
><span class="character">Japanese Security Guard</span></a>:
And this...
<br />[<span class="fine">spinning top</span>]
<br /><a href="/name/nm0913822/?ref_=tt_trv_qu"
><span class="character">Saito</span></a>:
Are you here to kill me?
<br />        <a href="trivia?tab=qt&ref_=tt_trv_qu"
class="nobr" >See more</a> &raquo;
    </div>
                <hr />
     <div id="crazyCredits"  class="txt-block">
        <h4>Crazy Credits</h4>
At the end of the credits <a href="/name/nm0681191?ref_=tt_trv_cc">Édith Piaf</a>'s "Non, Je Ne Regrette Rien" plays at normal speed, then slows down to the speed it was at the beginning of the film during Hans Zimmer's score and throughout the movie. Then we see the title stop in the center of the screen as the song ends.        <a href="trivia?tab=cz&ref_=tt_trv_cc"
class="nobr" >See more</a>  &raquo;
    </div>   
                <hr />
    <div id="connections" class="text-block">
        <h4>Connections</h4>
        Featured in <a href="/title/tt4023500?ref_=tt_trv_cnn">Renegade Cut: Inception: Part 4</a>&nbsp;(2014)


        <a href="trivia?tab=mc&ref_=tt_trv_cnn"
class="nobr" >See more</a> &raquo;
    </div>
                <hr />
    <div id="soundtracks" class="text-block">
        <h4>Soundtracks</h4>
Non, Je Ne Regrette Rien<br />
Written by <a href="/name/nm0241627?ref_=tt_trv_snd">Charles Dumont</a> and <a href="/name/nm1343743?ref_=tt_trv_snd">Michel Vaucaire</a><br />
Performed by <a href="/name/nm0681191?ref_=tt_trv_snd">Édith Piaf</a><br />
Courtesy of EMI Music France<br />
Under license from EMI Film & Television Music<br />        <a href="soundtrack?ref_=tt_trv_snd"
class="nobr" >See more</a> &raquo;
    </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleDidYouKnowWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleDidYouKnowWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleDidYouKnowWidget", {wb: 1});
    }
</script>


    
    
    


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleFAQWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleFAQWidget_started');
    }
  </script>
    
    <div class="article" id="titleFAQ">
        <h2>Frequently Asked Questions</h2>
        
            <div class="faq" >
                    <div class="odd">
                    <b>Q:</b>
<a href="/title/tt1375666/faq?ref_=tt_faq_1#.2.1.31"
> What's the original plan of the Inception mission?</a>
                    </div>
                    <div class="even">
                    <b>Q:</b>
<a href="/title/tt1375666/faq?ref_=tt_faq_2#.2.1.56"
> How is the dream machine brought to deeper dream levels?</a>
                    </div>
                    <div class="odd">
                    <b>Q:</b>
<a href="/title/tt1375666/faq?ref_=tt_faq_3#.2.1.42"
> What is the evidence that show the whole film is a dream?</a>
                    </div>
            </div>
        
            <span class="see-more inline" >        
                <a href="/title/tt1375666/faq?ref_=tt_faq_sm"
class="nobr" >See more</a>
                <span class="spoilers">(Spoiler Alert!)</span></span>&nbsp;&raquo;
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleFAQWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleFAQWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleFAQWidget", {wb: 1});
    }
</script>


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleUserReviewsWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleUserReviewsWidget_started');
    }
  </script>
    <div class="article" id="titleUserReviewsTeaser">
        <h2>User Reviews</h2>
        <div class="user-comments">
                    <div class="tinystarbar" title="10/10">
                        <div style="width: 100px;">&nbsp;</div>
                    </div>
                <span itemprop="review" itemscope itemtype="http://schema.org/Review">  
                    <strong itemprop="name">Nolan&#x27;s first true masterpiece</strong>
                    <span itemprop="reviewRating" itemscope itemtype="http://schema.org/Rating">
                        <meta itemprop="worstRating" content = "1" />
                        <meta itemprop="ratingValue" content="10" />
                        <meta itemprop="bestRating" content="10" />
                    </span>
                    <div class="comment-meta">
                        12 July 2010 | by <a href="/user/ur3312099/?ref_=tt_urv"
><span itemprop="author">technofunkie</span></a>
                        <meta itemprop="datePublished" content="2010-07-12" />
                              (Canada)
                        &ndash; <a href="/user/ur3312099/comments?ref_=tt_urv"
>See all my reviews</a>
                    </div>
                    <div>
                        <p itemprop="reviewBody">Usually I try to be careful with over hyping a film, or setting the expectations too high, as film geeks all are guilty for, however for Christopher Nolan&#x27;s Inception, this really is not possible.<br /><br />This is possibly one of the only perfect films I have ever seen. It is absolutely confident in every way, something which is extremely refreshing, even more so than Avatar. Christopher Nolan gets some slack for making great to look at but ultimately heartless affairs, which I for one do not agree with, however I do not think anyone can argue that here. The emotional aspect of this film not only ties it all together but is really the centre of this film, it is the focus. <br /><br />I do not want to over simplify the film, by simply calling it Kubrick doing Bond, or Gondry on a huge budget, because I am sure it will be called that but it is far more than that, it is something I do not think Kubrick could have ever made. It is pure Nolan, and pure greatness.<br /><br />I hate writing something which is pure fan-boy gushing, but its really difficult here. I did not find a thing I did not like about it, I am sure if maybe I saw it a second time, maybe I would find something about it I didn&#x27;t like, but not the first time. The way it is cut, means that there is always action on screen, if not, then the visuals are interesting enough to keep your eyes glued.<br /><br />The final hour of the film, is possibly one of the most complicated action sequences put on film. You have to constantly be paying attention to remember all of the layers of what is happening. Without spoiling anything, all I have to say is that is what this film is about, that is what makes this film so great, layers. Once you have seen this you will now what I am talking about.<br /><br />All of the actors are fantastic too, Di Caprio is the stand out here. Yes, this is probably due to the fact he is the star and given all of the emotional weight, but he handles it perfectly, similarly to his performance in Shutter Island. Ellen Page, whom I usually hate, gives a great performance here. Tom Hardy gives a break out performance here, he is quite the bad ass.<br /><br />I hope audiences are ready for a film like this, a pure auteur driven film which does not sacrifice a single frame for the studio. I would hope this film will change Hollywood, as it is 100 percent the directors vision yet it is definitely a marketable film, much like District 9, yet I do not think it will. <br /><br />I cannot recommend this film anymore than I have, I just have to say everyone and anyone should see it. Sorry about all the gushing, it is just so hard not too.<br /><br />If you liked this review check out my new film blog: http://thedeletedscene.wordpress.com</p>
                    </div>
                </span>
                <hr />
                <div class="yn" id="ynd_2277985">
                    1,406 of 2,311 people found this review helpful.&nbsp;
                    Was this review helpful to you?
                    <button class="btn small" value="Yes" name="ynb_2277985_yes" onclick="CS.TMD.user_review_vote(2277985, 'tt1375666', 'yes');" >Yes</button>
                    <button class="btn small" value="No" name="ynb_2277985_no" onclick="CS.TMD.user_review_vote(2277985, 'tt1375666', 'no');" >No</button>
                </div>
            <div class="see-more">
                
                <a href="/title/tt1375666/reviews-enter?ref_=tt_urv"
rel="login">Review this title</a>
                <span>|</span>
                    <a href="/title/tt1375666/reviews?ref_=tt_urv"
>See all 2,835 user reviews</a>&nbsp;&raquo;
            </div>
        </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleUserReviewsWidget_finished');
    }
  </script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleUserReviewsWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleUserReviewsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleUserReviewsWidget", {wb: 1});
    }
</script>


    
    
    

<script>
    if (typeof uet == 'function') {
      uet("bb", "TitleMessageBoardsWidget", {wb: 1});
    }
</script>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMessageBoardsWidget_started');
    }
  </script>
    <div class="article" id="boardsTeaser">
        <h2>Message Boards</h2>
            Recent Posts
            <table class="boards">
                    <tr class="odd">
                        <td>
                            <a href="/title/tt1375666/board/nest/262821824?ref_=tt_bd_1"
>Was Mal Right?</a>
                        </td>
                        <td>
                            <a href="/user/ur52627770/?ref_=tt_bd_1"
>noonoolala</a>
                        </td>
                    </tr>
                    <tr class="even">
                        <td>
                            <a href="/title/tt1375666/board/nest/261285059?ref_=tt_bd_2"
>Why doesnt he simply...</a>
                        </td>
                        <td>
                            <a href="/user/ur57486949/?ref_=tt_bd_2"
>rootmebabe</a>
                        </td>
                    </tr>
                    <tr class="odd">
                        <td>
                            <a href="/title/tt1375666/board/nest/262779815?ref_=tt_bd_3"
>Cobb and his children</a>
                        </td>
                        <td>
                            <a href="/user/ur25228152/?ref_=tt_bd_3"
>danaenicole</a>
                        </td>
                    </tr>
                    <tr class="even">
                        <td>
                            <a href="/title/tt1375666/board/nest/258898004?ref_=tt_bd_4"
>The threat of limbo</a>
                        </td>
                        <td>
                            <a href="/user/ur62890893/?ref_=tt_bd_4"
>micholeon-18825</a>
                        </td>
                    </tr>
                    <tr class="odd">
                        <td>
                            <a href="/title/tt1375666/board/nest/259906777?ref_=tt_bd_5"
>Was the whole movie Cobb's dream?</a>
                        </td>
                        <td>
                            <a href="/user/ur4310786/?ref_=tt_bd_5"
>shell_31</a>
                        </td>
                    </tr>
                    <tr class="even">
                        <td>
                            <a href="/title/tt1375666/board/nest/252486538?ref_=tt_bd_6"
>I couldn't past the illogic of the plot.</a>
                        </td>
                        <td>
                            <a href="/user/ur61435694/?ref_=tt_bd_6"
>anonymous1235</a>
                        </td>
                    </tr>
            </table>
        <div class="see-more">
            <a href="/title/tt1375666/board/?ref_=tt_bd_sm"
>Discuss Inception (2010)</a> on the IMDb message boards &raquo;
        </div>
    </div>
  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleMessageBoardsWidget_finished');
    }
  </script>
<script>
    if (typeof uet == 'function') {
      uet("be", "TitleMessageBoardsWidget", {wb: 1});
    }
</script>
<script>
    if (typeof uex == 'function') {
      uex("ld", "TitleMessageBoardsWidget", {wb: 1});
    }
</script>


    
    
    

  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleContributeWidget_started');
    }
  </script>
    <div class="article contribute">
        <div class="rightcornerlink">
<a href="/help/?adding/&ref_=tt_cn_hlp"
>Getting Started</a>
            <span>|</span>
<a href="/czone/?ref_=tt_cn_cz"
>Contributor Zone</a>&nbsp;&raquo;</div>
        <h2>Contribute to This Page</h2>

                <div class="button-box">
                    <form method="get" action="https://contribute.imdb.com/updates">
                        <input type="hidden" name="ref_" value="tt_cn_edt" />
                        <input type="hidden" name="edit" value="legacy/title/tt1375666/" />
                            <button class="btn primary large" rel="login" type="submit">Edit page</button>
                    </form>
                </div>
        

    

        <div class="button-box">
<a href="/title/tt1375666/reviews-enter?ref_=tt_cn_urv"
class="btn large" rel="login">Write review</a>          
        </div>
    
    
    </div>

  <script>
    if ('csm' in window) {
      csm.measure('csm_TitleContributeWidget_finished');
    }
  </script>


    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    
    
    

    </div>
    <br class="clear"/>
</div> 


    
    
    

    
    
    

                   <br class="clear" />
                </div>






    <div id="footer" class="ft">

            <div id="rvi-div">
                <div class="recently-viewed">&nbsp;</div>
                <br class="clear">
            </div>

	
	<!-- begin BOTTOM_AD -->
<div id="bottom_ad_wrapper" class="cornerstone_slot">
<script type="text/javascript">
doWithAds(function(){
ad_utils.register_ad('bottom_ad');
});
</script>
<iframe id="bottom_ad" name="bottom_ad" class="yesScript" width="728" height="90" data-original-width="728" data-original-height="90" data-blank-serverside marginwidth="0" marginheight="0" frameborder="0" scrolling="no" allowtransparency="true" onload="doWithAds.call(this, function(){ ad_utils.on_ad_load(this); });" allowfullscreen="true"></iframe>
</div>
<div id="bottom_ad_reflow_helper"></div>
<script>
doWithAds(function(){
ad_utils.inject_serverside_ad('bottom_ad', '');
},"unable to inject serverside ad");
</script>
	

        <div class="container footer-grid-wrapper">
            <div class="row footer-row">
                <div class="col outside">
    <h3>IMDb Everywhere</h3>
    <div class="app-links">
    <a href="/offsite/?page-action=ft_app_apple&token=BCYj3yevURSgI6X-GN7i6T_sI1wl2tuZKgnOYJGs3Gqld_Xof3Ft7KLz7v56X4U2oqNFrXs4p_Px%0D%0A381zIiCybrE6Q1sXjX4Te-shin6NqjzVbreQMsr1mGS9NvvIYiS29GmJRUKfQUNxeULgYjG-lqrD%0D%0Ac90Pa6U9l5pXJtwagCsR-YnBY-kyboDBCuSTs8sSvkF3_w1iNXVcaEOx-pNmK3_6EwBBiRMdMpCi%0D%0Anur-KcaLvOo%0D%0A&ref_=ft_app_apple"
title="Get the IMDb App on the Apple App Store" target="_blank" itemprop='url'> <span class="desktop-sprite appstore-apple" ></span>
</a>
    <a href="/offsite/?page-action=ft_app_google&token=BCYnwHUIAjgYqvjHMJW8Th2P1cPeiIGkMFcwLdriOnZAHxPwfb7jDexq07LuTh7idbW8e1OvOE7T%0D%0AcqwFrQZ04UTdO68vSCrXe6fxdpLrsjE8EprwIHYO_onCSd10tfy7ELQhx5yqxMx0dzN_528UFjIM%0D%0AWSVUNc_TRlJM4TNfBPwW15a6W2tKDiLKM8rD5A8NpVmHtAVqSEln7LLRUqrMWBXXM_y3QazMcboB%0D%0AAIn40xRVb-o%0D%0A&ref_=ft_app_google"
title="Get the IMDb app on Google Play" target="_blank" itemprop='url'> <span class="desktop-sprite appstore-google" ></span>
</a>
    <a href="/offsite/?page-action=ft_app_amazon&token=BCYm0hU3YDHpxZLxDblrbQ76v3RglI4wcEpHHQ31RgLb6-hgL9zSji3sj9Fs5d9nJeHk6H3BrECb%0D%0AZan-yXplWg21YDeF4upMMUKx_IPIkUm8sZLuTWabUGZJFtfr6rvmqzB1RvMcQ8bBMrlR4W1gM0Bq%0D%0AlnsaG2e_-8mN2pD8cDCO6OEOeuvteoW0vF290xqZk2oDe1QbGYFTj3s3m6PaDG-7s-nwHflmkL5_%0D%0AS0xvGSvhQ9fDGTdCi---Yuv2nXMEadbx30MyB3UZJwnlJpLshJxlJO3GDjjSKN9gXqfj-bkdp0ZV%0D%0AzNrrflzm3r2oPi30r1C1Oh6rSA9S6v0MEsU20yTVd-p9JnEGj2B7VxIlpoGmOwIQoz0lpFhYNeRM%0D%0ANSTCIkZ59n9i-HKavpLqXalwOw2Fv5G6yGdkKk72QoDtABRkfV0%0D%0A&ref_=ft_app_amazon"
title="Get the IMDb app on Amazon Appstore for Android" target="_blank" itemprop='url'> <span class="desktop-sprite appstore-amazon" ></span>
</a>
    </div>

    <p>Find showtimes, watch trailers, browse photos, track your Watchlist and rate your favorite movies and TV shows on your phone or tablet!</p>

    <a href="http://m.imdb.com?ref_=ft_mdot"
class="touchlink" >IMDb Mobile site</a>
                </div>
                <div class="col center">
  <div class="link-bar icon-link-bar">
    <h3>
      Follow IMDb on
      <div>

    <a href="/offsite/?page-action=fol_fb&token=BCYrmMe9iZfhNWTO06HQyeuW8FjnnoYNqEv3bVmKrSXlHRpr68xPK0cpYzyWHqieZJoLLUHeI1YH%0D%0ALrDs9G_7tVnbK0l0ZpB0-BA47pYXZM1knojBEYav12DteygZcf6Q92tfLOiWAOPOsqVfJywv24za%0D%0ACJbBdVuYaQCj7sKMVxlr5hvbgOnE7m7Yhlr3xby0vsorLn-ZvnRsYJcnYFz05unH2g%0D%0A&ref_=tt_ft_fol_fb"
title="Follow IMDb on Facebook" target="_blank" itemprop='url'> <span class="desktop-sprite follow-facebook" ></span>
</a>
    <a href="/offsite/?page-action=fol_tw&token=BCYrqtPUlEILgZgox5j31z1CvhqAFrj8n_tqh9Tq9ICLndpZsNloTnWJq9v4OU3XG35xeqaiberp%0D%0AjBm_rc-mSnG5KDvocvFoomtNZL_k6Pxw_kSqvb87VuWAjKUxJtVc5Rfai65mOfi_p-h6BpQTSTO7%0D%0AT37l2GsoPvGDgsa4bJ-JnvZB5XZ4FxzXCwa6xi9xfBGyYSicZxec4d0HYM3CY8ij9A%0D%0A&ref_=tt_ft_fol_tw"
title="Follow IMDb on Twitter" target="_blank" itemprop='url'> <span class="desktop-sprite follow-twitter" ></span>
</a>
    <a href="/offsite/?page-action=fol_inst&token=BCYmyACVXHetydFydTnLBuBa8HfjsqwGZAYfhZxuPpNwMnYGjm9fMa6MUEbca28CQYoL_8Wtd0DS%0D%0AviltdNyCrsJtGDYqjB9EtvtvwIHSHbGPJQvKKjjjAxb2xZ-8cU0erNPTMMNv1pHKQgcw9QJO-6vs%0D%0Au2WY0XsK3qRFNDereP39DGFLAK08IdPzG16cIwKBh-f33217qgwJrzuSEt1H68u_Jw%0D%0A&ref_=tt_ft_fol_inst"
title="Follow IMDb on Instagram" target="_blank" itemprop='url'> <span class="desktop-sprite follow-instagram" ></span>
</a>
      </div>
    </h3>
  </div>
                </div>
                <div class="col outside">
    <div class="row">
        <div class="col col-4">
            <ul class="unstyled">
                <li><a href="/?ref_=ft_hm"
>Home</a></li>
                <li><a href="/chart/top?ref_=ft_250"
>Top Rated Movies</a></li>
                <li><a href="/chart/?ref_=ft_cht"
>Box Office</a></li>
                <li><a href="/sections/tv/?ref_=ft_tv"
>TV</a></li>
                <li><a href="/movies-coming-soon/?ref_=ft_cs"
>Coming Soon</a></li>
                <li><a href="/a2z?ref_=ft_si"
>Site Index</a></li>
                <li><a href="/search?ref_=ft_sr"
>Search</a></li>
                <li><a href="/movies-in-theaters/?ref_=ft_inth"
>In Theaters</a></li>
            </ul>
        </div>
        <div class="col col-4">
            <ul class="unstyled">
                <li><a href="/helpdesk/contact?ref_=ft_con"
>Contact Us</a></li>
                <li><a href="/boards/?ref_=ft_mb"
>Message Boards</a></li>
                <li>        <a href="https://secure.imdb.com/register-imdb/form-v2?ref_=ft_reg"
>Register</a>
</li>
                <li><a href="/news/?ref_=ft_nw"
>News</a></li>
                <li class="spacer"></li>
                <li><a href="/pressroom/?ref_=ft_pr"
>Press Room</a></li>
                <li><a href="/advertising/?ref_=ft_ad"
>Advertising</a></li>
                <li><a href="/jobs?ref_=ft_jb"
>Jobs</a></li>
            </ul>
        </div>
        <div class="col col-4">
            <ul class="unstyled">
                <li><a href="http://pro.imdb.com/signup/index.html?rf=cons_ft_hm&ref_=cons_ft_hm"
>IMDbPro</a></li>
                <li>    <a href="/offsite/?page-action=ft-mojo&token=BCYo5zTCjZR20mqxptaq3v5IUTptAweJ_FMGB-odYvBxELr8wD5VmFooEynPy5ie1Mdi0lFTQZwo%0D%0ATEdHGnyShniO-IenuLvmr0fmCD0tXtO4kLehzR0cdiqy3FN0M4yC6D5OTgh-bsFXpL4ERcbHvVC3%0D%0AdozxWmPkxsS6JpAGBDcBsZP_gKqw90CbiJq5gy9ZVAzu70NI7SU_OGy4WhqHo6SxbQ%0D%0A&ref_=ft_bom"
itemprop='url'>Box Office Mojo</a>
</li>
                <li>    <a href="/offsite/?page-action=ft-wab&token=BCYkit6kgOXKKfK0BqUSiOOjjfQ0HsMpfx51TFiqMrvxwpirmbmXj8uhcZmkIO5BGi3adGWSSy8S%0D%0APoWGRBrr9SHmNrZadhgPS_9LtRfDxp9DfqquTImxadi3ebt_M5GoJJvmJkqnIBTpolUbtOeXS9hO%0D%0AOG_cy5wmunOUrN0aieInoSo7sKfYFzH8ZwVTTYoQdyxf5jDsgrQ_SzgNU94ILPIARw%0D%0A&ref_=ft_wab"
itemprop='url'>Withoutabox</a>
</li>
                <li class="spacer"></li>
                <li><a href="/help/show_article?conditions&ref_=ft_cou"
>Conditions of Use</a></li>
                <li><a href="/privacy?ref_=ft_pvc"
>Privacy Policy</a></li>
                <li>    <a href="/offsite/?page-action=ft-iba&token=BCYgxm6YjdPjUO5xb4wkYqWtLBOprQNXJ5GYZiNjTPAo2t9dBTT1Lyy_MCA0uFSNXCIL2MT5Mr3e%0D%0A-LB5qJZSqylGdGeAtNGkjK6PsQjEeC7-2kgF89-QSOoJx7wismoQqbyIHXxPoJ3qLAYOfhN0eDJV%0D%0Av893ea7cCMYw43qODCULMQU3nJLq2DqG5cqzCsxvKWg101KzwlqbY-KFgj_ksmswIy8jANKyZesx%0D%0ASOXOjhIC5JmqKNNZrw18qCdQajN80m7I%0D%0A&ref_=ft_iba"
itemprop='url'>Interest-Based Ads</a>
</li>
                <li class="spacer"></li>
            </ul>
        </div>
    </div>
                </div>
            </div>
        </div>

        <div class="container">
            <div class="ft-copy float-right">
                <a
href="/help/show_article?conditions"
>Copyright &copy;</a> 1990-2016
                <a
href="/help/"
>IMDb.com, Inc.</a>
            </div>
            <div>
                An <span id="amazon_logo" class="footer_logo" align="middle">Amazon.com</span> company.
            </div>
        </div>



    <table class="footer" id="amazon-affiliates">
        <tr>
            <td colspan="8">
                Amazon Affiliates
            </td>
        </tr>
        <tr>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-aiv&token=BCYtjw2yj1Z1LdwjDvFfxYJDy4D8xW9jsp6sndfm7Ix7aRL83xOi17-I5raR8wU02a2lYofNgWmq%0D%0AYtNVorMyWEkcsYzu8Ryk_RQFzURUuL4kgsUR-C2NxJdaITfjUn2lrbq67MxvaZgxyrvq_eXR3Dqc%0D%0AidwCqJyzA_uU7-537nuGGEvW33MIt0pxg3Hi293r-Nb9UaTppzt-Tro46sfrGI5k2tWJysqCqh9i%0D%0AOG5YqkyLM-U%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon Video</span><br>
                <span class="amazon-affiliate-site-desc">Watch Movies &<br>TV Online</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-piv&token=BCYuU-1rTdynSvrE-0NHycUi4_hk6EA8CNEMK_5KFoSkPcbEwGdB92klP9PxavAfniwAvU3C7KEq%0D%0AW5UUPxAiEpYY2dzTM3DOMZk_ogDA-gdlfg2ZSW43cL4MPHXxLIdTzm3wh6vAPVUdAkYPloY9hbBs%0D%0AKKmJTzdW1b1C5kjevx5zKwh5MkLxRW_5l2IPsSP9d9JEf03psW4llNGCVjLJzeaFwjYWSDER4Is1%0D%0Av6AHeXpHiV4%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Prime Video</span><br>
                <span class="amazon-affiliate-site-desc">Unlimited Streaming<br>of Movies & TV</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-de&token=BCYl8E5h2azsWAsGRbY22q9Q_LH25M7jgYcuOY95MstFpOQfWaxXFSaKnJ2jxWTJ1FOvdQ4iOkxl%0D%0AOAO1HApK5rCMfpQ_SS78Stnw81rkZDYdqFiZMkeh0ff06NqFEuj7owZ6TU3d21pdo_9HhfyxRYQ2%0D%0AfuSjQmZke1yfEJYiqmUlnsS7f7S7oNCfY3to7UNcEIJA5onYAtDvSKdsNI8ArmsWc71amODjHlJU%0D%0A26QXua_j5j0%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon Germany</span><br>
                <span class="amazon-affiliate-site-desc">Buy Movies on<br>DVD & Blu-ray</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-it&token=BCYuaYZvzslb2mFHUVYLYrmQIL9avzwnFIdjK1Z1ICZDz8u5Z3ApKXOxp-IhHA09-4aa9jJ0RuCk%0D%0A1qi60ElXKsaV4nLdmQfJDOiBxTeWX7RU43g-QDHaSqgrGC4W9wo98qf-PuZP1J7qFgg6ykUJj-aY%0D%0ASQFhBAWugpHmvwEBm3HKAavVO92_YlCs8_MSUjD7K_1ek57Ae0Z2HNKXGwOywQ57Wk51h35nSzZw%0D%0ADk1URvKOA8U%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon Italy</span><br>
                <span class="amazon-affiliate-site-desc">Buy Movies on<br>DVD & Blu-ray</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-fr&token=BCYjIQeAIN_6XyZa0DbNR4sXGiG93U7F3aX4Sk12fRJ9oiUtP7ca_y5AbMJ2INSdQTqM2JMseTpY%0D%0A2QZONJPNmHuv9OEhYYWt-X4ryrq2WaDwFpEvrGR0m20ZW1sS1NYaf9Fosui8sC5WzgcplWcQIrfl%0D%0AXTSd-1sFzgF2c9EUU9jCDFJh8x1zB1-KBU8A3_QLoUiKRdydzgoXY7sK4yo2l5E_vwjqF2UPtRPZ%0D%0A5JPFVlQVKV8%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon France</span><br>
                <span class="amazon-affiliate-site-desc">Buy Movies on<br>DVD & Blu-ray</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-in&token=BCYhpmB7ODP22lxbh-1BjEzISwMH7SVtK1rVKAE9S5pM0mbrUYlWWN4bfMXnogjfs60vLVX5NpPV%0D%0Awum7uquSlfM2Ui_CnfAMHUuuhruLNy-ZD6UF0gADhoE1Zu-bAsX-iyo4w3MfhyoSEQzmGsl97tWD%0D%0AzQq4qVpKh8d4N4qLUBG1BaEfMjoDc-MK957r63RNoZr4X-5Darg_uExjg-O34Y6Wto0CFVV4edRR%0D%0ArIW90B-VlgLc1qLEe4QfiEoF_zsCRA8S%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Amazon India</span><br>
                <span class="amazon-affiliate-site-desc">Buy Movie and<br>TV Show DVDs</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-dpr&token=BCYgY5DRZYXkBygkimQooVdF5fCZxoeqD1Ip4DMrkpi_NAmaodDMF4QQo1eZ5r5__sVkj-hVQ2FB%0D%0Av1L3rFY6ULZffgit2OK86wIjA32TFiy6POeDUG8XsDISIFXql1CHqbmeFcKbH1GrKUDzEtQ4pKnS%0D%0ASpEdv1J27e0Nv-CKFQLst9s%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">DPReview</span><br>
                <span class="amazon-affiliate-site-desc">Digital<br>Photography</span>
            </a>
        </div>
    </td>

    <td>
        <div>
            <a href="/offsite/?page-action=ft-amzn-aud&token=BCYiNFuC9Dyirw4E7OaQrY3dFL4Kz_qprXJCDaB4c1bpLreLDi_FVADwXjFSGp7waYoTlRSgqzH7%0D%0AzBgCr94wKNIwp4-JaYkvKqBS1oPcr88-9G6ewMcJg9ULR_em1UVQ8vzuY3l4tP5ZEx6rNMrmIzhE%0D%0AUehilzZHT5To433WjwLiVJk%0D%0A" class="amazon-affiliate-site-link">
                <span class="amazon-affiliate-site-name">Audible</span><br>
                <span class="amazon-affiliate-site-desc">Download<br>Audio Books</span>
            </a>
        </div>
    </td>
        </tr>
    </table>
      </div>
            </div>
        </div>



<script type="text/javascript" src="http://ia.media-imdb.com/images/G/01/imdb/js/collections/common-485701321._CB522318300_.js"></script>
<script type="text/javascript" src="http://ia.media-imdb.com/images/G/01/imdb/js/collections/title-535807633._CB522318296_.js"></script>

<script type="text/javascript" id="login">
(function(){
    var readyTimeout = setInterval(function() {
        if (window.jQuery && window.imdb && window.imdb.login_lightbox) {
            clearTimeout(readyTimeout);
            window.imdb.login_lightbox();
        }
    }, 100);
})();
</script>

        <script type="text/javascript">
        function jQueryOnReady(remaining_count) {
            if (window.jQuery) {
                jQuery(
                             function() {
           var isAdvertisingThemed = !!(window.custom && window.custom.full_page && window.custom.full_page.theme),
               url = "http://www.facebook.com/widgets/like.php?width=280&show_faces=1&layout=standard&href=http%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1375666%2F&colorscheme=light",
               like = document.getElementById('iframe_like');

           if (!isAdvertisingThemed && like) {
              like.src = url;
              like.onload = function () { 
                  if (uex) { uex('ld', 'facebook_like_iframe', {wb: 1}); }
              };
           } else if (isAdvertisingThemed) {
              $('.social_networking_like').closest('.aux-content-widget-2').hide();
           }
        }

                );
                jQuery(
                             function() {
            var facebookTheme = (window.custom && window.custom.full_page &&
                    window.custom.full_page.theme) ?
                window.custom.full_page.theme : "light",
            url = "//www.facebook.com/plugins/likebox.php?href=facebook.com%2Fimdb&width=300&height=190&connections=4&header=false&stream=false&colorscheme=" + facebookTheme,
            like = document.getElementById('facebookIframe'),
            twitterIframe = document.getElementById('twitterIframe');
            if (like) {
                like.src = url;
            }
            if (twitterIframe) {
                twitterIframe.src = "http://i.media-imdb.com/images/social/twitter.html?10#imdb";
            }
         }

                );
            } else if (remaining_count > 0) {
                setTimeout(function() { jQueryOnReady(remaining_count-1) }, 100);
            }
        }
        jQueryOnReady(50);
        </script>

<!-- begin ads footer -->

<!-- Begin SIS code --> 
<iframe id="sis_pixel_sitewide" width="1" height="1" frameborder="0" marginwidth="0" marginheight="0" style="display: none;"></iframe>
<script>
    setTimeout(function(){
        try{
            //sis3.0 pixel
            var url_sis3 = 'https://s.amazon-adsystem.com/iu3?',
                params_sis3 = [
                    "d=imdb.com",
                    "a1=",
                    "a2=010168a81d104f962110e837110c671722b0461893f6f2ab5fbed650f55669e0a5aa",
                    "pId=tt1375666",
                    "r=1",
                    "rP=http%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1375666%2F",
                    "ex-hargs=v=1.0;c=IMDB;p=tt1375666;t=imdb_title_view;",
                    "encoding=server",
                    "cb=073968080611"  
                ];
        
            if (document.getElementById('sis_pixel_sitewide')) {
                (document.getElementById('sis_pixel_sitewide')).src = url_sis3 + params_sis3.join('&');
            }
        }
        catch(e){
            if ('consoleLog' in window){
                consoleLog('Pixel failure ' + e.toString(),'sis');
            }
            if (window.ueLogError) { 
                window.ueLogError(e);
            }
        }
    }, 20);
</script>
<!-- End SIS code -->

<!-- begin comscore beacon -->
<script type="text/javascript" src='https://ia.media-imdb.com/images/G/01/imdbads/js/beacon-1792157672._CB522318106_.js'></script>
<script type="text/javascript">
if(window.COMSCORE){
COMSCORE.beacon({
c1: 2,
c2:"6034961",
c3:"",
c4:"http://www.imdb.com/title/tt1375666/",
c5:"",
c6:"",
c15:""
});
}
</script>
<noscript>
<img src="https://sb.scorecardresearch.com/p?c1=2&c2=6034961&c3=&c4=http%3A%2F%2Fwww.imdb.com%2Ftitle%2Ftt1375666%2F&c5=c6=&15=&cj=1"/>
</noscript>
<!-- end comscore beacon -->

<script>
    doWithAds(function(){
        (new Image()).src = "http://www.amazon.com/aan/2009-05-01/imdb/default?slot=sitewide-iframe&u=073968080611&ord=073968080611";
    },"unable to request AAN pixel");
</script>

<!-- end ads footer -->

<div id="servertime" time="254"/>



<script>
    if (typeof uet == 'function') {
      uet("be");
    }
</script>

    </body>
</html>

","rawHeaders":["Date","Mon, 19 Dec 2016 01:53:20 GMT","Server","Server","X-Frame-Options","SAMEORIGIN","Content-Security-Policy","frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk search.aol.com bing.com www.bing.com","Content-Type","text/html;charset=UTF-8","Content-Language","en-US","Content-Encoding","gzip","Vary","Accept-Encoding,User-Agent","Set-Cookie","uu=BCYtC5vZdyQYZSZ3HuogpdfOTRWzb-EgxSsjttQM-AxlewOvmYhbgUzMOtLpjMFOv8iV_B2TJZkF%0D%0AJzLOvyJVSQtXmkLD6aCLUylnITbFoDnLCq7LEoddgXCRa3WZ3VriIsP9O7yc48yWAaS35nORfOIF%0D%0AcTQxDjGL467lIAdSKxHgpV78mrqvc8n7iOJt9em7pCRmmbDFAs9JackE_QVnSl19sJIgMJic6DV2%0D%0Azze5blGfGrpO-LBWnou2lpLUpAcPePBdaG3he--tY9y8hf8uyhCjq4EfYRQgsuavVWyDHyglc78%0D%0A; Domain=.imdb.com; Expires=Sat, 06-Jan-2085 05:07:28 GMT; Path=/","Set-Cookie","session-id=244-9544173-1430077; Domain=.imdb.com; Expires=Sat, 06-Jan-2085 05:07:28 GMT; Path=/","Set-Cookie","session-id-time=1639792400; Domain=.imdb.com; Expires=Sat, 06-Jan-2085 05:07:28 GMT; Path=/","P3P","policyref=\"http://i.imdb.com/images/p3p.xml\",CP=\"CAO DSP LAW CUR ADM IVAo IVDo CONo OTPo OUR DELi PUBi OTRi BUS PHY ONL UNI PUR FIN COM NAV INT DEM CNT STA HEA PRE LOC GOV OTC \"","Transfer-Encoding","chunked"],"url":"http://www.imdb.com/title/tt1375666/","status":200,"statusText":"OK","varyHeaders":[["Accept-Encoding",null],["User-Agent",null]]},"ttl":null,"stored":1482112401595}