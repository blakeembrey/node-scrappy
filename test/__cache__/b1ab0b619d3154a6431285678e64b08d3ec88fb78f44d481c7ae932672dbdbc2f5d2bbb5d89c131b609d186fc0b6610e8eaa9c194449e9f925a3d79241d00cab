{"item":{"body":"CgoKCgoKCgoKPCFET0NUWVBFIGh0bWw+CjxodG1sCnhtbG5zOm9nPSJodHRwOi8vb2dwLm1lL25zIyIKeG1sbnM6ZmI9Imh0dHA6Ly93d3cuZmFjZWJvb2suY29tLzIwMDgvZmJtbCI+CiAgICA8aGVhZD4KICAgICAgICA8bWV0YSBjaGFyc2V0PSJ1dGYtOCI+CiAgICAgICAgPG1ldGEgaHR0cC1lcXVpdj0iWC1VQS1Db21wYXRpYmxlIiBjb250ZW50PSJJRT1lZGdlIj4KCiAgICA8bWV0YSBuYW1lPSJhcHBsZS1pdHVuZXMtYXBwIiBjb250ZW50PSJhcHAtaWQ9MzQyNzkyNTI1LCBhcHAtYXJndW1lbnQ9aW1kYjovLy90aXRsZS90dDEzNzU2NjY/c3JjPW1kb3QiPgogICAgICAgIAogICAgCiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij52YXIgdWVfdDA9d2luZG93LnVlX3QwfHwrbmV3IERhdGUoKTs8L3NjcmlwdD4KICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgdmFyIHVlX21pZCA9ICJBMUVWQU0wMkVMOFNGQiI7IAogICAgICAgICAgICAgICAgdmFyIHVlX3NuID0gInd3dy5pbWRiLmNvbSI7ICAKICAgICAgICAgICAgICAgIHZhciB1ZV9mdXJsID0gImZscy1uYS5hbWF6b24uY29tIjsKICAgICAgICAgICAgICAgIHZhciB1ZV9zaWQgPSAiNjk4LTgzNzAyNjYtMzUxMDc2NiI7CiAgICAgICAgICAgICAgICB2YXIgdWVfaWQgPSAiMFEzNUhWSDEwTVlEMk1YVkhKU0giOwogICAgICAgICAgICAgICAgKGZ1bmN0aW9uKGUpe3ZhciBjPWU7dmFyIGE9Yy51ZXx8e307YS5tYWluX3Njb3BlPSJtYWluc2NvcGVjc20iO2EucT1bXTthLnQwPWMudWVfdDB8fCtuZXcgRGF0ZSgpO2EuZD1nO2Z1bmN0aW9uIGcoaCl7cmV0dXJuICtuZXcgRGF0ZSgpLShoPzA6YS50MCl9ZnVuY3Rpb24gZChoKXtyZXR1cm4gZnVuY3Rpb24oKXthLnEucHVzaCh7bjpoLGE6YXJndW1lbnRzLHQ6YS5kKCl9KX19ZnVuY3Rpb24gYihtLGwsaCxqLGkpe3ZhciBrPXttOm0sZjpsLGw6aCxjOiIiK2osZXJyOmksZnJvbU9uRXJyb3I6MSxhcmdzOmFyZ3VtZW50c307Yy51ZUxvZ0Vycm9yKGspO3JldHVybiBmYWxzZX1iLnNraXBUcmFjZT0xO2Uub25lcnJvcj1iO2Z1bmN0aW9uIGYoKXtjLnVleCgibGQiKX1pZihlLmFkZEV2ZW50TGlzdGVuZXIpe2UuYWRkRXZlbnRMaXN0ZW5lcigibG9hZCIsZixmYWxzZSl9ZWxzZXtpZihlLmF0dGFjaEV2ZW50KXtlLmF0dGFjaEV2ZW50KCJvbmxvYWQiLGYpfX1hLnRhZz1kKCJ0YWciKTthLmxvZz1kKCJsb2ciKTthLnJlc2V0PWQoInJzdCIpO2MudWVfY3NtPWM7Yy51ZT1hO2MudWVMb2dFcnJvcj1kKCJlcnIiKTtjLnVlcz1kKCJ1ZXMiKTtjLnVldD1kKCJ1ZXQiKTtjLnVleD1kKCJ1ZXgiKTtjLnVldCgidWUiKX0pKHdpbmRvdyk7KGZ1bmN0aW9uKGUsZCl7dmFyIGE9ZS51ZXx8e307ZnVuY3Rpb24gYyhnKXtpZighZyl7cmV0dXJufXZhciBmPWQuaGVhZHx8ZC5nZXRFbGVtZW50c0J5VGFnTmFtZSgiaGVhZCIpWzBdfHxkLmRvY3VtZW50RWxlbWVudCxoPWQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7aC5hc3luYz0iYXN5bmMiO2guc3JjPWc7Zi5pbnNlcnRCZWZvcmUoaCxmLmZpcnN0Q2hpbGQpfWZ1bmN0aW9uIGIoKXt2YXIgaz1lLnVlX2Nkbnx8InotZWN4LmltYWdlcy1hbWF6b24uY29tIixnPWUudWVfY2Ruc3x8ImltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20iLGo9Ii9pbWFnZXMvRy8wMS9jc21pbnN0cnVtZW50YXRpb24vIixoPWUudWVfZmlsZXx8InVlLWZ1bGwtMTFlNTFmMjUzZThhZDlkMTQ1ZjRlZDY0NGI0MGY2OTIuX1YxXy5qcyIsZixpO2lmKGguaW5kZXhPZigiTlNUUlVNRU5UQVRJT05fRklMIik+PTApe3JldHVybn1pZigidWVfaHR0cHMiIGluIGUpe2Y9ZS51ZV9odHRwc31lbHNle2Y9ZS5sb2NhdGlvbiYmZS5sb2NhdGlvbi5wcm90b2NvbD09Imh0dHBzOiI/MTowfWk9Zj8iaHR0cHM6Ly8iOiJodHRwOi8vIjtpKz1mP2c6aztpKz1qO2krPWg7YyhpKX1pZighZS51ZV9pbmxpbmUpe2lmKGEubG9hZFVFRnVsbCl7YS5sb2FkVUVGdWxsKCl9ZWxzZXtiKCl9fWEudWVscz1jO2UudWU9YX0pKHdpbmRvdyxkb2N1bWVudCk7CiAgICAgICAgICAgICAgICBpZiAoISgnQ1MnIGluIHdpbmRvdykpIHsgd2luZG93LkNTID0ge307IH0KICAgICAgICAgICAgICAgICAgICB3aW5kb3cuQ1MubG9naW5Mb2NhdGlvbiA9ICJodHRwczovL3d3dy5pbWRiLmNvbS9yZWdpc3RyYXRpb24vc2lnbmluP3U9JTJGdGl0bGUlMkZ0dDEzNzU2NjYlMkYiOwogICAgICAgICAgICA8L3NjcmlwdD4KIAoKICAgICAgICAKICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+dmFyIElNRGJUaW1lcj17c3RhcnR0aW1lOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSxwdDonamF2YSd9Ozwvc2NyaXB0PgogICAgICAgIAogIDxzY3JpcHQ+KGZ1bmN0aW9uKHQpeyAodC5ldmVudHMgPSB0LmV2ZW50cyB8fCB7fSlbImNzbV9oZWFkX3ByZV90aXRsZSJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CiAgICAgICAgPHRpdGxlPkluY2VwdGlvbiAoMjAxMCkgLSBJTURiPC90aXRsZT4KICA8c2NyaXB0PihmdW5jdGlvbih0KXsgKHQuZXZlbnRzID0gdC5ldmVudHMgfHwge30pWyJjc21faGVhZF9wb3N0X3RpdGxlIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KICAgICAgICAKICAgICAgICAgICAgPGxpbmsgcmVsPSJjYW5vbmljYWwiIGhyZWY9Imh0dHA6Ly93d3cuaW1kYi5jb20vdGl0bGUvdHQxMzc1NjY2LyIgLz4KICAgICAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOnVybCIgY29udGVudD0iaHR0cDovL3d3dy5pbWRiLmNvbS90aXRsZS90dDEzNzU2NjYvIiAvPgogICAgICAgIAogIDxzY3JpcHQ+KGZ1bmN0aW9uKHQpeyAodC5ldmVudHMgPSB0LmV2ZW50cyB8fCB7fSlbImNzbV9oZWFkX3ByZV9pY29uIl0gPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsgfSkoSU1EYlRpbWVyKTs8L3NjcmlwdD4KICAgICAgICA8bGluayBocmVmPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvc2FmYXJpLWZhdmljb24tNTE3NjExMzgxLl9UVERfIiBtYXNrIHJlbD0iaWNvbiIgc2l6ZXM9ImFueSI+CiAgICAgICAgPGxpbmsgcmVsPSJpY29uIiB0eXBlPSJpbWFnZS9pY28iIGhyZWY9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9mYXZpY29uLTIxNjU4MDY5NzAuX1RURF8iIC8+CiAgICAgICAgPG1ldGEgbmFtZT0idGhlbWUtY29sb3IiIGNvbnRlbnQ9IiMwMDAwMDAiIC8+CiAgICAgICAgPGxpbmsgcmVsPSJzaG9ydGN1dCBpY29uIiB0eXBlPSJpbWFnZS94LWljb24iIGhyZWY9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9kZXNrdG9wLWZhdmljb24tMjE2NTgwNjk3MC5fVFREXyIgLz4KICAgICAgICA8bGluayBocmVmPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbW9iaWxlL2FwcGxlLXRvdWNoLWljb24td2ViLTQxNTE2NTkxODguX1RURF8iIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiI+IAogICAgICAgIDxsaW5rIGhyZWY9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9tb2JpbGUvYXBwbGUtdG91Y2gtaWNvbi13ZWItNzZ4NzYtNTM1MzYyNDguX1RURF8iIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9Ijc2eDc2Ij4gCiAgICAgICAgPGxpbmsgaHJlZj0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL21vYmlsZS9hcHBsZS10b3VjaC1pY29uLXdlYi0xMjB4MTIwLTI0NDI4Nzg0NzEuX1RURF8iIHJlbD0iYXBwbGUtdG91Y2gtaWNvbiIgc2l6ZXM9IjEyMHgxMjAiPiAKICAgICAgICA8bGluayBocmVmPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbW9iaWxlL2FwcGxlLXRvdWNoLWljb24td2ViLTE1MngxNTItMTQ3NTgyMzY0MS5fVFREXyIgcmVsPSJhcHBsZS10b3VjaC1pY29uIiBzaXplcz0iMTUyeDE1MiI+ICAgICAgICAgICAgCiAgICAgICAgPGxpbmsgcmVsPSJzZWFyY2giIHR5cGU9ImFwcGxpY2F0aW9uL29wZW5zZWFyY2hkZXNjcmlwdGlvbit4bWwiIGhyZWY9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9pbWRic2VhcmNoLTMzNDk0Njg4ODAuX1RURF8iIHRpdGxlPSJJTURiIiAvPgogIDxzY3JpcHQ+KGZ1bmN0aW9uKHQpeyAodC5ldmVudHMgPSB0LmV2ZW50cyB8fCB7fSlbImNzbV9oZWFkX3Bvc3RfaWNvbiJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CiAgICAgICAgCiAgICAgICAgPG1ldGEgcHJvcGVydHk9InBhZ2VJZCIgY29udGVudD0idHQxMzc1NjY2IiAvPgogICAgICAgIDxtZXRhIHByb3BlcnR5PSJwYWdlVHlwZSIgY29udGVudD0idGl0bGUiIC8+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9InN1YnBhZ2VUeXBlIiBjb250ZW50PSJtYWluIiAvPgoKCiAgICAgICAgPGxpbmsgcmVsPSdpbWFnZV9zcmMnIGhyZWY9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTWpBeE16WTNOamN4TkY1Qk1sNUJhbkJuWGtGdFpUY3dOVEk1T1RNME13QEAuX1YxX1VZMTIwMF9DUjkwLDAsNjMwLDEyMDBfQUxfLmpwZyI+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9J29nOmltYWdlJyBjb250ZW50PSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qQXhNelkzTmpjeE5GNUJNbDVCYW5CblhrRnRaVGN3TlRJNU9UTTBNd0BALl9WMV9VWTEyMDBfQ1I5MCwwLDYzMCwxMjAwX0FMXy5qcGciIC8+CgogICAgICAgIDxtZXRhIHByb3BlcnR5PSdvZzp0eXBlJyBjb250ZW50PSJ2aWRlby5tb3ZpZSIgLz4KICAgIDxtZXRhIHByb3BlcnR5PSdmYjphcHBfaWQnIGNvbnRlbnQ9JzExNTEwOTU3NTE2OTcyNycgLz4KCiAgICA8bWV0YSBwcm9wZXJ0eT0nb2c6dGl0bGUnIGNvbnRlbnQ9IkluY2VwdGlvbiAoMjAxMCkiIC8+CiAgICA8bWV0YSBwcm9wZXJ0eT0nb2c6c2l0ZV9uYW1lJyBjb250ZW50PSdJTURiJyAvPgogICAgPG1ldGEgbmFtZT0idGl0bGUiIGNvbnRlbnQ9IkluY2VwdGlvbiAoMjAxMCkgLSBJTURiIiAvPgogICAgICAgIDxtZXRhIG5hbWU9ImRlc2NyaXB0aW9uIiBjb250ZW50PSJEaXJlY3RlZCBieSBDaHJpc3RvcGhlciBOb2xhbi4gIFdpdGggTGVvbmFyZG8gRGlDYXByaW8sIEpvc2VwaCBHb3Jkb24tTGV2aXR0LCBFbGxlbiBQYWdlLCBLZW4gV2F0YW5hYmUuIEEgdGhpZWYsIHdobyBzdGVhbHMgY29ycG9yYXRlIHNlY3JldHMgdGhyb3VnaCB1c2Ugb2YgZHJlYW0tc2hhcmluZyB0ZWNobm9sb2d5LCBpcyBnaXZlbiB0aGUgaW52ZXJzZSB0YXNrIG9mIHBsYW50aW5nIGFuIGlkZWEgaW50byB0aGUgbWluZCBvZiBhIENFTy4iIC8+CiAgICAgICAgPG1ldGEgcHJvcGVydHk9Im9nOmRlc2NyaXB0aW9uIiBjb250ZW50PSJEaXJlY3RlZCBieSBDaHJpc3RvcGhlciBOb2xhbi4gIFdpdGggTGVvbmFyZG8gRGlDYXByaW8sIEpvc2VwaCBHb3Jkb24tTGV2aXR0LCBFbGxlbiBQYWdlLCBLZW4gV2F0YW5hYmUuIEEgdGhpZWYsIHdobyBzdGVhbHMgY29ycG9yYXRlIHNlY3JldHMgdGhyb3VnaCB1c2Ugb2YgZHJlYW0tc2hhcmluZyB0ZWNobm9sb2d5LCBpcyBnaXZlbiB0aGUgaW52ZXJzZSB0YXNrIG9mIHBsYW50aW5nIGFuIGlkZWEgaW50byB0aGUgbWluZCBvZiBhIENFTy4iIC8+CiAgICAgICAgPG1ldGEgbmFtZT0ia2V5d29yZHMiIGNvbnRlbnQ9IlJldmlld3MsIFNob3d0aW1lcywgRFZEcywgUGhvdG9zLCBNZXNzYWdlIEJvYXJkcywgVXNlciBSYXRpbmdzLCBTeW5vcHNpcywgVHJhaWxlcnMsIENyZWRpdHMiIC8+CiAgICAgICAgPG1ldGEgbmFtZT0icmVxdWVzdF9pZCIgY29udGVudD0iMFEzNUhWSDEwTVlEMk1YVkhKU0giIC8+CiAgICAgICAgCiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcHJlX2NzcyJdID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7IH0pKElNRGJUaW1lcik7PC9zY3JpcHQ+CjwhLS0gaD1pY3MtMWEtYzMtMnhsLTQyNjk2ZjhiLnVzLWVhc3QtMSAtLT4KCiAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy9jb2xsZWN0aW9ucy90aXRsZS1mbGF0LXYyLTY2MjYxMzUwNy5fVFREXyIgLz4KICAgICAgICA8bm9zY3JpcHQ+CiAgICAgICAgICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy93aGVlbC9ub2pzLTI4MjcxNTYzNDkuX1RURF8iPgogICAgICAgIDwvbm9zY3JpcHQ+CiAgPHNjcmlwdD4oZnVuY3Rpb24odCl7ICh0LmV2ZW50cyA9IHQuZXZlbnRzIHx8IHt9KVsiY3NtX2hlYWRfcG9zdF9jc3MiXSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9KShJTURiVGltZXIpOzwvc2NyaXB0PgogICAgICAgIAogIDxzY3JpcHQ+KGZ1bmN0aW9uKHQpeyAodC5ldmVudHMgPSB0LmV2ZW50cyB8fCB7fSlbImNzbV9oZWFkX3ByZV9hZHMiXSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOyB9KShJTURiVGltZXIpOzwvc2NyaXB0PgogICAgICAgIDxzY3JpcHQ+CndpbmRvdy5hZHNfanNfc3RhcnQgPSBuZXcgRGF0ZSgpLmdldFRpbWUoKTsKdmFyIGltZGJhZHMgPSBpbWRiYWRzIHx8IHt9OyBpbWRiYWRzLmNtZCA9IGltZGJhZHMuY21kIHx8IFtdOwo8L3NjcmlwdD4KPCEtLSBiZWdpbiBTUkEgLS0+CjxzY3JpcHQ+CiFmdW5jdGlvbiBhKGIsYyxkKXtmdW5jdGlvbiBlKGcsaCl7aWYoIWNbZ10pe2lmKCFiW2ddKXt2YXIgaT0iZnVuY3Rpb24iPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighaCYmaSlyZXR1cm4gaShnLCEwKTtpZihmKXJldHVybiBmKGcsITApO3ZhciBqPW5ldyBFcnJvcigiQ2Fubm90IGZpbmQgbW9kdWxlICciK2crIiciKTt0aHJvdyBqLmNvZGU9Ik1PRFVMRV9OT1RfRk9VTkQiLGp9dmFyIGs9Y1tnXT17ZXhwb3J0czp7fX07YltnXVswXS5jYWxsKGsuZXhwb3J0cyxmdW5jdGlvbihhKXt2YXIgYz1iW2ddWzFdW2FdO3JldHVybiBlKGM/YzphKX0sayxrLmV4cG9ydHMsYSxiLGMsZCl9cmV0dXJuIGNbZ10uZXhwb3J0c31mb3IodmFyIGY9ImZ1bmN0aW9uIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsZz0wO2c8ZC5sZW5ndGg7ZysrKWUoZFtnXSk7cmV0dXJuIGV9KHsxOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiO2EoMil9LHsyOjJ9XSwyOltmdW5jdGlvbihhLGIsYyl7InVzZSBzdHJpY3QiOyFmdW5jdGlvbigpe3ZhciBhLGIsYz1mdW5jdGlvbihhKXtyZXR1cm4iW29iamVjdCBBcnJheV0iPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGEpfSxkPWZ1bmN0aW9uKGEsYil7Zm9yKHZhciBjPTA7YzxhLmxlbmd0aDtjKyspYyBpbiBhJiZiLmNhbGwobnVsbCxhW2NdLGMpfSxlPVtdLGY9ITEsZz0hMSxoPWZ1bmN0aW9uKCl7dmFyIGE9W10sYj1bXSxjPXt9O3JldHVybiBkKGUsZnVuY3Rpb24oZSl7dmFyIGY9IiI7ZChlLmRhcnRzaXRlLnNwbGl0KCIvIiksZnVuY3Rpb24oYil7IiIhPT1iJiYoYiBpbiBjfHwoY1tiXT1hLmxlbmd0aCxhLnB1c2goYikpLGYrPSIvIitjW2JdKX0pLGIucHVzaChmKX0pLHtpdV9wYXJ0czphLGVuY19wcmV2X2l1czpifX0saT1mdW5jdGlvbigpe3ZhciBhPVtdO3JldHVybiBkKGUsZnVuY3Rpb24oYil7dmFyIGM9W107ZChiLnNpemVzLGZ1bmN0aW9uKGEpe2MucHVzaChhLmpvaW4oIngiKSl9KSxhLnB1c2goYy5qb2luKCJ8IikpfSksYX0saj1mdW5jdGlvbigpe3ZhciBhPVtdO3JldHVybiBkKGUsZnVuY3Rpb24oYil7YS5wdXNoKGsoYi50YXJnZXRpbmcpKX0pLGEuam9pbigifCIpfSxrPWZ1bmN0aW9uKGEsYil7dmFyIGMsZD1bXTtmb3IodmFyIGUgaW4gYSl7Yz1bXTtmb3IodmFyIGY9MDtmPGFbZV0ubGVuZ3RoO2YrKyljLnB1c2goZW5jb2RlVVJJQ29tcG9uZW50KGFbZV1bZl0pKTtiP2QucHVzaChlKyI9IitlbmNvZGVVUklDb21wb25lbnQoYy5qb2luKCIsIikpKTpkLnB1c2goZSsiPSIrYy5qb2luKCIsIikpfXJldHVybiBkLmpvaW4oIiYiKX0sbD1mdW5jdGlvbigpe3ZhciBhPStuZXcgRGF0ZTtnfHxkb2N1bWVudC5yZWFkeVN0YXRlJiYibG9hZGVkIiE9PWRvY3VtZW50LnJlYWR5U3RhdGV8fChnPSEwLGYmJmltZGJhZHMuY21kLnB1c2goZnVuY3Rpb24oKXtmb3IodmFyIGI9MDtiPGUubGVuZ3RoO2IrKylnZW5lcmljLm1vbml0b3JpbmcucmVjb3JkX21ldHJpYyhlW2JdLm5hbWUrIi5mYWlsIixjc20uZHVyYXRpb24oYSkpfSkpfTt3aW5kb3cudGlueWdwdD17ZGVmaW5lX3Nsb3Q6ZnVuY3Rpb24oYSxiLGMsZCl7ZS5wdXNoKHtkYXJ0c2l0ZTphLnJlcGxhY2UoL1wvJC8sIiIpLHNpemVzOmIsbmFtZTpjLHRhcmdldGluZzpkfSl9LHNldF90YXJnZXRpbmc6ZnVuY3Rpb24oYil7YT1ifSxjYWxsYmFjazpmdW5jdGlvbihhKXtmb3IodmFyIGMsZCxmPXt9LGc9K25ldyBEYXRlLGg9MDtoPGUubGVuZ3RoO2grKyljPWVbaF0uZGFydHNpdGUsZD1lW2hdLm5hbWUsYVtoXVtjXT9mW2RdPWFbaF1bY106d2luZG93LmNvbnNvbGUmJmNvbnNvbGUuZXJyb3ImJmNvbnNvbGUuZXJyb3IoIlVuYWJsZSB0byBjb3JyZWxhdGUgR1BUIHJlc3BvbnNlIGZvciAiK2QpO2ltZGJhZHMuY21kLnB1c2goZnVuY3Rpb24oKXtmb3IodmFyIGE9MDthPGUubGVuZ3RoO2ErKylhZF91dGlscy5zbG90X2V2ZW50cy50cmlnZ2VyKGVbYV0ubmFtZSwicmVxdWVzdCIse3RpbWVzdGFtcDpifSksYWRfdXRpbHMuc2xvdF9ldmVudHMudHJpZ2dlcihlW2FdLm5hbWUsInRhZ2RlbGl2ZXIiLHt0aW1lc3RhbXA6Z30pO2FkX3V0aWxzLmdwdC5oYW5kbGVfcmVzcG9uc2UoZil9KX0sc2VuZDpmdW5jdGlvbigpe3ZhciBkLGcsbT1bXSxuPWZ1bmN0aW9uKGEsYil7YyhiKSYmKGI9Yi5qb2luKCIsIikpLGImJm0ucHVzaChhKyI9IitlbmNvZGVVUklDb21wb25lbnQoIiIrYikpfTtpZigwPT09ZS5sZW5ndGgpcmV0dXJuIHZvaWQgdGlueWdwdC5jYWxsYmFjayh7fSk7bigiZ2RmcF9yZXEiLCIxIiksbigiY29ycmVsYXRvciIsTWF0aC5mbG9vcig0NTAzNTk5NjI3MzcwNDk2Kk1hdGgucmFuZG9tKCkpKSxuKCJvdXRwdXQiLCJqc29uX2h0bWwiKSxuKCJjYWxsYmFjayIsInRpbnlncHQuY2FsbGJhY2siKSxuKCJpbXBsIiwiZmlmcyIpLG4oImpzb25fYSIsIjEiKTt2YXIgbz1oKCk7bigiaXVfcGFydHMiLG8uaXVfcGFydHMpLG4oImVuY19wcmV2X2l1cyIsby5lbmNfcHJldl9pdXMpLG4oInByZXZfaXVfc3pzIixpKCkpLG4oInByZXZfc2NwIixqKCkpLG4oImN1c3RfcGFyYW1zIixrKGEsITApKSxkPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpLGc9ZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoInNjcmlwdCIpWzBdLGQuYXN5bmM9ITAsZC50eXBlPSJ0ZXh0L2phdmFzY3JpcHQiLGQuc3JjPSJodHRwOi8vcHViYWRzLmcuZG91YmxlY2xpY2submV0L2dhbXBhZC9hZHM/IittLmpvaW4oIiYiKSxkLmlkPSJ0aW55Z3B0IixkLm9ubG9hZD1kLm9uZXJyb3I9ZC5vbnJlYWR5c3RhdGVjaGFuZ2U9bCxmPSEwLGcucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZCxnKSxiPStuZXcgRGF0ZX19fSgpfSx7fV19LHt9LFsxXSk7PC9zY3JpcHQ+CjxzY3JpcHQ+CnRpbnlncHQuZGVmaW5lX3Nsb3QoJy80MjE1L2ltZGIyLmNvbnN1bWVyLnRpdGxlL21haW5kZXRhaWxzJywKW1s3MjgsOTBdLFsxMDA4LDE1MF0sWzEwMDgsMjAwXSxbMTAwOCwzMF0sWzk3MCwyNTBdLFsxMDA4LDQwMF0sWzksMV1dLAondG9wX2FkJywKewoncCc6IFsndG9wJywndCddCn0pOwp0aW55Z3B0LmRlZmluZV9zbG90KCcvNDIxNS9pbWRiMi5jb25zdW1lci50aXRsZS9tYWluZGV0YWlscycsCltbMzAwLDI1MF0sWzMwMCw2MDBdLFszMDAsMzAwXSxbMTEsMV1dLAondG9wX3JocycsCnsKJ3AnOiBbJ3RyJ10KfSk7CnRpbnlncHQuc2V0X3RhcmdldGluZyh7Cid0dCcgOiBbJ2YnXSwKJ2FiJyA6IFsnZSddLAonY29vJyA6IFsndXMnLCdnYiddLAonYicgOiBbJ3QyNScsJ3QyNTAnLCd0MjUwYScsJ2dsYnN0JywnbG9vcCddLAonYycgOiBbJzEnXSwKJ2cnIDogWydhYycsJ2FkJywnc2YnLCdiYWEnLCd0aCddLAonYnB4JyA6IFsnMiddLAonbScgOiBbJ1BHMTMnXSwKJ2Z2JyA6IFsnMSddLAoncycgOiBbJ2kxNCcsJzMwNzUnLCczMiddLAonbWQnIDogWyd0dDEzNzU2NjYnXSwKJ21oJyA6IFsnUEcxMyddLAonaWQnIDogWyd0dDEzNzU2NjYnXSwKJ21sJyA6IFsnUEcxMyddLAondSc6IFsnOTkxNzI3MDEwMTI5J10sCidvZSc6IFsndXRmLTgnXQp9KTsKdGlueWdwdC5zZW5kKCk7Cjwvc2NyaXB0Pgo8IS0tIGJlZ2luIGFkcyBoZWFkZXIgLS0+CjxzY3JpcHQgc3JjPSJodHRwczovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGJhZHMvanMvY29sbGVjdGlvbnMvdGFybmhlbG0tMTg2MzU3MTY1OC5fVFREXyI+PC9zY3JpcHQ+CjxzY3JpcHQgaWQ9ImFkc19kb1dpdGhBZHMiPgpkb1dpdGhBZHMgPSBmdW5jdGlvbihpbnNpZGUsIGZhaWx1cmVNZXNzYWdlKXsKaWYgKCdjb25zb2xlTG9nJyBpbiB3aW5kb3cgJiYKJ2dlbmVyaWMnIGluIHdpbmRvdyAmJgonYWRfdXRpbHMnIGluIHdpbmRvdyAmJgonY3VzdG9tJyBpbiB3aW5kb3cgJiYKJ21vbml0b3JpbmcnIGluIGdlbmVyaWMgJiYKJ2RvY3VtZW50X2lzX3JlYWR5JyBpbiBnZW5lcmljKSB7CnRyeXsKaW5zaWRlLmNhbGwodGhpcyk7Cn1jYXRjaChlKSB7CmlmICggd2luZG93LnVlTG9nRXJyb3IgKSB7CmlmKHR5cGVvZiBmYWlsdXJlTWVzc2FnZSAhPT0gJ3VuZGVmaW5lZCcpewplLm1lc3NhZ2UgPSBmYWlsdXJlTWVzc2FnZTsKfQplLmF0dHJpYnV0aW9uID0gIkFkdmVydGlzaW5nIjsKZS5sb2dMZXZlbCA9ICJFUlJPUiI7CnVlTG9nRXJyb3IoZSk7Cn0KaWYoIChkb2N1bWVudC5sb2NhdGlvbi5oYXNoLm1hdGNoKCdkZWJ1Zz0xJykpICYmCih0eXBlb2YgZmFpbHVyZU1lc3NhZ2UgIT09ICd1bmRlZmluZWQnKSApewpjb25zb2xlLmVycm9yKGZhaWx1cmVNZXNzYWdlKTsKfQp9Cn0gZWxzZSB7CmlmKCAoZG9jdW1lbnQubG9jYXRpb24uaGFzaC5tYXRjaCgnZGVidWc9MScpKSAmJgoodHlwZW9mIGZhaWx1cmVNZXNzYWdlICE9PSAndW5kZWZpbmVkJykgKXsKY29uc29sZS5lcnJvcihmYWlsdXJlTWVzc2FnZSk7Cn0KfQp9Owo8L3NjcmlwdD48c2NyaXB0IGlkPSJhZHNfbW9uaXRvcmluZ19zZXR1cCI+CmRvV2l0aEFkcyhmdW5jdGlvbigpewpnZW5lcmljLm1vbml0b3Jpbmcuc2V0X2ZvcmVzdGVyX2luZm8oInRpdGxlIik7CmdlbmVyaWMubW9uaXRvcmluZy5zZXRfdHdpbGlnaHRfaW5mbygKInRpdGxlIiwKIlVTIiwKIjI0YjYxZTM5MDRmZWI5NDg5MDA4OThkNDI4OTRkYTZhMWIxODA4OTMiLAoiMjAxNi0xMi0wNVQwNiUzQTI0JTNBNTRHTVQiLAoiaHR0cDovL3MubWVkaWEtaW1kYi5jb20vdHdpbGlnaHQvPyIsCiJjb25zdW1lciIpOwpnZW5lcmljLm1vbml0b3Jpbmcuc3RhcnRfdGltaW5nKCJwYWdlX2xvYWQiKTsKZ2VuZXJpYy5zZWNvbmRzX3RvX21pZG5pZ2h0ID0gNTcwNjsKZ2VuZXJpYy5kYXlzX3RvX21pZG5pZ2h0ID0gMC4wNjYwNDE2NjMyODkwNzAxOwp9LCJHZW5lcmljIG5vdCBkZWZpbmVkLCBza2lwcGluZyBtb25pdG9yaW5nIHNldHVwLiIpOwo8L3NjcmlwdD4KPHNjcmlwdCBzcmM9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9kYWN4L3NmL0RBc2YtMS4zNF9GWDEuX1YyNzU4MTIzNTFfLmpzIj48L3NjcmlwdD4KPHNjcmlwdCBpZD0iYWRzX3NhZmVmcmFtZV9zZXR1cCI+CmRvV2l0aEFkcyhmdW5jdGlvbigpewppZiAodHlwZW9mIERBc2YgIT0gJ3VuZGVmaW5lZCcgJiYgdHlwZW9mIERBc2YucmVnaXN0ZXJDdXN0b21NZXNzYWdlTGlzdGVuZXIgPT09ICdmdW5jdGlvbicpIHsKREFzZi5yZWdpc3RlckN1c3RvbU1lc3NhZ2VMaXN0ZW5lcignYWRGZWVkYmFjaycsIHdpbmRvdy5hZF91dGlscy5zaG93X2FkX2ZlZWRiYWNrKTsKREFzZi5yZWdpc3RlckN1c3RvbU1lc3NhZ2VMaXN0ZW5lcignc2VuZE1ldHJpY3MnLCB3aW5kb3cuZ2VuZXJpYy5tb25pdG9yaW5nLnVwZGF0ZV9zZl9zbG90X21ldHJpY3MpOwpEQXNmLnJlZ2lzdGVyQ3VzdG9tTWVzc2FnZUxpc3RlbmVyKCdleHBhbmQnLCB3aW5kb3cuYWRfdXRpbHMuZXhwYW5kX292ZXJsYXkpOwpEQXNmLnJlZ2lzdGVyQ3VzdG9tTWVzc2FnZUxpc3RlbmVyKCdjb2xsYXBzZScsIHdpbmRvdy5hZF91dGlscy5jb2xsYXBzZV9vdmVybGF5KTsKfQp9LCJhZHMganMgbWlzc2luZywgc2tpcHBpbmcgc2FmZWZyYW1lIHNldHVwLiIpOwo8L3NjcmlwdD4KPHNjcmlwdCBpZD0iYWRzX2dlbmVyYWxfc2V0dXAiPgpkb1dpdGhBZHMoZnVuY3Rpb24oKXsKZ2VuZXJpYy5tb25pdG9yaW5nLnJlY29yZF9tZXRyaWMoImFkc19qc19yZXF1ZXN0X3RvX2RvbmUiLCAobmV3IERhdGUoKS5nZXRUaW1lKCkpIC0gd2luZG93LmFkc19qc19zdGFydCk7CmdlbmVyaWMuc2VuZF9jc21faGVhZF9tZXRyaWNzICYmIGdlbmVyaWMuc2VuZF9jc21faGVhZF9tZXRyaWNzKCk7CmFkX3V0aWxzLnNldF9zbG90c19vbl9wYWdlKHsgJ2luamVjdGVkX2JpbGxib2FyZCc6MSwgJ2luamVjdGVkX25hdnN0cmlwJzoxLCAnYm90dG9tX2FkJzoxLCAnbmF2Ym9hcmQnOjEsICd0b3BfYWQnOjEsICdidGZfcmhzMic6MSwgJ3RvcF9yaHMnOjEsICdyaHNfY29ybmVyc3RvbmUnOjEgfSk7CmN1c3RvbS5mdWxsX3BhZ2UuZGF0YV91cmwgPSAiaHR0cHM6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiYWRzL2pzL2dyYWZmaXRpX2RhdGEtMjAxNDYzMDQ3NC5fVFREXyI7CmNvbnNvbGVMb2coJ2FkdmVydGlzaW5nIGluaXRpYWxpemVkJywnYWRzJyk7Cn0sImFkcyBqcyBtaXNzaW5nLCBza2lwcGluZyBnZW5lcmFsIHNldHVwLiIpOwp2YXIgX2dhcSA9IF9nYXEgfHwgW107Cl9nYXEucHVzaChbJ19zZXRDdXN0b21WYXInLCA0LCAnYWRzX2FidGVzdF90cmVhdG1lbnQnLCAnZSddKTsKPC9zY3JpcHQ+CjxzY3JpcHQ+CmRvV2l0aEFkcyhmdW5jdGlvbigpewphZF91dGlscy5yZWdpc3Rlcl9wdW50X2FkKCJ0b3BfYWQiLCI3MjgiLCI5MCIsIiA8IURPQ1RZUEUgaHRtbD48aHRtbD48Ym9keT48XCEtLSAtLVw+PHN0eWxlPi5hY3tkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO292ZXJmbG93OmhpZGRlbjt3aWR0aDoxOXB4O2hlaWdodDoxNXB4O3otaW5kZXg6OTt0b3A6MDtyaWdodDowO2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9kYS9hZGNob2ljZXMvYWMtdG9wcmlnaHQtc3ByaXRlLnBuZyl9LmFjOmhvdmVye3dpZHRoOjc3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMTlweCAwfS5oaWRle2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9PC9zdHlsZT48ZGl2IGlkPVwiYWRcIj5cbiA8bm9zY3JpcHQ+XG5cblxuPGEgaHJlZj1cImh0dHA6Ly9hYXgtdXMtZWFzdC5hbWF6b24tYWRzeXN0ZW0uY29tL3gvYy9Rb19PNHlkc1YzTnRIUnBrLTBwMXg0SUFBQUZZemFnV2VBRUFBQURLQVliNDFuUS9odHRwczovL3NlcnZlZGJ5LmZsYXNodGFsa2luZy5jb20vY2xpY2svNC81ODY0MDsyMjMxODM4OzA7MjA5OzAvP2Z0X3dpZHRoPTcyOCZmdF9oZWlnaHQ9OTAmdXJsPTEyOTUyNzc5XCIgdGFyZ2V0PVwiX2JsYW5rXCI+XG5cblxuPGltZyBib3JkZXI9XCIwXCIgc3JjPVwiLy9zZXJ2ZWRieS5mbGFzaHRhbGtpbmcuY29tL2ltcC80LzU4NjQwOzIyMzE4Mzg7MjA1O2dpZjtBT0Q7RElTUFJPQUNRRFlORlRBQVBOb25DdXN0b21lcjY2NjZIb2xpZGF5QW1hem9uQ3VzdG9tZXJzT08wQkhWRENPNzI4eDkwLz9cIj48L2E+XG5cblxuPC9ub3NjcmlwdD5cblxuXG48c2NyaXB0IGxhbmd1YWdlPVwiSmF2YXNjcmlwdDEuMVwiIHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cblxuXG52YXIgZnRDbGljayA9IFwnaHR0cCUzQSUyRiUyRmFheC11cy1lYXN0LmFtYXpvbi1hZHN5c3RlbS5jb20lMkZ4JTJGYyUyRlFvX080eWRzVjNOdEhScGstMHAxeDRJQUFBRll6YWdXZUFFQUFBREtBWWI0MW5RJTJGXCc7XG5cblxudmFyIGZ0RXhwVHJhY2tfMjIzMTgzOCA9IFwiXCI7XG5cblxudmFyIGZ0WCA9IFwiXCI7XG5cblxudmFyIGZ0WSA9IFwiXCI7XG5cblxudmFyIGZ0WiA9IFwiXCI7XG5cblxudmFyIGZ0T0JBID0gMTtcblxuXG52YXIgZnRDb250ZW50ID0gXCJcIjtcblxuXG52YXIgZnRDdXN0b20gPSBcIlwiO1xuXG5cbnZhciBmdDcyOHg5MF9PT0JjbGlja1RyYWNrID0gXCJcIjtcblxuXG52YXIgZnRSYW5kb20gPSBNYXRoLnJhbmRvbSgpKjEwMDAwMDA7XG5cblxudmFyIGZ0QnVpbGRUYWcxID0gXCI8c2NyXCI7XG5cblxudmFyIGZ0QnVpbGRUYWcyID0gXCI8L1wiO1xuXG5cbnZhciBmdENsaWNrXzIyMzE4MzggPSBmdENsaWNrO1xuXG5cbmlmKHR5cGVvZihmdF9yZWZlcnJlcik9PVwidW5kZWZpbmVkXCIpe3ZhciBmdF9yZWZlcnJlcj0oZnVuY3Rpb24oKXt2YXIgcj1cIlwiO2lmKHdpbmRvdz09dG9wKXtyPXdpbmRvdy5sb2NhdGlvbi5ocmVmO31lbHNle3RyeXtyPXdpbmRvdy5wYXJlbnQubG9jYXRpb24uaHJlZjt9Y2F0Y2goZSl7fXI9KHIpP3I6ZG9jdW1lbnQucmVmZXJyZXI7fXdoaWxlKGVuY29kZVVSSUNvbXBvbmVudChyKS5sZW5ndGg+MTAwMCl7cj1yLnN1YnN0cmluZygwLHIubGVuZ3RoLTEpO31yZXR1cm4gcjt9KCkpO31cblxuXG52YXIgZnREb21haW4gPSAod2luZG93PT10b3ApP1wiXCI6KGZ1bmN0aW9uKCl7dmFyIGQ9ZG9jdW1lbnQucmVmZXJyZXIsaD0oZCk/ZC5tYXRjaChcIig/OjpxL3EvKSsoW3F3LV0rKHEuW3F3LV0rKSspKHEvKT9cIi5yZXBsYWNlKC9xL2csZGVjb2RlVVJJQ29tcG9uZW50KFwiJVwiK1wiNUNcIikpKVsxXTpcIlwiO3JldHVybiAoaCYmaCE9bG9jYXRpb24uaG9zdCk/XCImZnRfaWZiPTEmZnRfZG9tYWluPVwiK2VuY29kZVVSSUNvbXBvbmVudChoKTpcIlwiO30oKSk7XG5cblxudmFyIGZ0VGFnID0gZnRCdWlsZFRhZzEgKyBcJ2lwdCBsYW5ndWFnZT1cImphdmFzY3JpcHQxLjFcIiB0eXBlPVwidGV4dC9qYXZhc2NyaXB0XCIgXCc7XG5cblxuZnRUYWcgKz0gXCdzcmM9XCIvL3NlcnZlZGJ5LmZsYXNodGFsa2luZy5jb20vaW1wLzQvNTg2NDA7MjIzMTgzODsyMDE7anM7QU9EO0RJU1BST0FDUURZTkZUQUFQTm9uQ3VzdG9tZXI2NjY2SG9saWRheUFtYXpvbkN1c3RvbWVyc09PMEJIVkRDTzcyOHg5MC8/ZnR4PVwnK2Z0WCtcJyZmdHk9XCcrZnRZK1wnJmZ0YWR6PVwnK2Z0WitcJyZmdHNjdz1cJytmdENvbnRlbnQrXCcmZnRfY3VzdG9tPVwnK2Z0Q3VzdG9tK1wnJmZ0T0JBPVwnK2Z0T0JBK2Z0RG9tYWluK1wnJmZ0X2FnZW50RW52PVwnKyh3aW5kb3cubXJhaWR8fHdpbmRvdy5vcm1tYT9cJzFcJzpcJzBcJykrXCcmZnRfcmVmZXJyZXI9XCcrZW5jb2RlVVJJQ29tcG9uZW50KGZ0X3JlZmVycmVyKStcJyZjYWNoZWJ1c3Rlcj1cJytmdFJhbmRvbStcJ1wiIGlkPVwiZnRzY3JpcHRfNzI4eDkwXCIgbmFtZT1cImZ0c2NyaXB0XzcyOHg5MFwiXCc7XG5cblxuZnRUYWcgKz0gXCc+XCcgKyBmdEJ1aWxkVGFnMiArIFwnc2NyaXB0PlwnO1xuXG5cbmRvY3VtZW50LndyaXRlKGZ0VGFnKTtcblxuXG48XC9zY3JpcHQ+XG5cblxuXG5cblxuXG5cblxuXG5cblxuPFNDUklQVCBsYW5ndWFnZT1cJ0phdmFTY3JpcHQxLjFcJyBTUkM9XCIvL3BpeGVsLmFkc2FmZXByb3RlY3RlZC5jb20vcmpzcy9zdC81MDIxNy8xMTc2OTM3NS9za2VsZXRvbi5qc1wiPjxcL1NDUklQVD5cbjxOT1NDUklQVD48SU1HIFNSQz1cIi8vcGl4ZWwuYWRzYWZlcHJvdGVjdGVkLmNvbS9yZncvc3QvNTAyMTcvMTE3NjkzNzQvc2tlbGV0b24uZ2lmXCIgQk9SREVSPTAgV0lEVEg9MSBIRUlHSFQ9MSBBTFQ9XCJcIj48L05PU0NSSVBUPlxuXG4gPGEgaWQ9XCJhYXBJbmZvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgY2xhc3M9XCJoaWRlIGFjXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vYWRwcmVmcy9yZWY9Y3NfYWFwXzQ2NTA4NDAxNDA1MDFcIj48L2E+PC9kaXY+PHNjcmlwdD5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IWZ1bmN0aW9uKGEsZSx0KXt2YXIgbj0vXFwuYW1hem9uXFwuY29tKDouKik/JC8sYz1cInVuZGVmaW5lZFwiIT10eXBlb2YgSVNfM1AmJklTXzNQLGk9ITE7aWYoIWMpe3ZhciBvPWE7dHJ5e2Zvcig7byE9by5wYXJlbnQ7KXtpZighby5wYXJlbnQuZG9jdW1lbnQpdGhyb3cgbmV3IEVycm9yKFwiY3Jvc3MtZG9tYWluIGV4Y2VwdGlvblwiKTtvPW8ucGFyZW50fX1jYXRjaChyKXt9dHJ5e2k9by5TRkNsaWVudD9vLlNGQ2xpZW50LmlzT25BbWF6b24oKTpuLnRlc3Qoby5sb2NhdGlvbi5ob3N0KX1jYXRjaChyKXt9fWUuYWQ9e2FpZDpcIjc5ODcwMjc1NjAyMDFcIixjaWQ6XCI0NjUwODQwMTQwNTAxXCIsdzo3MjgsaDo5MCx0ZW1wbGF0ZTpcIlRoaXJkIHBhcnR5LTEuNzJcIn0sYS5hYW5SZXNwb25zZT17YWRJZDplLmFkLmFpZCxjcmVhdGl2ZUlkOmUuYWQuY2lkLGFkTmV0d29yazpcInBkYVwiLHNoYXphbVN0YWdlOlwicHJvZFwiLHNoYXphbUlkOlwiNDg4OTA3MlwifTt0cnl7dCYmdC5hZF91dGlscyYmdC5hZF91dGlscy5leHBhbmRfYWQoZnJhbWVFbGVtZW50KX1jYXRjaChyKXt9dmFyIGQscz1mdW5jdGlvbihhKXtyZXR1cm4gZS5nZXRFbGVtZW50QnlJZChhKX0sZj1mdW5jdGlvbihhLGUsdCl7YS5ocmVmPWUsYS50YXJnZXQ9dD9cIl9ibGFua1wiOlwiX3RvcFwifSxwPWZ1bmN0aW9uKGEsZSl7cmV0dXJuIGEuY2xhc3NOYW1lLm1hdGNoKG5ldyBSZWdFeHAoXCIoXFxcXHN8XilcIitlK1wiKFxcXFxzfCQpXCIpKX0sbT1mdW5jdGlvbihhLGUpe3AoYSxlKXx8KGEuY2xhc3NOYW1lKz1cIiBcIitlKX0sdT1mdW5jdGlvbihhLGUpe2lmKHAoYSxlKSl7dmFyIHQ9bmV3IFJlZ0V4cChcIihcXFxcc3xeKVwiK2UrXCIoXFxcXHN8JClcIik7YS5jbGFzc05hbWU9YS5jbGFzc05hbWUucmVwbGFjZSh0LFwiIFwiKX19LGg9ZnVuY3Rpb24oYSl7dShhLFwiaGlkZVwiKX0sbD1zKFwiYWFwSW5mb1wiKSx3PXMoXCJhZFwiKTtjJiZtKHcsXCJhYXBcIiksbCYmYyYmaChsKSxkJiZmKGwsXCJodHRwczovL3d3dy5hbWF6b24uY29tL2FkcHJlZnNcIiwhMCk7dmFyIF89YS5TRkNsaWVudDtpZihfJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBfLmNoYW5nZVNpemUpdHJ5e18uY2hhbmdlU2l6ZShcIjcyOHB4XCIsXCI5MHB4XCIpfWNhdGNoKHIpe319KHdpbmRvdyxkb2N1bWVudCxwYXJlbnQpfSwwKTs8XC9zY3JpcHQ+XG48L2JvZHk+PC9odG1sPjxcIS0tIGNyZWF0aXZlTW9kRGF0ZSA9IDE0Nzk5MTUwNjkwMDAgLS1cPlxuIDxkaXYgaWQ9XCJ0b3BfYWRfd2ViYnVnXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+XG4gPGltZyBzcmM9XCJodHRwOi8vYWF4LXVzLWVhc3QuYW1hem9uLWFkc3lzdGVtLmNvbS9lL2xvaS9pbXA/Yj1JTjl2ZXhWdmlFaUZ0RDBYZTBTWnE3c0FBQUZZemFnV3VRRUFBQURLT3NBVEVBJnBqPVtQVU5UX09SSUdJTl1cIiBib3JkZXI9XCIwXCIgaGVpZ2h0PVwiMVwiIHdpZHRoPVwiMVwiIGFsdD1cIlwiLz5cbiA8L2Rpdj5cbiIpOwp9LCAiYWRfdXRpbHMgbm90IGRlZmluZWQsIHNraXBwaW5nIHB1bnQgYWQgZGF0YSBzZXR1cC4iKTsKPC9zY3JpcHQ+CjxzY3JpcHQ+CmRvV2l0aEFkcyhmdW5jdGlvbigpewphZF91dGlscy5yZWdpc3Rlcl9wdW50X2FkKCJ0b3BfcmhzIiwiMzAwIiwiMjUwIiwiIDwhRE9DVFlQRSBodG1sPjxodG1sPjxib2R5PjxcIS0tIC0tXD48c3R5bGU+LmFje2Rpc3BsYXk6YmxvY2s7cG9zaXRpb246YWJzb2x1dGU7b3ZlcmZsb3c6aGlkZGVuO3dpZHRoOjE5cHg7aGVpZ2h0OjE1cHg7ei1pbmRleDo5O3RvcDowO3JpZ2h0OjA7YmFja2dyb3VuZDp1cmwoaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2RhL2FkY2hvaWNlcy9hYy10b3ByaWdodC1zcHJpdGUucG5nKX0uYWM6aG92ZXJ7d2lkdGg6NzdweDtiYWNrZ3JvdW5kLXBvc2l0aW9uOi0xOXB4IDB9LmhpZGV7ZGlzcGxheTpub25lIWltcG9ydGFudH08L3N0eWxlPjxkaXYgaWQ9XCJhZFwiPlxuIDxpbnMgZGF0YS1kY20tY2xpY2stdHJhY2tlcj1cJ2h0dHA6Ly9hYXgtdXMtZWFzdC5hbWF6b24tYWRzeXN0ZW0uY29tL3gvYy9RZ1Vub08yOGRtREhOU25jZjdVaUFlQUFBQUZZemFnV2VRRUFBQURLQWFJSmdKVS9cJyBjbGFzcz1cJ2RjbWFkc1wnIHN0eWxlPVwnZGlzcGxheTppbmxpbmUtYmxvY2s7d2lkdGg6MzAwcHg7aGVpZ2h0OjI1MHB4XCdcbiBkYXRhLWRjbS1wbGFjZW1lbnQ9XCdOODQ5My4yODgzMzIuQUNDVUVOL0IxMDI5MTM3Ny4xMzc2NDcwMjdcJ1xuIGRhdGEtZGNtLXJlbmRlcmluZy1tb2RlPVwnc2NyaXB0XCdcbiBkYXRhLWRjbS1odHRwcy1vbmx5XG4gZGF0YS1kY20tcmVzZXR0YWJsZS1kZXZpY2UtaWQ9XCdcJ1xuIGRhdGEtZGNtLWFwcC1pZD1cJ1wnXG4gZGF0YS1kY20ta2V5d29yZHM9XCdbdXJsX2VuY29kZWRfcHVibGlzaGVyX2RhdGFdXCc+XG4gPHNjcmlwdCBzcmM9XCdodHRwczovL2Z3LmFkc2FmZXByb3RlY3RlZC5jb20vcmpzcy93d3cuZ29vZ2xldGFnc2VydmljZXMuY29tLzY0MjgxLzExMzk0NDY0L2RjbS9kY21hZHMuanNcJz48XC9zY3JpcHQ+XG48L2lucz5cblxuIDxhIGlkPVwibG9nb1wiPjwvYT48YSBpZD1cImFhcEluZm9cIiB0YXJnZXQ9XCJfYmxhbmtcIiBjbGFzcz1cImhpZGUgYWNcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hZHByZWZzL3JlZj1jc19hYXBfNTQ3NDc4MzY1MDQwMVwiPjwvYT48L2Rpdj48c2NyaXB0PnNldFRpbWVvdXQoZnVuY3Rpb24oKXshZnVuY3Rpb24oYSxlLHQpe3ZhciBuPS9cXC5hbWF6b25cXC5jb20oOi4qKT8kLyxjPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBJU18zUCYmSVNfM1AsaT0hMTtpZighYyl7dmFyIG89YTt0cnl7Zm9yKDtvIT1vLnBhcmVudDspe2lmKCFvLnBhcmVudC5kb2N1bWVudCl0aHJvdyBuZXcgRXJyb3IoXCJjcm9zcy1kb21haW4gZXhjZXB0aW9uXCIpO289by5wYXJlbnR9fWNhdGNoKHIpe310cnl7aT1vLlNGQ2xpZW50P28uU0ZDbGllbnQuaXNPbkFtYXpvbigpOm4udGVzdChvLmxvY2F0aW9uLmhvc3QpfWNhdGNoKHIpe319ZS5hZD17YWlkOlwiMzgxMjM3MzM0MDEwMVwiLGNpZDpcIjU0NzQ3ODM2NTA0MDFcIix3OjMwMCxoOjI1MCx0ZW1wbGF0ZTpcIlRoaXJkIHBhcnR5LTEuNzJcIn0sYS5hYW5SZXNwb25zZT17YWRJZDplLmFkLmFpZCxjcmVhdGl2ZUlkOmUuYWQuY2lkLGFkTmV0d29yazpcInBkYVwiLHNoYXphbVN0YWdlOlwicHJvZFwiLHNoYXphbUlkOlwiNDUyMTU2NFwifTt0cnl7dCYmdC5hZF91dGlscyYmdC5hZF91dGlscy5leHBhbmRfYWQoZnJhbWVFbGVtZW50KX1jYXRjaChyKXt9dmFyIGQscz1mdW5jdGlvbihhKXtyZXR1cm4gZS5nZXRFbGVtZW50QnlJZChhKX0sZj1mdW5jdGlvbihhLGUsdCl7YS5ocmVmPWUsYS50YXJnZXQ9dD9cIl9ibGFua1wiOlwiX3RvcFwifSxwPWZ1bmN0aW9uKGEsZSl7cmV0dXJuIGEuY2xhc3NOYW1lLm1hdGNoKG5ldyBSZWdFeHAoXCIoXFxcXHN8XilcIitlK1wiKFxcXFxzfCQpXCIpKX0sbT1mdW5jdGlvbihhLGUpe3AoYSxlKXx8KGEuY2xhc3NOYW1lKz1cIiBcIitlKX0sdT1mdW5jdGlvbihhLGUpe2lmKHAoYSxlKSl7dmFyIHQ9bmV3IFJlZ0V4cChcIihcXFxcc3xeKVwiK2UrXCIoXFxcXHN8JClcIik7YS5jbGFzc05hbWU9YS5jbGFzc05hbWUucmVwbGFjZSh0LFwiIFwiKX19LGg9ZnVuY3Rpb24oYSl7dShhLFwiaGlkZVwiKX0sbD1zKFwiYWFwSW5mb1wiKSx3PXMoXCJhZFwiKTtjJiZtKHcsXCJhYXBcIiksbCYmYyYmaChsKSxkJiZmKGwsXCJodHRwczovL3d3dy5hbWF6b24uY29tL2FkcHJlZnNcIiwhMCk7dmFyIF89YS5TRkNsaWVudDtpZihfJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBfLmNoYW5nZVNpemUpdHJ5e18uY2hhbmdlU2l6ZShcIjMwMHB4XCIsXCIyNTBweFwiKX1jYXRjaChyKXt9fSh3aW5kb3csZG9jdW1lbnQscGFyZW50KX0sMCk7PFwvc2NyaXB0PlxuPC9ib2R5PjwvaHRtbD48XCEtLSBjcmVhdGl2ZU1vZERhdGUgPSAxNDgwMzYwMjMwMDAwIC0tXD5cbiA8ZGl2IGlkPVwidG9wX3Joc193ZWJidWdcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj5cbiA8aW1nIHNyYz1cImh0dHA6Ly9hYXgtdXMtZWFzdC5hbWF6b24tYWRzeXN0ZW0uY29tL2UvbG9pL2ltcD9iPUlJVjNrOGdIa1VJSnNKdmdrbVJQY1drQUFBRll6YWdXdVFFQUFBREsxSXhOS3cmcGo9W1BVTlRfT1JJR0lOXVwiIGJvcmRlcj1cIjBcIiBoZWlnaHQ9XCIxXCIgd2lkdGg9XCIxXCIgYWx0PVwiXCIvPlxuIDwvZGl2PlxuIik7Cn0sICJhZF91dGlscyBub3QgZGVmaW5lZCwgc2tpcHBpbmcgcHVudCBhZCBkYXRhIHNldHVwLiIpOwo8L3NjcmlwdD4KPHNjcmlwdD5kb1dpdGhBZHMoZnVuY3Rpb24oKSB7IGFkX3V0aWxzLmFkc19oZWFkZXIuZG9uZSgpOyB9KTs8L3NjcmlwdD4KPCEtLSBlbmQgYWRzIGhlYWRlciAtLT4KICAgICAgICA8c2NyaXB0ICB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAvLyBlbnN1cmVzIGpzIGRvZXNuJ3QgZGllIGlmIGFkcyBzZXJ2aWNlIGZhaWxzLiAgCiAgICAgICAgICAgIC8vIE5vdGUgdGhhdCB3ZSBuZWVkIHRvIGRlZmluZSB0aGUganMgaGVyZSwgc2luY2UgYWQganMgaXMgYmVpbmcgcmVuZGVyZWQgaW5saW5lIGFmdGVyIHRoaXMuCiAgICAgICAgICAgIChmdW5jdGlvbihmKSB7CiAgICAgICAgICAgICAgICAvLyBGYWxsYmFjayBqYXZhc2NyaXB0LCB3aGVuIHRoZSBhZCBTZXJ2aWNlIGNhbGwgZmFpbHMuICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgaWYoKHdpbmRvdy5jc20gPT0gbnVsbCB8fCB3aW5kb3cuZ2VuZXJpYyA9PSBudWxsIHx8IHdpbmRvdy5jb25zb2xlTG9nID09IG51bGwpKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHdpbmRvdy5jb25zb2xlICYmIGNvbnNvbGUubG9nKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCJvbmUgb3IgbW9yZSBvZiB3aW5kb3cuY3NtLCB3aW5kb3cuZ2VuZXJpYyBvciB3aW5kb3cuY29uc29sZUxvZyBoYXMgYmVlbiBzdHViYmVkLi4uIik7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICB3aW5kb3cuY3NtID0gd2luZG93LmNzbSB8fCB7IG1lYXN1cmU6ZiwgcmVjb3JkOmYsIGR1cmF0aW9uOmYsIGxpc3RlbjpmLCBtZXRyaWNzOnt9IH07CiAgICAgICAgICAgICAgICB3aW5kb3cuZ2VuZXJpYyA9IHdpbmRvdy5nZW5lcmljIHx8IHsgbW9uaXRvcmluZzogeyBzdGFydF90aW1pbmc6IGYsIHN0b3BfdGltaW5nOiBmIH0gfTsKICAgICAgICAgICAgICAgIHdpbmRvdy5jb25zb2xlTG9nID0gd2luZG93LmNvbnNvbGVMb2cgfHwgZjsKICAgICAgICAgICAgfSkoZnVuY3Rpb24oKSB7fSk7CiAgICAgICAgPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9oZWFkX2RlbGl2ZXJ5X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICAgICAgPC9oZWFkPgogICAgPGJvZHkgaWQ9InN0eWxlZ3VpZGUtdjIiIGNsYXNzPSJmaXhlZCI+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmIiKTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9ib2R5X2RlbGl2ZXJ5X3N0YXJ0ZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KICAgICAgICA8ZGl2IGlkPSJ3cmFwcGVyIj4KICAgICAgICAgICAgPGRpdiBpZD0icm9vdCIgY2xhc3M9InJlZGVzaWduIj4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJucyIpOwogICAgfQo8L3NjcmlwdD4KPGRpdiBpZD0ibmIyMCIgY2xhc3M9Im5hdmJhclNwcml0ZSI+CjxkaXYgaWQ9InN1cGVydGFiIj4JCgk8IS0tIGJlZ2luIFRPUF9BRCAtLT4KPGRpdiBpZD0idG9wX2FkX3dyYXBwZXIiIGNsYXNzPSJkZnBfc2xvdCI+CjxzY3JpcHQ+CndpbmRvdy5nZW5lcmljID0gd2luZG93LmdlbmVyaWMgfHwge307CmdlbmVyaWMuYWxwaGFsZmFDb21wb25lbnRzID0gewoiYWxwaGFsZmEtY29udGFpbmVyLmh0bWwiIDogImh0dHBzOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYmFkcy9hbHBoYWxmYS1jb250YWluZXItMjUzMTUwMzMwLl9UVERfIiwKImpzL2NvbGxlY3Rpb25zL2FscGhhbGZhLmpzIiA6ICJodHRwczovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGJhZHMvanMvY29sbGVjdGlvbnMvYWxwaGFsZmEtMzI5Mjc0NzA5MC5fVFREXyIKfTsKPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KZG9XaXRoQWRzKGZ1bmN0aW9uKCl7CmFkX3V0aWxzLnJlZ2lzdGVyX2FkKCd0b3BfYWQnKTsKfSk7Cjwvc2NyaXB0Pgo8aWZyYW1lIGRhdGEtZGFydC1wYXJhbXM9IiNpbWRiMi5jb25zdW1lci50aXRsZS9tYWluZGV0YWlsczshVElMRSE7c3o9NzI4eDkwLDEwMDh4MTUwLDEwMDh4MjAwLDEwMDh4MzAsOTcweDI1MCwxMDA4eDQwMCw5eDE7cD10b3A7cD10O2c9YWM7Zz1hZDtnPXNmO2c9YmFhO2c9dGg7dHQ9ZjttPVBHMTM7bWg9UEcxMzttbD1QRzEzO2Nvbz11cztjb289Z2I7Yj10MjU7Yj10MjUwO2I9dDI1MGE7Yj1nbGJzdDtiPWxvb3A7ZnY9MTtpZD10dDEzNzU2NjY7YWI9ZTticHg9MjttZD10dDEzNzU2NjY7Yz0xO29lPXV0Zi04O1tDTElFTlRfU0lERV9LRVlWQUxVRVNdO3U9OTkxNzI3MDEwMTI5O29yZD05OTE3MjcwMTAxMjk/IiBpZD0idG9wX2FkIiBuYW1lPSJ0b3BfYWQiIGNsYXNzPSJ5ZXNTY3JpcHQiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGRhdGEtb3JpZ2luYWwtd2lkdGg9IjAiIGRhdGEtb3JpZ2luYWwtaGVpZ2h0PSIwIiBkYXRhLWNvbmZpZy13aWR0aD0iMCIgZGF0YS1jb25maWctaGVpZ2h0PSIwIiBkYXRhLWNvb2tpZS13aWR0aD0ibnVsbCIgZGF0YS1jb29raWUtaGVpZ2h0PSJudWxsIiBtYXJnaW53aWR0aD0iMCIgbWFyZ2luaGVpZ2h0PSIwIiBmcmFtZWJvcmRlcj0iMCIgc2Nyb2xsaW5nPSJubyIgYWxsb3d0cmFuc3BhcmVuY3k9InRydWUiIG9ubG9hZD0iZG9XaXRoQWRzLmNhbGwodGhpcywgZnVuY3Rpb24oKXsgYWRfdXRpbHMub25fYWRfbG9hZCh0aGlzKTsgfSk7Ij48L2lmcmFtZT4KPG5vc2NyaXB0PiA8YSBocmVmPSJodHRwOi8vcHViYWRzLmcuZG91YmxlY2xpY2submV0L2dhbXBhZC9qdW1wPyZpdT00MjE1L2ltZGIyLmNvbnN1bWVyLnRpdGxlL21haW5kZXRhaWxzJnN6PTcyOHg5MHwxMDA4eDE1MHwxMDA4eDIwMHwxMDA4eDMwfDk3MHgyNTB8MTAwOHg0MDB8OXgxJnQ9cCUzRHRvcCUyNnAlM0R0JTI2ZyUzRGFjJTI2ZyUzRGFkJTI2ZyUzRHNmJTI2ZyUzRGJhYSUyNmclM0R0aCUyNnR0JTNEZiUyNm0lM0RQRzEzJTI2bWglM0RQRzEzJTI2bWwlM0RQRzEzJTI2Y29vJTNEdXMlMjZjb28lM0RnYiUyNmIlM0R0MjUlMjZiJTNEdDI1MCUyNmIlM0R0MjUwYSUyNmIlM0RnbGJzdCUyNmIlM0Rsb29wJTI2ZnYlM0QxJTI2aWQlM0R0dDEzNzU2NjYlMjZhYiUzRGUlMjZicHglM0QyJTI2bWQlM0R0dDEzNzU2NjYlMjZjJTNEMSZ0aWxlPTAmYz05OTE3MjcwMTAxMjkiIHRhcmdldD0iX2JsYW5rIj4gPGltZyBzcmM9Imh0dHA6Ly9wdWJhZHMuZy5kb3VibGVjbGljay5uZXQvZ2FtcGFkL2FkPyZpdT00MjE1L2ltZGIyLmNvbnN1bWVyLnRpdGxlL21haW5kZXRhaWxzJnN6PTcyOHg5MHwxMDA4eDE1MHwxMDA4eDIwMHwxMDA4eDMwfDk3MHgyNTB8MTAwOHg0MDB8OXgxJnQ9cCUzRHRvcCUyNnAlM0R0JTI2ZyUzRGFjJTI2ZyUzRGFkJTI2ZyUzRHNmJTI2ZyUzRGJhYSUyNmclM0R0aCUyNnR0JTNEZiUyNm0lM0RQRzEzJTI2bWglM0RQRzEzJTI2bWwlM0RQRzEzJTI2Y29vJTNEdXMlMjZjb28lM0RnYiUyNmIlM0R0MjUlMjZiJTNEdDI1MCUyNmIlM0R0MjUwYSUyNmIlM0RnbGJzdCUyNmIlM0Rsb29wJTI2ZnYlM0QxJTI2aWQlM0R0dDEzNzU2NjYlMjZhYiUzRGUlMjZicHglM0QyJTI2bWQlM0R0dDEzNzU2NjYlMjZjJTNEMSZ0aWxlPTAmYz05OTE3MjcwMTAxMjkiIGJvcmRlcj0iMCIgYWx0PSJhZHZlcnRpc2VtZW50IiAvPiA8L2E+IDwvbm9zY3JpcHQ+CjwvZGl2Pgo8ZGl2IGlkPSJ0b3BfYWRfcmVmbG93X2hlbHBlciI+PC9kaXY+CjxzY3JpcHQ+CmRvV2l0aEFkcyhmdW5jdGlvbigpewphZF91dGlscy5ncHQucmVuZGVyX2FkKCd0b3BfYWQnKTsKfSwgImFkX3V0aWxzIG5vdCBkZWZpbmVkLCB1bmFibGUgdG8gcmVuZGVyIGNsaWVudC1zaWRlIEdQVCBhZC4iKTsKPC9zY3JpcHQ+CjwhLS0gRW5kIFRPUF9BRCAtLT4KCQo8L2Rpdj4KICA8ZGl2IGlkPSJuYXZiYXIiIGNsYXNzPSJuYXZiYXJTcHJpdGUiPgo8bm9zY3JpcHQ+CiAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiB0eXBlPSJ0ZXh0L2NzcyIgaHJlZj0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvY3NzL3NpdGUvY29uc3VtZXItbmF2YmFyLW5vLWpzLTM2NTI3ODI5ODkuX1RURF8iIC8+Cjwvbm9zY3JpcHQ+CjwhLS1baWYgSUVdPjxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2Nzcy9zaXRlL2NvbnN1bWVyLW5hdmJhci1pZS0yMTMzOTc2NDE0Ll9UVERfIj48IVtlbmRpZl0tLT4KPHNwYW4gaWQ9ImhvbWVfaW1nX2hvbGRlciI+CjxhIGhyZWY9Ii8/cmVmXz1udl9ob21lIgp0aXRsZT0iSG9tZSIgY2xhc3M9Im5hdmJhclNwcml0ZSIgaWQ9ImhvbWVfaW1nIiA+PC9hPiAgPHNwYW4gY2xhc3M9ImFsdF9sb2dvIj4KICAgIDxhIGhyZWY9Ii8/cmVmXz1udl9ob21lIgp0aXRsZT0iSG9tZSIgPklNRGI8L2E+CiAgPC9zcGFuPgo8L3NwYW4+Cjxmb3JtCiBtZXRob2Q9ImdldCIKIGFjdGlvbj0iL2ZpbmQiCiBjbGFzcz0ibmF2LXNlYXJjaGJhci1pbm5lciIKIGlkPSJuYXZiYXItZm9ybSIKCj4KICA8ZGl2IGlkPSJuYl9zZWFyY2giPgogICAgPG5vc2NyaXB0PjxkaXYgaWQ9Im1vcmVfaWZfbm9famF2YXNjcmlwdCI+PGEgaHJlZj0iL3NlYXJjaC8iPk1vcmU8L2E+PC9kaXY+PC9ub3NjcmlwdD4KICAgIDxidXR0b24gaWQ9Im5hdmJhci1zdWJtaXQtYnV0dG9uIiBjbGFzcz0icHJpbWFyeSBidG4iIHR5cGU9InN1Ym1pdCI+PGRpdiBjbGFzcz0ibWFnbmlmeWluZ2dsYXNzIG5hdmJhclNwcml0ZSI+PC9kaXY+PC9idXR0b24+CiAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSJyZWZfIiB2YWx1ZT0ibnZfc3JfZm4iIC8+CiAgICA8aW5wdXQgdHlwZT0idGV4dCIgYXV0b2NvbXBsZXRlPSJvZmYiIHZhbHVlPSIiIG5hbWU9InEiIGlkPSJuYXZiYXItcXVlcnkiIHBsYWNlaG9sZGVyPSJGaW5kIE1vdmllcywgVFYgc2hvd3MsIENlbGVicml0aWVzIGFuZCBtb3JlLi4uIj4KICAgIDxkaXYgY2xhc3M9InF1aWNrc2VhcmNoX2Ryb3Bkb3duX3dyYXBwZXIiPgogICAgICA8c2VsZWN0IG5hbWU9InMiIGlkPSJxdWlja3NlYXJjaCIgY2xhc3M9InF1aWNrc2VhcmNoX2Ryb3Bkb3duIG5hdmJhclNwcml0ZSIKICAgICAgICAgICAgICBvbmNoYW5nZT0ianVtcE1lbnUodGhpcyk7IHN1Z2dlc3Rpb25zZWFyY2hfZHJvcGRvd25fY2hvaWNlKHRoaXMpOyI+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iYWxsIiA+QWxsPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0idHQiID5UaXRsZXM8L29wdGlvbj4KICAgICAgICA8b3B0aW9uIHZhbHVlPSJlcCIgPlRWIEVwaXNvZGVzPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0ibm0iID5OYW1lczwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9ImNvIiA+Q29tcGFuaWVzPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0ia3ciID5LZXl3b3Jkczwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9ImNoIiA+Q2hhcmFjdGVyczwvb3B0aW9uPgogICAgICAgIDxvcHRpb24gdmFsdWU9InF1IiA+UXVvdGVzPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0iYmkiID5CaW9zPC9vcHRpb24+CiAgICAgICAgPG9wdGlvbiB2YWx1ZT0icGwiID5QbG90czwvb3B0aW9uPgogICAgICA8L3NlbGVjdD4KICAgIDwvZGl2PgogICAgPGRpdiBpZD0ibmF2YmFyLXN1Z2dlc3Rpb25zZWFyY2giPjwvZGl2PgogIDwvZGl2Pgo8L2Zvcm0+CjxkaXYgaWQ9Im1lZ2FNZW51Ij4KICAgIDx1bCBpZD0iY29uc3VtZXJfbWFpbl9uYXYiIGNsYXNzPSJtYWluX25hdiI+CiAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJjc3NfbmF2X2l0ZW0iIGlkPSJuYXZUaXRsZU1lbnUiPgogICAgICAgICAgICA8cCBjbGFzcz0ibmF2Q2F0ZWdvcnkiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL21vdmllcy1pbi10aGVhdGVycy8/cmVmXz1udl90cF9pbnRoXzEiCj5Nb3ZpZXM8L2E+LAogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJ0L3RvcHR2Lz9yZWZfPW52X3RwX3R2MjUwXzIiCj5UVjwvYT48YnIgLz4KICAgICAgICAgICAgICAgICYgPGEgaHJlZj0iL3Nob3d0aW1lcy8/cmVmXz1udl90cF9zaF8zIgo+U2hvd3RpbWVzPC9hPjwvcD4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgogICAgICAgICAgICA8ZGl2IGlkPSJuYXZNZW51MSIgY2xhc3M9InN1Yl9uYXYiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0idGl0bGVBZCI+PC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJOYXZMaXN0Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8aDU+TU9WSUVTPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbW92aWVzLWluLXRoZWF0ZXJzLz9yZWZfPW52X212X2ludGhfMSIKPkluIFRoZWF0ZXJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc2hvd3RpbWVzLz9yZWZfPW52X212X3NoXzIiCj5TaG93dGltZXMgJiBUaWNrZXRzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvdHJhaWxlcnMvP3JlZl89bnZfbXZfdHJfMyIKPkxhdGVzdCBUcmFpbGVyczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL21vdmllcy1jb21pbmctc29vbi8/cmVmXz1udl9tdl9jc180Igo+Q29taW5nIFNvb248L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jYWxlbmRhci8/cmVmXz1udl9tdl9jYWxfNSIKPlJlbGVhc2UgQ2FsZW5kYXI8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jaGFydC90b3A/cmVmXz1udl9tdl8yNTBfNiIKPlRvcCBSYXRlZCBNb3ZpZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jaGFydC90b3AtaW5kaWFuLW1vdmllcz9yZWZfPW52X212XzI1MF9pbl83Igo+VG9wIFJhdGVkIEluZGlhbiBNb3ZpZXM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jaGFydC9tb3ZpZW1ldGVyP3JlZl89bnZfbXZfbXBtXzgiCj5Nb3N0IFBvcHVsYXIgTW92aWVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICA8aDU+Q0hBUlRTICYgVFJFTkRTPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvP3JlZl89bnZfY2hfY2h0XzEiCj5Cb3ggT2ZmaWNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc2VhcmNoL3RpdGxlP2NvdW50PTEwMCZncm91cHM9b3NjYXJfYmVzdF9waWN0dXJlX3dpbm5lcnMmc29ydD15ZWFyLGRlc2MmcmVmXz1udl9jaF9vc2NfMiIKPk9zY2FyIFdpbm5lcnM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9nZW5yZS8/cmVmXz1udl9jaF9ncl8zIgo+TW9zdCBQb3B1bGFyIGJ5IEdlbnJlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViTmF2TGlzdENvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgPGg1PlRWICYgVklERU88L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii90di8/cmVmXz1udl90dnZfdHZfMSIKPklNRGIgVFY8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii90dmdyaWQvP3JlZl89bnZfdHZ2X2xzXzIiCj5PbiBUb25pZ2h0PC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdG9wdHYvP3JlZl89bnZfdHZ2XzI1MF8zIgo+VG9wIFJhdGVkIFRWIFNob3dzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdHZtZXRlcj9yZWZfPW52X3R2dl9tcHR2XzQiCj5Nb3N0IFBvcHVsYXIgVFYgU2hvd3M8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9mZWF0dXJlL3dhdGNoLW5vdy1vbi1hbWF6b24vP3JlZl89bnZfdHZ2X3duXzUiCj5XYXRjaCBOb3cgb24gQW1hem9uPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc2VjdGlvbnMvZHZkLz9yZWZfPW52X3R2dl9kdmRfNiIKPkRWRCAmIEJsdS1SYXk8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDxoNT5TUEVDSUFMIEZFQVRVUkVTPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIveC1yYXkvP3JlZl89bnZfc2ZfeHJheV8yIgo+WC1SYXkgZm9yIE1vdmllcyAmIFRWPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvaW1kYnBpY2tzLz9yZWZfPW52X3NmX3BpY2tzXzMiCj5JTURiIFBpY2tzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc2NhcnktZ29vZC8/cmVmXz1udl9zZl9zZ180Igo+U2NhcnkgR29vZDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2FtYXpvbi1vcmlnaW5hbHMvP3JlZl89bnZfc2ZfYW1zXzUiCj5BbWF6b24gT3JpZ2luYWxzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc3RyZWFtaW5nLz9yZWZfPW52X3NmX3N0bV82Igo+SG9saWRheSBTdHJlYW1pbmc8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJjc3NfbmF2X2l0ZW0iIGlkPSJuYXZOYW1lTWVudSI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJuYXZDYXRlZ29yeSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvc2VhcmNoL25hbWU/Z2VuZGVyPW1hbGUsZmVtYWxlJnJlZl89bnZfdHBfY2VsXzEiCj5DZWxlYnM8L2E+LAogICAgICAgICAgICAgICAgPGEgaHJlZj0iL2F3YXJkcy1jZW50cmFsLz9yZWZfPW52X3RwX2F3cmRfMiIKPkV2ZW50czwvYT48YnIgLz4KICAgICAgICAgICAgICAgICYgPGEgaHJlZj0iL2dhbGxlcnkvcmc3ODQ5NjQzNTI/cmVmXz1udl90cF9waF8zIgo+UGhvdG9zPC9hPjwvcD4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImRvd25BcnJvdyI+PC9zcGFuPgogICAgICAgICAgICA8ZGl2IGlkPSJuYXZNZW51MiIgY2xhc3M9InN1Yl9uYXYiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0ibmFtZUFkIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1Yk5hdkxpc3RDb250YWluZXIiPgogICAgICAgICAgICAgICAgICAgIDxoNT5DRUxFQlM8L2g1PgogICAgICAgICAgICAgICAgICAgIDx1bD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvc2VhcmNoL25hbWU/YmlydGhfbW9udGhkYXk9MTItMDUmcmVmaW5lPWJpcnRoX21vbnRoZGF5JnJlZl89bnZfY2VsX2Jybl8xIgo+Qm9ybiBUb2RheTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL25ld3MvY2VsZWJyaXR5P3JlZl89bnZfY2VsX253XzIiCj5DZWxlYnJpdHkgTmV3czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaC9uYW1lP2dlbmRlcj1tYWxlLGZlbWFsZSZyZWZfPW52X2NlbF9tXzMiCj5Nb3N0IFBvcHVsYXIgQ2VsZWJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgICAgICA8aDU+UEhPVE9TPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZ2FsbGVyeS9yZzE4NTk4MjAyODg/cmVmXz1udl9waF9sc18xIgo+TGF0ZXN0IFN0aWxsczwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2dhbGxlcnkvcmcxNjI0OTM5MjY0P3JlZl89bnZfcGhfbHBfMiIKPkxhdGVzdCBQb3N0ZXJzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZ2FsbGVyeS9yZzE2NDE3MTY0ODA/cmVmXz1udl9waF9sdl8zIgo+UGhvdG9zIFdlIExvdmU8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJOYXZMaXN0Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8aDU+RVZFTlRTPC9oNT4KICAgICAgICAgICAgICAgICAgICA8dWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYXdhcmRzLWNlbnRyYWwvP3JlZl89bnZfZXZfYXdyZF8xIgo+QXdhcmRzIENlbnRyYWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9zdW5kYW5jZS8/cmVmXz1udl9ldl9zdW5fMyIKPlN1bmRhbmNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2FubmVzLz9yZWZfPW52X2V2X2Nhbl82Igo+Q2FubmVzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY29taWMtY29uLz9yZWZfPW52X2V2X2NvbWljXzciCj5Db21pYy1Db248L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9lbW15cy8/cmVmXz1udl9ldl9ydGVfOCIKPkVtbXkgQXdhcmRzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvdmVuaWNlLz9yZWZfPW52X2V2X3ZlbmljZV85Igo+VmVuaWNlIEZpbG0gRmVzdGl2YWw8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii90b3JvbnRvLz9yZWZfPW52X2V2X3RmZl8xMCIKPlRvcm9udG8gRmlsbSBGZXN0aXZhbDwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2Zlc3RpdmFsLWNlbnRyYWwvP3JlZl89bnZfZXZfZmNfMTEiCj5GZXN0aXZhbCBDZW50cmFsPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvZmVzdGl2YWwtY2VudHJhbC90cmliZWNhP3JlZl89bnZfZXZfdGZmXzEyIgo+VHJpYmVjYTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2V2ZW50L2FsbC8/cmVmXz1udl9ldl9hbGxfMTMiCj5BbGwgRXZlbnRzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgICAgIDxsaSBjbGFzcz0iY3NzX25hdl9pdGVtIiBpZD0ibmF2TmV3c01lbnUiPgogICAgICAgICAgICA8cCBjbGFzcz0ibmF2Q2F0ZWdvcnkiPgogICAgICAgICAgICAgICAgPGEgaHJlZj0iL25ld3MvdG9wP3JlZl89bnZfdHBfbndfMSIKPk5ld3M8L2E+ICY8YnIgLz4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9ib2FyZHMvP3JlZl89bnZfdHBfYmRfMiIKPkNvbW11bml0eTwvYT48L3A+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkb3duQXJyb3ciPjwvc3Bhbj4KICAgICAgICAgICAgPGRpdiBpZD0ibmF2TWVudTMiIGNsYXNzPSJzdWJfbmF2Ij4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9ImxhdGVzdEhlYWRsaW5lcyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic3ViTmF2TGlzdENvbnRhaW5lciI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxoNT5MQVRFU1QgSEVBRExJTkVTPC9oNT4KICAgIDx1bD4KICAgICAgICAgICAgICAgIDxsaSBpdGVtcHJvcD0iaGVhZGxpbmUiPgo8YSBocmVmPSIvbmV3cy9uaTYwNTMzMzM0Lz9yZWZfPW52X253X3RuXzEiCj4g4oCYQW1lcmljYW4gSG9uZXnigJkgVHJpdW1waHMgYXQgQnJpdGlzaCBJbmRlcGVuZGVudCBGaWxtIEF3YXJkcwo8L2E+PGJyIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aW1lIj4xMCBob3VycyBhZ288L3NwYW4+CiAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgPGxpIGl0ZW1wcm9wPSJoZWFkbGluZSI+CjxhIGhyZWY9Ii9uZXdzL25pNjA1MzI5MTcvP3JlZl89bnZfbndfdG5fMiIKPiAnTW9hbmEnIFJlcGVhdHMgYXQgIzEsIFRvcHBpbmcgU2xvdyBQb3N0LVRoYW5rc2dpdmluZyBXZWVrZW5kCjwvYT48YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRpbWUiPjEzIGhvdXJzIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICA8bGkgaXRlbXByb3A9ImhlYWRsaW5lIj4KPGEgaHJlZj0iL25ld3Mvbmk2MDUzMzE4My8/cmVmXz1udl9ud190bl8zIgo+IOKAmEx1a2UgQ2FnZeKAmSBSZW5ld2VkIGZvciBTZWFzb24gMiBvbiBOZXRmbGl4CjwvYT48YnIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InRpbWUiPjExIGhvdXJzIGFnbzwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvbGk+CiAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdWJOYXZMaXN0Q29udGFpbmVyIj4KICAgICAgICAgICAgICAgICAgICA8aDU+TkVXUzwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL25ld3MvdG9wP3JlZl89bnZfbndfdHBfMSIKPlRvcCBOZXdzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbmV3cy9tb3ZpZT9yZWZfPW52X253X212XzIiCj5Nb3ZpZSBOZXdzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbmV3cy90dj9yZWZfPW52X253X3R2XzMiCj5UViBOZXdzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbmV3cy9jZWxlYnJpdHk/cmVmXz1udl9ud19jZWxfNCIKPkNlbGVicml0eSBOZXdzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbmV3cy9pbmRpZT9yZWZfPW52X253X2luZF81Igo+SW5kaWUgTmV3czwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPGg1PkNPTU1VTklUWTwvaDU+CiAgICAgICAgICAgICAgICAgICAgPHVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL2JvYXJkcy8/cmVmXz1udl9jbV9iZF8xIgo+TWVzc2FnZSBCb2FyZHM8L2E+PC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jem9uZS8/cmVmXz1udl9jbV9jel8yIgo+Q29udHJpYnV0b3IgWm9uZTwvYT48L2xpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3BvbGwvP3JlZl89bnZfY21fcGxfMyIKPlBvbGxzPC9hPjwvbGk+CiAgICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgICAgIDxsaSBjbGFzcz0iY3NzX25hdl9pdGVtIiBpZD0ibmF2V2F0Y2hsaXN0TWVudSI+CjxwIGNsYXNzPSJuYXZDYXRlZ29yeSBzaW5nbGVMaW5lIHdhdGNobGlzdCI+CiAgICA8YSBocmVmPSIvbGlzdC93YXRjaGxpc3Q/cmVmXz1udl93bF9hbGxfMCIKPldhdGNobGlzdDwvYT4KPC9wPgo8c3BhbiBjbGFzcz0iZG93bkFycm93Ij48L3NwYW4+CjxkaXYgaWQ9Im5hdk1lbnU0IiBjbGFzcz0ic3ViX25hdiI+CiAgICA8aDU+CiAgICAgICAgICAgIFlPVVIgV0FUQ0hMSVNUCiAgICA8L2g1PgogICAgPHVsIGlkPSJuYXZXYXRjaGxpc3QiPgogICAgPC91bD4KICAgIDxzY3JpcHQ+CiAgICBpZiAoISgnaW1kYicgaW4gd2luZG93KSkgeyB3aW5kb3cuaW1kYiA9IHt9OyB9CiAgICB3aW5kb3cuaW1kYi53YXRjaGxpc3RUZWFzZXJEYXRhID0gWwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICBocmVmIDogIi9saXN0L3dhdGNobGlzdCIsCiAgICAgICAgICAgICAgICBzcmMgOiAiaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci93YXRjaGxpc3Rfc2xvdDFfbG9nZ2VkX291dC0xNjcwMDQ2MzM3Ll9DQjUyNzE2NTY4MF8uanBnIgogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBocmVmIDogIi9zZWFyY2gvdGl0bGU/Y291bnQ9MTAwJnRpdGxlX3R5cGU9ZmVhdHVyZSx0dl9zZXJpZXMiLAogICAgICAgICAgICAgICAgc3JjIDogImh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9uYXZiYXIvd2F0Y2hsaXN0X3Nsb3QyX3BvcHVsYXItNDA5MDc1NzE5Ny5fQ0I1MjcwOTUxMTRfLmpwZyIKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgaHJlZiA6ICIvY2hhcnQvdG9wIiwKICAgICAgICAgICAgICAgIHNyYyA6ICJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbmF2YmFyL3dhdGNobGlzdF9zbG90M190b3AyNTAtNTc1Nzk5OTY2Ll9DQjUyNzE2NjIyNl8uanBnIgogICAgICAgICAgICAgICAgfQogICAgXTsKICAgIDwvc2NyaXB0Pgo8L2Rpdj4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic3BhY2VyIj48L2xpPgogICAgPC91bD4KPHNjcmlwdD4KaWYgKCEoJ2ltZGInIGluIHdpbmRvdykpIHsgd2luZG93LmltZGIgPSB7fTsgfQp3aW5kb3cuaW1kYi5uYXZiYXJBZFNsb3RzID0gewogICAgdGl0bGVBZCA6IHsKICAgICAgICAgICAgY2xpY2tUaHJ1IDogIi90aXRsZS90dDAxMTExNjEvIiwKICAgICAgICAgICAgaW1hZ2VVcmwgOiAiaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9NL01WNUJNVGt6TVRZME1qRTVNVjVCTWw1QmFuQm5Ya0Z0WlRjd09ETXhORFkzTXdAQC5fVjEuX1NZMzE3X0NSMSwxLDQxMCwzMTVfLmpwZyIsCiAgICAgICAgICAgIHRpdGxlWWVhcnMgOiAiMTk5NCIsCiAgICAgICAgICAgIHJhbmsgOiAxLAogICAgICAgICAgICAgICAgICAgIGhlYWRsaW5lIDogIlRoZSBTaGF3c2hhbmsgUmVkZW1wdGlvbiIKICAgIH0sCiAgICBuYW1lQWQgOiB7CiAgICAgICAgICAgIGNsaWNrVGhydSA6ICIvbmFtZS9ubTEyOTcwMTUvIiwKICAgICAgICAgICAgaW1hZ2VVcmwgOiAiaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9NL01WNUJNakF5T1RneU1qVXpOVjVCTWw1QmFuQm5Ya0Z0WlRjd09ETTFNVFUwTndAQC5fVjEuX1NYMjUwX0NSMCwwLDI1MCwzMTVfLmpwZyIsCiAgICAgICAgICAgIHJhbmsgOiA4MiwKICAgICAgICAgICAgaGVhZGxpbmUgOiAiRW1tYSBTdG9uZSIKICAgIH0KfQo8L3NjcmlwdD4KPC9kaXY+CjxkaXYgaWQ9Im5iX2V4dHJhIj4KICAgIDx1bCBpZD0ibmJfZXh0cmFfbmF2IiBjbGFzcz0ibWFpbl9uYXYiPgogICAgICAgIDxsaSBjbGFzcz0iY3NzX25hdl9pdGVtIiBpZD0ibmF2UHJvTWVudSI+CiAgICAgICAgICAgIDxwIGNsYXNzPSJuYXZDYXRlZ29yeSI+CjxhIGhyZWY9Imh0dHA6Ly9wcm8uaW1kYi5jb20vc2lnbnVwL2luZGV4Lmh0bWw/cmY9Y29uc19uYl9obSZyZWZfPWNvbnNfbmJfaG0iCj4gPGltZyBhbHQ9IklNRGJQcm8gTWVudSIgc3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbmF2YmFyL2ltZGJwcm9fbG9nb19uYi03MjAxNDMxNjIuX1RURF8iIC8+CjwvYT4gICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJkb3duQXJyb3ciPjwvc3Bhbj4KICAgICAgICAgICAgPGRpdiBpZD0ibmF2TWVudVBybyIgY2xhc3M9InN1Yl9uYXYiPgo8YSBocmVmPSJodHRwOi8vcHJvLmltZGIuY29tL3NpZ251cC9pbmRleC5odG1sP3JmPWNvbnNfbmJfaG0mcmVmXz1jb25zX25iX2htIgppZD0icHJvTGluayIgPiA8ZGl2IGlkPSJwcm9BZCI+CjxzY3JpcHQ+CmlmICghKCdpbWRiJyBpbiB3aW5kb3cpKSB7IHdpbmRvdy5pbWRiID0ge307IH0Kd2luZG93LmltZGIucHJvTWVudVRlYXNlciA9IHsKaW1hZ2VVcmwgOiAiaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci9pbWRicHJvX21lbnVfdXNlci0yMDgyNTQ0NzQwLl9UVERfIgp9Owo8L3NjcmlwdD4KPC9kaXY+CjxkaXYgY2xhc3M9InN1Yk5hdkxpc3RDb250YWluZXIiPgo8aW1nIGFsdD0iR28gdG8gSU1EYlBybyIgdGl0bGU9IkdvIHRvIElNRGJQcm8iIHNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25hdmJhci9pbWRicHJvX2xvZ29fbWVudS0yMTg1ODc5MTgyLl9UVERfIiAvPgo8aDU+R0VUIElORk9STUVEPC9oNT4KPHA+SW5kdXN0cnkgaW5mb3JtYXRpb24gYXQgeW91ciBmaW5nZXJ0aXBzPC9wPgo8aDU+R0VUIENPTk5FQ1RFRDwvaDU+CjxwPk92ZXIgMjAwLDAwMCBIb2xseXdvb2QgaW5zaWRlcnM8L3A+CjxoNT5HRVQgRElTQ09WRVJFRDwvaDU+CjxwPkVuaGFuY2UgeW91ciBJTURiIFBhZ2U8L3A+CjxwPjxzdHJvbmc+R28gdG8gSU1EYlBybyAmcmFxdW87PC9zdHJvbmc+PC9wPgo8L2Rpdj4KPC9hPiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvbGk+CiAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj48L2xpPgogICAgICAgIDxsaT4KICAgICAgICAgICAgPGEgaHJlZj0iL2hlbHAvP3JlZl89bmJfaGxwIgo+SGVscDwvYT4KICAgICAgICA8L2xpPgogICAgICAgIDxsaSBjbGFzcz0ic29jaWFsIj4KCiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249Zm9sX2ZiJnRva2VuPUJDWXI0ZUtjVlU4SzBuTmxJbmltSDkwYi1GV2Z3b3NuNy1LYmpfOUg5NkpBNUtpbjBDdU9LcWtVcHdldVpYYjZpUmE3em1pdUJJanMlMEQlMEFPV0pnOFZJNGxmenJKeHJSUUk2ajdXczNqQ09JWDkzUVRlTVpyZmpub1dtaUtTUi1HOE5TQUcxOHJmTHJRZ3p4RXhlRGRtUTViem5NJTBEJTBBd25QQlpZZVlqOUNSMDQ0T3JZbWRtbHB6RVBNbGM5cXdWTWJQWVd5dDhwUGtsMW5QYzhyTExrLWVXVkpHYkxrR0xBJTBEJTBBJnJlZl89dHRfbnZfZm9sX2ZiIgp0aXRsZT0iRm9sbG93IElNRGIgb24gRmFjZWJvb2siIHRhcmdldD0iX2JsYW5rIiBpdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9ImRlc2t0b3Atc3ByaXRlIGZvbGxvdy1mYWNlYm9vayIgPjwvc3Bhbj4KPC9hPgogICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZvbF90dyZ0b2tlbj1CQ1lyX0ZaZ2RocURMU19XU2lFSVFWTW5hd1VzQTBrZnJDX1FHc3YwaVpqSUFlM3Y0azBLc3ZMSzg1ZDQtVVM2UjE2dDVtZVVSaGxCJTBEJTBBSGlRTS14RnptWGNkeURTeEJhX2o0dFBqdVVUZ1NFX2N0VHFLMDl1azdGMU10UC16clJmYnllOXlCMDhYUnNLanFYNW1DdFk5UjZDQiUwRCUwQTFBV2tSdEh5X1BlZDd2R1NKYXIxTGtncWtEajRUT3VmS1lDZ0ZKZjQ1UkRTVUJQN09vRmZXR3AtdlU0WFgxSUhpdyUwRCUwQSZyZWZfPXR0X252X2ZvbF90dyIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIFR3aXR0ZXIiIHRhcmdldD0iX2JsYW5rIiBpdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9ImRlc2t0b3Atc3ByaXRlIGZvbGxvdy10d2l0dGVyIiA+PC9zcGFuPgo8L2E+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249Zm9sX2luc3QmdG9rZW49QkNZcXVMcmpDMnlwYm1Tem1MUTN6dUQ1eUF4Qzg3dlRMb29IUDBhWTJBSGRTWkU3UkRzTTh3Y3NFX2JvR1VJc21vdTEwM3k4eG9uQyUwRCUwQXhudEd4d1RXdFF6MVRYYTNxTl9YVXN1aUQ0cWtOZzFIMkF1bVNIOHVXcUQyVU44dGJMZEFtMGlrTWlqOG9KdnhpbHluc240Zy1tbE0lMEQlMEF3enRYWWNzMEVaRTNULXpfekZpSXlxOW5NcDZmbTVLc01uX1hkMlFCNzZ4Y1FobFVEZkJwSHh4WnVobkhsNmUwVlElMEQlMEEmcmVmXz10dF9udl9mb2xfaW5zdCIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIEluc3RhZ3JhbSIgdGFyZ2V0PSJfYmxhbmsiIGl0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgZm9sbG93LWluc3RhZ3JhbSIgPjwvc3Bhbj4KPC9hPgogICAgICAgIDwvbGk+CiAgICA8L3VsPgo8L2Rpdj4KPGRpdiBpZD0ibmJfcGVyc29uYWwiPgogICAgPHVsIGlkPSJjb25zdW1lcl91c2VyX25hdiIgY2xhc3M9Im1haW5fbmF2Ij4KCiAgICAgICAgICAgIDxsaSBjbGFzcz0iY3NzX25hdl9tZW51IG5vX2Fycm93IiBpZD0ibmF2VXNlck1lbnUiPgogICAgICAgICAgICA8cCBjbGFzcz0ibmF2Q2F0ZWdvcnkgc2luZ2xlTGluZSI+CiAgICAgICAgICAgICAgICA8YSBpZD0iZmFjZWJvb2stc2lnbmluLWxpbmsiIGhyZWY9Imh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tL3YyLjgvb2F1dGgvYXV0aG9yaXplP2NsaWVudF9pZD0xMjcwNTk5NjA2NzM4Mjkmc2NvcGU9ZW1haWwlMkN1c2VyX2Fib3V0X21lJTJDdXNlcl9iaXJ0aGRheSZzdGF0ZT1leUkwT1dVMll5STZJakEzTnpraUxDSjFJam9pYUhSMGNITTZMeTkzZDNjdWFXMWtZaTVqYjIwdkluMCZyZWRpcmVjdF91cmk9aHR0cHMlM0ElMkYlMkZ3d3cuaW1kYi5jb20lMkZyZWdpc3RyYXRpb24lMkZmYWNlYm9va2hhbmRsZXIlMkYiIGNsYXNzPSJzaWduaW4tYnV0dG9uIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJmYWNlYm9vay1sb2dvIj48L3NwYW4+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic2lnbmluLWZhY2Vib29rLXRleHQiPlNpZ24gaW4gd2l0aCBGYWNlYm9vazwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSJodHRwczovL3d3dy5pbWRiLmNvbS9yZWdpc3RyYXRpb24vc2lnbmluP3U9L3RpdGxlL3R0MTM3NTY2Ni8mcmVmXz1udl91c3JfbGdpbl8xIgpyZWw9ImxvZ2luIiBjbGFzcz0ic2lnbmluLW90aGVyLW9wdGlvbnMtdGV4dCIgaWQ9Im5ibG9naW4iID5PdGhlciBTaWduIGluIG9wdGlvbnM8L2E+CiAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgPC9saT4KICAgIDwvdWw+CjwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4KCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBuYXZzdHJpcCAtLT4KCQoJCgk8IS0tIGJlZ2luIGluamVjdGFibGUgSU5KRUNURURfTkFWU1RSSVAgLS0+CjxkaXYgaWQ9ImluamVjdGVkX25hdnN0cmlwX3dyYXBwZXIiIGNsYXNzPSJpbmplY3RlZF9zbG90Ij4KPGlmcmFtZSBpZD0iaW5qZWN0ZWRfbmF2c3RyaXAiIG5hbWU9ImluamVjdGVkX25hdnN0cmlwIiBjbGFzcz0ieWVzU2NyaXB0IiB3aWR0aD0iMCIgaGVpZ2h0PSIwIiBkYXRhLWRhcnQtcGFyYW1zPSIjaW1kYjIuY29uc3VtZXIudGl0bGUvbWFpbmRldGFpbHM7b2U9dXRmLTg7dT05OTE3MjcwMTAxMjk7b3JkPTk5MTcyNzAxMDEyOT8iIGRhdGEtb3JpZ2luYWwtd2lkdGg9IjAiIGRhdGEtb3JpZ2luYWwtaGVpZ2h0PSIwIiBkYXRhLWNvbmZpZy13aWR0aD0iMCIgZGF0YS1jb25maWctaGVpZ2h0PSIwIiBkYXRhLWNvb2tpZS13aWR0aD0ibnVsbCIgZGF0YS1jb29raWUtaGVpZ2h0PSJudWxsIiBtYXJnaW53aWR0aD0iMCIgbWFyZ2luaGVpZ2h0PSIwIiBmcmFtZWJvcmRlcj0iMCIgc2Nyb2xsaW5nPSJubyIgYWxsb3d0cmFuc3BhcmVuY3k9InRydWUiIG9ubG9hZD0iZG9XaXRoQWRzLmNhbGwodGhpcywgZnVuY3Rpb24oKXsgYWRfdXRpbHMub25fYWRfbG9hZCh0aGlzKTsgfSk7Ij48L2lmcmFtZT4gPC9kaXY+CjxzY3JpcHQ+CmRvV2l0aEFkcyhmdW5jdGlvbigpewphZF91dGlscy5pbmplY3RfYWQucmVnaXN0ZXIoJ2luamVjdGVkX25hdnN0cmlwJyk7Cn0sICJhZF91dGlscyBub3QgZGVmaW5lZCwgdW5hYmxlIHRvIHJlbmRlciBpbmplY3RlZCBhZC4iKTsKPC9zY3JpcHQ+CjxkaXYgaWQ9ImluamVjdGVkX25hdnN0cmlwX3JlZmxvd19oZWxwZXIiPjwvZGl2Pgo8IS0tIGVuZCBpbmplY3RhYmxlIElOSkVDVEVEX05BVlNUUklQIC0tPgoJCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgibmUiKTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgIDxkaXYgaWQ9InBhZ2Vjb250ZW50IiBjbGFzcz0icGFnZWNvbnRlbnQiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvTW92aWUiPgoJCgk8IS0tIGJlZ2luIGluamVjdGFibGUgSU5KRUNURURfQklMTEJPQVJEIC0tPgo8ZGl2IGlkPSJpbmplY3RlZF9iaWxsYm9hcmRfd3JhcHBlciIgY2xhc3M9ImluamVjdGVkX3Nsb3QiPgo8aWZyYW1lIGlkPSJpbmplY3RlZF9iaWxsYm9hcmQiIG5hbWU9ImluamVjdGVkX2JpbGxib2FyZCIgY2xhc3M9Inllc1NjcmlwdCIgd2lkdGg9IjAiIGhlaWdodD0iMCIgZGF0YS1kYXJ0LXBhcmFtcz0iI2ltZGIyLmNvbnN1bWVyLnRpdGxlL21haW5kZXRhaWxzO29lPXV0Zi04O3U9OTkxNzI3MDEwMTI5O29yZD05OTE3MjcwMTAxMjk/IiBkYXRhLW9yaWdpbmFsLXdpZHRoPSIwIiBkYXRhLW9yaWdpbmFsLWhlaWdodD0iMCIgZGF0YS1jb25maWctd2lkdGg9IjAiIGRhdGEtY29uZmlnLWhlaWdodD0iMCIgZGF0YS1jb29raWUtd2lkdGg9Im51bGwiIGRhdGEtY29va2llLWhlaWdodD0ibnVsbCIgbWFyZ2lud2lkdGg9IjAiIG1hcmdpbmhlaWdodD0iMCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iIGFsbG93dHJhbnNwYXJlbmN5PSJ0cnVlIiBvbmxvYWQ9ImRvV2l0aEFkcy5jYWxsKHRoaXMsIGZ1bmN0aW9uKCl7IGFkX3V0aWxzLm9uX2FkX2xvYWQodGhpcyk7IH0pOyI+PC9pZnJhbWU+IDwvZGl2Pgo8c2NyaXB0Pgpkb1dpdGhBZHMoZnVuY3Rpb24oKXsKYWRfdXRpbHMuaW5qZWN0X2FkLnJlZ2lzdGVyKCdpbmplY3RlZF9iaWxsYm9hcmQnKTsKfSwgImFkX3V0aWxzIG5vdCBkZWZpbmVkLCB1bmFibGUgdG8gcmVuZGVyIGluamVjdGVkIGFkLiIpOwo8L3NjcmlwdD4KPGRpdiBpZD0iaW5qZWN0ZWRfYmlsbGJvYXJkX3JlZmxvd19oZWxwZXIiPjwvZGl2Pgo8IS0tIGVuZCBpbmplY3RhYmxlIElOSkVDVEVEX0JJTExCT0FSRCAtLT4KCQoKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCgkKCTwhLS0gYmVnaW4gaW5qZWN0YWJsZSBOQVZCT0FSRCAtLT4KPGRpdiBpZD0ibmF2Ym9hcmRfd3JhcHBlciIgY2xhc3M9ImluamVjdGVkX3Nsb3QiPgo8aWZyYW1lIGlkPSJuYXZib2FyZCIgbmFtZT0ibmF2Ym9hcmQiIGNsYXNzPSJ5ZXNTY3JpcHQiIHdpZHRoPSIwIiBoZWlnaHQ9IjAiIGRhdGEtZGFydC1wYXJhbXM9IiNpbWRiMi5jb25zdW1lci50aXRsZS9tYWluZGV0YWlscztvZT11dGYtODt1PTk5MTcyNzAxMDEyOTtvcmQ9OTkxNzI3MDEwMTI5PyIgZGF0YS1vcmlnaW5hbC13aWR0aD0iMCIgZGF0YS1vcmlnaW5hbC1oZWlnaHQ9IjAiIGRhdGEtY29uZmlnLXdpZHRoPSIwIiBkYXRhLWNvbmZpZy1oZWlnaHQ9IjAiIGRhdGEtY29va2llLXdpZHRoPSJudWxsIiBkYXRhLWNvb2tpZS1oZWlnaHQ9Im51bGwiIG1hcmdpbndpZHRoPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIGZyYW1lYm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIiBhbGxvd3RyYW5zcGFyZW5jeT0idHJ1ZSIgb25sb2FkPSJkb1dpdGhBZHMuY2FsbCh0aGlzLCBmdW5jdGlvbigpeyBhZF91dGlscy5vbl9hZF9sb2FkKHRoaXMpOyB9KTsiPjwvaWZyYW1lPiA8L2Rpdj4KPHNjcmlwdD4KZG9XaXRoQWRzKGZ1bmN0aW9uKCl7CmFkX3V0aWxzLmluamVjdF9hZC5yZWdpc3RlcignbmF2Ym9hcmQnKTsKfSwgImFkX3V0aWxzIG5vdCBkZWZpbmVkLCB1bmFibGUgdG8gcmVuZGVyIGluamVjdGVkIGFkLiIpOwo8L3NjcmlwdD4KPGRpdiBpZD0ibmF2Ym9hcmRfcmVmbG93X2hlbHBlciI+PC9kaXY+CjwhLS0gZW5kIGluamVjdGFibGUgTkFWQk9BUkQgLS0+CgkKCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCjxkaXYgaWQ9ImNvbnRlbnQtMi13aWRlIiBjbGFzcz0iZmxhdGxhbmQiPgogICAgPGRpdiBpZD0ibWFpbl90b3AiIGNsYXNzPSJtYWluIj4KCiAgICAKICAgIAogICAgCiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFydGljbGUgbmF0aXZlLWFkLXByb21vdGVkLXByb3ZpZGVyIj4KICAgIDxhIGNsYXNzPSJmdWxsLWxpbmsgbmF0aXZlLWFkLWxpbmsiIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1wcm9tbyZ0b2tlbj1CQ1lnWnJzWUsyWVpnYnlLVGZJNllsbjRLZlpnVE5GQk1jcUdyclgyX3dWSmxpUkVKR0ZoTXcwaHdacFpHQ3pCdDdQRnNOeWxKYzV5JTBEJTBBb3FabDdpcnNXelBOTmRBb2R1SXJfRnNRWVhKMGRiSXRIZlVrdmF2TkptQTN1eWRCRzY3UVlaTDNMVGNfUGViaXJ1OGxXV3YzUEJnWCUwRCUwQVJ6aUtBa3h0eGhudFh6a3lXX0Y4S1lMdWl4azhrSWxJQVVEMldEeHhqTm5WNTNNcXpVRHpvZ1lweFA3RDhvU0tKSzluRGdtc2NyejQlMEQlMEFkYktHYXdGY1haTDdiYkNzV2ZsWWIwNDIzcm9kNkhEaVo2SkJLMjB5T0ZRRDdWZlBDXzU0U1ElMEQlMEEiCiAgICAgICAgZGF0YS1jdC1jb3VudD0iMSIKICAgICAgICAgICAgZGF0YS1jdC0wPSJodHRwOi8vcy5hbWF6b24tYWRzeXN0ZW0uY29tL2l1aTM/ZD1mb3Jlc3Rlci1kaWQmZXgtZmNoPTQxNjcxOSZyZD0mY2I9Miw2MDksODk1LDk4MCw0MjksMzgwLDA4NiZleC1mYXJncz0lM0ZpJTNEbzNuZS1MODhmUzU2ekhHdXktV2RwQSUyNmElM0QxNDcwODU3NzgwMTAxJTI2YyUzRDU3NDI3MTQ3NDA1MDElMjZzJTNEcGRhJTI2ZSUzRGNsaWNrJjE4NzcwMjE4NDMiCiAgICA+ICAgICAgICAgPGRpdiBjbGFzcz0iZmxvYXQtbGVmdCI+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iZmxvYXQtcmlnaHQiPgogICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iY2FsbC10by1hY3Rpb24iIHNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL3NoYXphbS9wcmltZXRyaWFsLTF5QmFMdC5fVjMwODY5OTM3M18ucG5nIiAvPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im1lc3NhZ2Utc2xvdCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJvdmlkZXItbWVzc2FnZSI+RW5qb3kgdW5saW1pdGVkIHN0cmVhbWluZyBvbiBQcmltZSBWaWRlbzwvZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1lc3NhZ2UiPkluY2x1ZGVzIHRob3VzYW5kcyBvZiB0aXRsZXMuIFBsYW5zIHN0YXJ0aW5nIGF0ICQ4Ljk5L21vPC9zcGFuPgogICAgICAgIDwvZGl2PgogICAgPC9hPiAgICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9zLmFtYXpvbi1hZHN5c3RlbS5jb20vaXVpMz9kPWZvcmVzdGVyLWRpZCZleC1mY2g9NDE2NzE5JnJkPSZjYj05ODUsNzc4LDI3Myw3MjEsMDQxLDQ3OSZleC1mYXJncz0lM0ZpJTNEbzNuZS1MODhmUzU2ekhHdXktV2RwQSUyNmElM0QxNDcwODU3NzgwMTAxJTI2YyUzRDU3NDI3MTQ3NDA1MDElMjZzJTNEcGRhJTI2ZSUzRGFkQ3VzdG9tQWN0aW9uMjAmMTQxODkzNDc2MCYxOTYyNzU1MzI3IiBjbGFzcz0iaW1wcmVzc2lvbi10cmFja2VyIiAvPgogICAgICAgICAgICAgICAgPGltZyBzcmM9Imh0dHA6Ly9hYXgtdXMtZWFzdC5hbWF6b24tYWRzeXN0ZW0uY29tL2UvbG9pL2ltcD9iPUlBM3VBOUMtVkVmanNqdm5mdlltQUI4QUFBRll6YWdYdVFFQUFBREs4R3didUEiIGNsYXNzPSJpbXByZXNzaW9uLXRyYWNrZXIiIC8+CiAgICAgICAgICAgIDwvZGl2PgoKCiAgICAKICAgIAogICAgCgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aXRsZS1vdmVydmlldyI+CgoKICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlT3ZlcnZpZXdXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgICAgIDxkaXYgaWQ9InRpdGxlLW92ZXJ2aWV3LXdpZGdldCIgY2xhc3M9Imhlcm9pYy1vdmVydmlldyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1lc3NhZ2VfYm94Ij4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9InN0YXItcmF0aW5ncy13aWRnZXQtZXJyb3IiIGNsYXNzPSJoaWRkZW4gZXJyb3IiPgogICAgICAgICAgICAgICAgICAgIDxoMj5UaGVyZSB3YXMgYW4gZXJyb3IgdHJ5aW5nIHRvIGxvYWQgeW91ciByYXRpbmcgZm9yIHRoaXMgdGl0bGUuPC9oMj4KICAgICAgICAgICAgICAgICAgICA8cD5Tb21lIHBhcnRzIG9mIHRoaXMgcGFnZSB3b24ndCB3b3JrIHByb3BlcnR5LiBQbGVhc2UgcmVsb2FkIG9yIHRyeSBsYXRlci48L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InZpdGFsIj4gICAgICAgICAgICAgICAgCiAgICAgIDxkaXYgaWQ9InF1aWNrbGlua3NCYXIiIGNsYXNzPSJzdWJuYXYiPgogIDxkaXYgaWQ9InF1aWNrbGlua3NNYWluU2VjdGlvbiI+CiAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvZnVsbGNyZWRpdHM/cmVmXz10dF9xbF8xIgpjbGFzcz0icXVpY2tsaW5rIiA+RlVMTCBDQVNUIEFORCBDUkVXPC9hPiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CiAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvdHJpdmlhP3JlZl89dHRfcWxfMiIKY2xhc3M9InF1aWNrbGluayIgPlRSSVZJQTwvYT4gPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgogICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L3Jldmlld3M/cmVmXz10dF9xbF8zIgpjbGFzcz0icXVpY2tsaW5rIiA+VVNFUiBSRVZJRVdTPC9hPiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CiAgICAgIDxhIGhyZWY9Imh0dHA6Ly9wcm8uaW1kYi5jb20vdGl0bGUvdHQxMzc1NjY2P3JmPWNvbnNfdHRfY29udGFjdCZyZWZfPWNvbnNfdHRfY29udGFjdCIKY2xhc3M9InF1aWNrbGluayIgPklNRGJQcm88L2E+CiAgICAgICAgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJzaG93X21vcmUgcXVpY2tsaW5rIj4KICAgICAgICAgICAgTU9SRTxzcGFuIGNsYXNzPSJ0aXRsZU92ZXJ2aWV3U3ByaXRlIHF1aWNrbGlua3NBcnJvd1VwIj48L3NwYW4+CiAgICAgICAgPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJzaG93X2xlc3MgcXVpY2tsaW5rIiBzdHlsZT0iZGlzcGxheTpub25lIj4KICAgICAgICAgICBMRVNTPHNwYW4gY2xhc3M9InRpdGxlT3ZlcnZpZXdTcHJpdGUgcXVpY2tsaW5rc0Fycm93RG93biI+PC9zcGFuPgogICAgICAgIDwvc3Bhbj4KICA8L2Rpdj4KCiAgICA8c3BhbiBjbGFzcz0idGl0bGVPdmVydmlld1NoYXJlQnV0dG9uIGxhdW5jaC1zaGFyZS1wb3BvdmVyIHF1aWNrbGluayI+U0hBUkU8L3NwYW4+CiAgICA8ZGl2IGlkPSJzaGFyZS1wb3BvdmVyIj4KICAgICAgICA8YSBjbGFzcz0iY2xvc2UtcG9wb3ZlciIgaHJlZj0iIyI+WDwvYT4KICAgICAgICA8aDQ+U2hhcmU8L2g0PgogICAgICAgIAogICAgCiAgICAKICAgIDxhIG9uY2xpY2s9IndpbmRvdy5vcGVuKCZxdW90O2h0dHA6Ly93d3cuZmFjZWJvb2suY29tL3NoYXJlci5waHA/dT1odHRwJTNBJTJGJTJGd3d3LmltZGIuY29tJTJGdGl0bGUlMkZ0dDEzNzU2NjYlMkYlM0ZyZWZfJTNEZXh0X3Nocl9mYl90dCZxdW90OywgJ25ld1dpbmRvdycsICd3aWR0aD02MjYsaGVpZ2h0PTQzNicpOyByZXR1cm4gZmFsc2U7IgogICAgICAgaHJlZj0iaHR0cDovL3d3dy5mYWNlYm9vay5jb20vc2hhcmVyLnBocD91PWh0dHAlM0ElMkYlMkZ3d3cuaW1kYi5jb20lMkZ0aXRsZSUyRnR0MTM3NTY2NiUyRiUzRnJlZl8lM0RleHRfc2hyX2ZiX3R0IgogICAgICAgdGl0bGU9IlNoYXJlIG9uIEZhY2Vib29rIgogICAgICAgY2xhc3M9ImZhY2Vib29rIgogICAgICAgdGFyZ2V0PSJfYmxhbmsiPjxkaXYgY2xhc3M9Im9wdGlvbiBmYWNlYm9vayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGVQYWdlU3ByaXRlIHNoYXJlX2ZhY2Vib29rIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PkZhY2Vib29rPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PjwvYT4KICAgIAogICAgCiAgICA8YSBvbmNsaWNrPSJ3aW5kb3cub3BlbigmcXVvdDtodHRwOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3RleHQ9SW5jZXB0aW9uJTIwKDE2JTIwSnVseSUyMDIwMTAlMjAoVVNBKSklMjAtJTIwaW1kYi5jb20lMkZ0aXRsZSUyRnR0MTM3NTY2NiUyRiUzRnJlZl8lM0RleHRfc2hyX3R3X3R0JnF1b3Q7LCAnbmV3V2luZG93JywgJ3dpZHRoPTgxNSxoZWlnaHQ9NDM2Jyk7IHJldHVybiBmYWxzZTsiCiAgICAgICBocmVmPSJodHRwOi8vdHdpdHRlci5jb20vaW50ZW50L3R3ZWV0P3RleHQ9SW5jZXB0aW9uJTIwKDE2JTIwSnVseSUyMDIwMTAlMjAoVVNBKSklMjAtJTIwaW1kYi5jb20lMkZ0aXRsZSUyRnR0MTM3NTY2NiUyRiUzRnJlZl8lM0RleHRfc2hyX3R3X3R0IgogICAgICAgdGl0bGU9IlNoYXJlIG9uIFR3aXR0ZXIiCiAgICAgICBjbGFzcz0idHdpdHRlciIKICAgICAgIHRhcmdldD0iX2JsYW5rIj48ZGl2IGNsYXNzPSJvcHRpb24gdHdpdHRlciI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGVQYWdlU3ByaXRlIHNoYXJlX3R3aXR0ZXIiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+VHdpdHRlcjwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2E+CiAgICA8YSBocmVmPSJtYWlsdG86P3N1YmplY3Q9SU1EYiUzQSUyMEluY2VwdGlvbiUyMCgxNiUyMEp1bHklMjAyMDEwJTIwKFVTQSkpJmJvZHk9SU1EYiUzQSUyMEluY2VwdGlvbiUyMCgxNiUyMEp1bHklMjAyMDEwJTIwKFVTQSkpJTBBQSUyMHRoaWVmJTJDJTIwd2hvJTIwc3RlYWxzJTIwY29ycG9yYXRlJTIwc2VjcmV0cyUyMHRocm91Z2glMjB1c2UlMjBvZiUyMGRyZWFtLXNoYXJpbmclMjB0ZWNobm9sb2d5JTJDJTIwaXMlMjBnaXZlbiUyMHRoZSUyMGludmVyc2UlMjB0YXNrJTIwb2YlMjBwbGFudGluZyUyMGFuJTIwaWRlYSUyMGludG8lMjB0aGUlMjBtaW5kJTIwb2YlMjBhJTIwQ0VPLiUwQWh0dHAlM0ElMkYlMkZ3d3cuaW1kYi5jb20lMkZ0aXRsZSUyRnR0MTM3NTY2NiUyRiUzRnJlZl8lM0RleHRfc2hyX2VtbF90dCIgCiAgICAgICB0aXRsZT0iU2hhcmUgYnkgZS1tYWlsIgogICAgICAgY2xhc3M9IiI+PGRpdiBjbGFzcz0nb3B0aW9uIGVtYWlsJz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ndGl0bGVQYWdlU3ByaXRlIHNoYXJlX2VtYWlsJz48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPGRpdj5FLW1haWw8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj48L2E+CiAgICAgPGEgaHJlZj0iIyIgY2xhc3M9Im9wZW4tY2hlY2tpbi1wb3BvdmVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJvcHRpb24gY2hlY2tpbiI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ0aXRsZVBhZ2VTcHJpdGUgc2hhcmVfY2hlY2tpbiI+PC9zcGFuPgogICAgICAgICAgICA8ZGl2PkNoZWNrIGluPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgPC9hPiAgICAgCiAgICAgICAgICAgIAogICAgPC9kaXY+CiAgICAKICAgICAgICA8ZGl2IGlkPSJzaGFyZS1jaGVja2luIj4KPGRpdiBjbGFzcz0iYWRkX3RvX2NoZWNraW5zIiBkYXRhLWNvbnN0PSJ0dDEzNzU2NjYiIGRhdGEtbGNuPSJ0aXRsZS1tYWluZGV0YWlscyI+CjxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPjxhIG9uY2xpY2s9JycgY2xhc3M9ImJ0bjIgbGFyZ2UgYnRuMl90ZXh0X29uIGRpc2FibGVkIGNoZWNraW5zX2FjdGlvbl9idG4iPjxzcGFuIGNsYXNzPSJidG4yX2dseXBoIj4wPC9zcGFuPjxzcGFuIGNsYXNzPSJidG4yX3RleHQiPkNoZWNrIGluPC9zcGFuPjwvYT48L3NwYW4+ICAgIDxkaXYgY2xhc3M9InBvcHVwIGNoZWNraW4tZGlhbG9nIj4KICAgICAgICA8YSBjbGFzcz0ic21hbGwgZGlzYWJsZWQgY2xvc2UgYnRuIj5YPC9hPgogICAgICAgIDxzcGFuIGNsYXNzPSJiZXRhIj5CZXRhPC9zcGFuPgogICAgICAgIDxzcGFuIGNsYXNzPSJ0aXRsZSI+SSdtIFdhdGNoaW5nIFRoaXMhPC9zcGFuPgogICAgICAgIDxkaXYgY2xhc3M9ImJvZHkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbmZvIj5LZWVwIHRyYWNrIG9mIGV2ZXJ5dGhpbmcgeW91IHdhdGNoOyB0ZWxsIHlvdXIgZnJpZW5kcy4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNtYWxsIG1lc3NhZ2VfYm94Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiBlcnJvciI+PGgyPkVycm9yPC9oMj4gUGxlYXNlIHRyeSBhZ2FpbiE8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImhpZGRlbiBzdWNjZXNzIj48aDI+QWRkZWQgdG8gWW91ciBDaGVjay1JbnMuPC9oMj4gPGEgaHJlZj0iL2xpc3QvY2hlY2tpbnMiPlZpZXc8L2E+PC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8dGV4dGFyZWEgZGF0YS1tc2c9IkVudGVyIGEgY29tbWVudC4uLiI+PC90ZXh0YXJlYT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2hhcmUiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0ibGFyZ2UgcHJpbWFyeSBidG4iPjxzcGFuPkNoZWNrIGluPC9zcGFuPjwvYnV0dG9uPgo8IS0tCiAgICAgICAgICAgICAgICAgICAgQ2hlY2staW5zIGFyZSBtb3JlIGZ1biB3aGVuPGJyPgogICAgICAgICAgICAgICAgICAgIHlvdSA8YSBocmVmPSIvcmVnaXN0ZXIvc2hhcmluZyI+ZW5hYmxlIEZhY2Vib29rIHNoYXJpbmc8L2E+IQotLT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iMDc3OSI+CjwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbiIgaWQ9ImZ1bGxfc3VibmF2IiBzdHlsZT0iZGlzcGxheTpub25lIj4gICAgICAgICAgIAogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uQ29sdW1uIj4KICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua0dyb3VwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSGVhZGVyIj5ERVRBSUxTPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvZnVsbGNyZWRpdHM/cmVmXz10dF9xbF9kdF8xIgpjbGFzcz0icXVpY2tsaW5rIiA+RnVsbCBDYXN0IGFuZCBDcmV3PC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9yZWxlYXNlaW5mbz9yZWZfPXR0X3FsX2R0XzIiCmNsYXNzPSJxdWlja2xpbmsiID5SZWxlYXNlIERhdGVzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9vZmZpY2lhbHNpdGVzP3JlZl89dHRfcWxfZHRfMyIKY2xhc3M9InF1aWNrbGluayIgPk9mZmljaWFsIFNpdGVzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9idXNpbmVzcz9yZWZfPXR0X3FsX2R0XzQiCmNsYXNzPSJxdWlja2xpbmsiID5Cb3ggT2ZmaWNlL0J1c2luZXNzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9jb21wYW55Y3JlZGl0cz9yZWZfPXR0X3FsX2R0XzUiCmNsYXNzPSJxdWlja2xpbmsiID5Db21wYW55IENyZWRpdHM8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2xvY2F0aW9ucz9yZWZfPXR0X3FsX2R0XzYiCmNsYXNzPSJxdWlja2xpbmsiID5GaWxtaW5nIExvY2F0aW9uczwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvdGVjaG5pY2FsP3JlZl89dHRfcWxfZHRfNyIKY2xhc3M9InF1aWNrbGluayIgPlRlY2huaWNhbCBTcGVjczwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbGl0ZXJhdHVyZT9yZWZfPXR0X3FsX2R0XzgiCmNsYXNzPSJxdWlja2xpbmsgcXVpY2tsaW5rR3JheSIgPkxpdGVyYXR1cmU8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uQ29sdW1uIj4KICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua0dyb3VwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSGVhZGVyIj5TVE9SWUxJTkU8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni90YWdsaW5lcz9yZWZfPXR0X3FsX3N0cnlfMSIKY2xhc3M9InF1aWNrbGluayIgPlRhZ2xpbmVzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9wbG90c3VtbWFyeT9yZWZfPXR0X3FsX3N0cnlfMiIKY2xhc3M9InF1aWNrbGluayIgPlBsb3QgU3VtbWFyeTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvc3lub3BzaXM/cmVmXz10dF9xbF9zdHJ5XzMiCmNsYXNzPSJxdWlja2xpbmsiID5TeW5vcHNpczwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYva2V5d29yZHM/cmVmXz10dF9xbF9zdHJ5XzQiCmNsYXNzPSJxdWlja2xpbmsiID5QbG90IEtleXdvcmRzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9wYXJlbnRhbGd1aWRlP3JlZl89dHRfcWxfc3RyeV81IgpjbGFzcz0icXVpY2tsaW5rIiA+UGFyZW50cyBHdWlkZTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua0dyb3VwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSGVhZGVyIj5SRUxBVEVEIElURU1TPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbmV3cz9yZWZfPXR0X3FsX3JlbF8xIgpjbGFzcz0icXVpY2tsaW5rIiA+TmV3c0Rlc2s8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2V4dGVybmFsc2l0ZXM/cmVmXz10dF9xbF9yZWxfMiIKY2xhc3M9InF1aWNrbGluayIgPkV4dGVybmFsIFNpdGVzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkNvbHVtbiI+CiAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtHcm91cCI+CiAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkhlYWRlciI+T1BJTklPTjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2F3YXJkcz9yZWZfPXR0X3FsX29wXzEiCmNsYXNzPSJxdWlja2xpbmsiID5Bd2FyZHM8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2ZhcT9yZWZfPXR0X3FsX29wXzIiCmNsYXNzPSJxdWlja2xpbmsiID5GQVE8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L3Jldmlld3M/cmVmXz10dF9xbF9vcF8zIgpjbGFzcz0icXVpY2tsaW5rIiA+VXNlciBSZXZpZXdzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9yYXRpbmdzP3JlZl89dHRfcWxfb3BfNCIKY2xhc3M9InF1aWNrbGluayIgPlVzZXIgUmF0aW5nczwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvZXh0ZXJuYWxyZXZpZXdzP3JlZl89dHRfcWxfb3BfNSIKY2xhc3M9InF1aWNrbGluayIgPkV4dGVybmFsIFJldmlld3M8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2NyaXRpY3Jldmlld3M/cmVmXz10dF9xbF9vcF82IgpjbGFzcz0icXVpY2tsaW5rIiA+TWV0YWNyaXRpYyBSZXZpZXdzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9ib2FyZC8/cmVmXz10dF9xbF9vcF83IgpjbGFzcz0icXVpY2tsaW5rIiA+TWVzc2FnZSBCb2FyZDwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua0dyb3VwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSGVhZGVyIj5QSE9UTyAmIFZJREVPPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbWVkaWFpbmRleD9yZWZfPXR0X3FsX3B2XzEiCmNsYXNzPSJxdWlja2xpbmsiID5QaG90byBHYWxsZXJ5PC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni92aWRlb2dhbGxlcnk/cmVmXz10dF9xbF9wdl8yIgpjbGFzcz0icXVpY2tsaW5rIiA+VHJhaWxlcnMgYW5kIFZpZGVvczwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25Db2x1bW4iPgogICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rR3JvdXAiPgogICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25IZWFkZXIiPkRJRCBZT1UgS05PVz88L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni90cml2aWE/cmVmXz10dF9xbF90cnZfMSIKY2xhc3M9InF1aWNrbGluayIgPlRyaXZpYTwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJxdWlja2xpbmtTZWN0aW9uSXRlbSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvZ29vZnM/cmVmXz10dF9xbF90cnZfMiIKY2xhc3M9InF1aWNrbGluayIgPkdvb2ZzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9jcmF6eWNyZWRpdHM/cmVmXz10dF9xbF90cnZfMyIKY2xhc3M9InF1aWNrbGluayIgPkNyYXp5IENyZWRpdHM8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L3F1b3Rlcz9yZWZfPXR0X3FsX3Rydl80IgpjbGFzcz0icXVpY2tsaW5rIiA+UXVvdGVzPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9hbHRlcm5hdGV2ZXJzaW9ucz9yZWZfPXR0X3FsX3Rydl81IgpjbGFzcz0icXVpY2tsaW5rIHF1aWNrbGlua0dyYXkiID5BbHRlcm5hdGUgVmVyc2lvbnM8L2E+ICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icXVpY2tsaW5rU2VjdGlvbkl0ZW0iPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L21vdmllY29ubmVjdGlvbnM/cmVmXz10dF9xbF90cnZfNiIKY2xhc3M9InF1aWNrbGluayIgPkNvbm5lY3Rpb25zPC9hPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InF1aWNrbGlua1NlY3Rpb25JdGVtIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9zb3VuZHRyYWNrP3JlZl89dHRfcWxfdHJ2XzciCmNsYXNzPSJxdWlja2xpbmsiID5Tb3VuZHRyYWNrczwvYT4gICAgICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgPC9kaXY+CiAgIDwvZGl2PgogICAgICA8L2Rpdj4gIAogICAgICAgICAKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InRpdGxlX2Jsb2NrIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0aXRsZV9iYXJfd3JhcHBlciI+CgogICAgPGRpdiBjbGFzcz0icmF0aW5nc193cmFwcGVyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJpbWRiUmF0aW5nIiBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvQWdncmVnYXRlUmF0aW5nIiBpdGVtc2NvcGU9IiIgaXRlbXByb3A9ImFnZ3JlZ2F0ZVJhdGluZyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyYXRpbmdWYWx1ZSI+CjxzdHJvbmcgdGl0bGU9IjguOCBiYXNlZCBvbiAxLDUxMSwyNzIgdXNlciByYXRpbmdzIj48c3BhbiBpdGVtcHJvcD0icmF0aW5nVmFsdWUiPjguODwvc3Bhbj48L3N0cm9uZz48c3BhbiBjbGFzcz0iZ3JleSI+Lzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSIgaXRlbXByb3A9ImJlc3RSYXRpbmciPjEwPC9zcGFuPiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvcmF0aW5ncz9yZWZfPXR0X292X3J0Igo+PHNwYW4gY2xhc3M9InNtYWxsIiBpdGVtcHJvcD0icmF0aW5nQ291bnQiPjEsNTExLDI3Mjwvc3Bhbj48L2E+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaGlkZGVuSW1wb3J0YW50Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJyZXZpZXdDb3VudCI+Miw4MjggdXNlcjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJyZXZpZXdDb3VudCI+NjQ3IGNyaXRpYzwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICA8ZGl2IGlkPSJzdGFyLXJhdGluZy13aWRnZXQiIGNsYXNzPSJzdGFyLXJhdGluZy13aWRnZXQiIGRhdGEtdGNvbnN0PSJ0dDEzNzU2NjYiIGRhdGEtcmF0aW5nPSIwIiBkYXRhLXVzZXI9IiIgZGF0YS1hdXRoPSIiIGRhdGEtdHJhY2tpbmctdGFnPSJ0aXRsZS1tYWluZGV0YWlscyI+CiAgICA8ZGl2IGNsYXNzPSJzdGFyLXJhdGluZy1idXR0b24iPgogICAgICA8YnV0dG9uPgogICAgICAgIDxzcGFuIGNsYXNzPSJzdGFyLXJhdGluZy1zdGFyIG5vLXJhdGluZyI+PC9zcGFuPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3Rhci1yYXRpbmctdGV4dCI+UmF0ZSBUaGlzPC9zcGFuPgogICAgICA8L2J1dHRvbj4KICAgIDwvZGl2PgogIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJ0aXRsZUJhciI+CiAgICAgICAgPGRpdiBjbGFzcz0icHJpbWFyeV9yaWJib24iPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyaWJib25pemUiIGRhdGEtdGNvbnN0PSJ0dDEzNzU2NjYiIGRhdGEtY2FsbGVyLW5hbWU9InRpdGxlIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2Ryb3Bkb3duX2J0biIgZGF0YS10Y29uc3Q9InR0MTM3NTY2NiIgZGF0YS1zaXplPSJsYXJnZSIgZGF0YS1jYWxsZXItbmFtZT0idGl0bGUiIGRhdGEtdHlwZT0icHJpbWFyeSI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9kcm9wZG93bl9saXN0IiBzdHlsZT0iZGlzcGxheTpub25lIj48L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgPGRpdiBjbGFzcz0idGl0bGVfd3JhcHBlciI+CjxoMSBpdGVtcHJvcD0ibmFtZSIgY2xhc3M9IiI+SW5jZXB0aW9uJm5ic3A7PHNwYW4gaWQ9InRpdGxlWWVhciI+KDxhIGhyZWY9Ii95ZWFyLzIwMTAvP3JlZl89dHRfb3ZfaW5mIgo+MjAxMDwvYT4pPC9zcGFuPiAgICAgICAgICAgIDwvaDE+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1YnRleHQiPgogICAgICAgICAgICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJjb250ZW50UmF0aW5nIiBjb250ZW50PSJQRy0xMyI+UEctMTMKPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAgICAgICAgICAgICAgICAgICAgPHRpbWUgaXRlbXByb3A9ImR1cmF0aW9uIiBkYXRldGltZT0iUFQxNDhNIj4KICAgICAgICAgICAgICAgICAgICAgICAgMmggMjhtaW4KICAgICAgICAgICAgICAgICAgICA8L3RpbWU+CjxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4KPGEgaHJlZj0iL2dlbnJlL0FjdGlvbj9yZWZfPXR0X292X2luZiIKPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImdlbnJlIj5BY3Rpb248L3NwYW4+PC9hPiwgCjxhIGhyZWY9Ii9nZW5yZS9BZHZlbnR1cmU/cmVmXz10dF9vdl9pbmYiCj48c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJnZW5yZSI+QWR2ZW50dXJlPC9zcGFuPjwvYT4sIAo8YSBocmVmPSIvZ2VucmUvU2NpLUZpP3JlZl89dHRfb3ZfaW5mIgo+PHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iZ2VucmUiPlNjaS1GaTwvc3Bhbj48L2E+CjxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9yZWxlYXNlaW5mbz9yZWZfPXR0X292X2luZiIKdGl0bGU9IlNlZSBtb3JlIHJlbGVhc2UgZGF0ZXMiID4xNiBKdWx5IDIwMTAgKFVTQSkKPG1ldGEgaXRlbXByb3A9ImRhdGVQdWJsaXNoZWQiIGNvbnRlbnQ9IjIwMTAtMDctMTYiIC8+CjwvYT4gICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CgoKCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzbGF0ZV93cmFwcGVyIj4KICAgIDxkaXYgY2xhc3M9InBvc3RlciI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbWVkaWF2aWV3ZXIvcm0zNDI2NjUxMzkyP3JlZl89dHRfb3ZfaSIKPiA8aW1nIGFsdD0iSW5jZXB0aW9uIFBvc3RlciIgdGl0bGU9IkluY2VwdGlvbiBQb3N0ZXIiCnNyYz0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakF4TXpZM05qY3hORjVCTWw1QmFuQm5Ya0Z0WlRjd05USTVPVE0wTXdAQC5fVjFfVVgxODJfQ1IwLDAsMTgyLDI2OF9BTF8uanBnIgppdGVtcHJvcD0iaW1hZ2UiIC8+CjwvYT4gICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJzbGF0ZSI+CjxhIGhyZWY9Ii92aWRlby9pbWRiL3ZpNDIxOTQ3MTM4NT9wbGF5bGlzdElkPXR0MTM3NTY2NiZyZWZfPXR0X292X3ZpIgpjbGFzcz0ic2xhdGVfYnV0dG9uIHByZXZlbnQtYWQtb3ZlcmxheSB2aWRlby1tb2RhbCIgZGF0YS10eXBlPSdyZWNvbW1lbmRzJyBkYXRhLXRjb25zdD0ndHQxMzc1NjY2JyBkYXRhLXZpZGVvPSd2aTQyMTk0NzEzODUnIGRhdGEtY29udGV4dD0naW1kYicgaXRlbXByb3A9J3RyYWlsZXInIGRhdGEtcmVmc3VmZml4PSd0dF9vdl92aScgZGF0YS1waXhlbHM9Jyc+IDxpbWcgYWx0PSJUcmFpbGVyIgp0aXRsZT0iVHJhaWxlciIKc3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL00vTVY1Qk1qSTJOREkzTlRBNE0xNUJNbDVCYW5CblhrRnRaVGd3TURRNU5qWXpNekVALl9WMV9DUjE2NywwLDk0Niw1MzJfQUxfVVkyNjhfQ1I4NCwwLDQ3NywyNjhfQUxfLmpwZyIKaXRlbXByb3A9ImltYWdlIiAvPgo8ZGl2IGNsYXNzPSJzbGF0ZV9mYWRlX3RvcCI+PC9kaXY+CjxkaXYgY2xhc3M9InNsYXRlX2ZhZGVfYm90dG9tIj48L2Rpdj4KPC9hPiAgICAgICAgPGRpdiBjbGFzcz0iY2FwdGlvbiI+IAogICAgICAgICAgICA8ZGl2IHN0eWxlPSJmbG9hdDogbGVmdDsiPjI6MDMgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiBUcmFpbGVyPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IHN0eWxlPSJmbG9hdDogcmlnaHQ7Ij4gICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvdmlkZW9nYWxsZXJ5P3JlZl89dHRfb3Zfdmlfc20iCj4xNyBWSURFT1M8L2E+CjxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbWVkaWFpbmRleD9yZWZfPXR0X292X21pX3NtIgo+MjE1IElNQUdFUzwvYT4KPC9kaXY+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9ImNsZWFyOiBib3RoOyI+PC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CgogICAgCiAgICAKICAgICAgICA8YSBuYW1lPSJzbG90X2NlbnRlci0yIj48L2E+CiAgICAgICAgCiAgICAgICAgCiAgICAKICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAKICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPmlmKHR5cGVvZiB1ZXQgPT09ICdmdW5jdGlvbicpe3VldCgnYmInLCdUaXRsZVdhdGNoQmFyJyx7d2I6MX0pO308L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgCiAgICAKICAgICAgICA8c3BhbiBjbGFzcz0iYWJfd2lkZ2V0Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndhdGNoYmFyMiBhcnRpY2xlIj4KICAgIDxkaXYgY2xhc3M9InNob3d0aW1lICBmdWxsLXRhYmxlIj4KICAgICAgICA8ZGl2IGNsYXNzPSJ3aW5uZXItb3B0aW9uIHdhdGNoLW9wdGlvbiAiIAogICAgICAgICAgICAgICAgICAgIGRhdGEtb2Zmc2l0ZT0iMSIgCiAgICAgICAgICAgICAgICAgICAgZGF0YS1ocmVmPSIvb2Zmc2l0ZS8/cGZfcmRfbT1BMkZHRUxVVU5PUUpOTCZwZl9yZF9wPTI0MjU0MjIzNDImcGZfcmRfcj0wUTM1SFZIMTBNWUQyTVhWSEpTSCZwZl9yZF9zPWNlbnRlci0yJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDEzNzU2NjYmcGFnZS1hY3Rpb249d2F0Y2gtYWl2JnRva2VuPUJDWWtyenp6QmlkOElMemk1Q2wxME81ZWJCMTNpb0F3ZHd4VVVXQ2I2QVBsazVpODVYWnVQWFIyMFl6UEh2dWtlT3V6OWdOdzdXdGQlMEQlMEFEMU80d2F2XzN6aFBOZjBtRWNnSDJqTnRqYndoVGhJd09GVHdvUjItcEk1M3FUMzJ3SjF0LWJtOHRiWnFnSi00V3BWMGZZR005RnRYJTBEJTBBMmx5TTNPT29Wd2UzNG9iNTZSVnlTRnpyR2N5azhITUl2QUhtbUJjV3JpVmVLeHRBNzZ4TS1GNTNHYWYzYkkza2xKRGlNSkIwY3Y0NCUwRCUwQXJxOUZmd05yOWc2RUNpN1ZZZWl6SjhOOU5iNmpNdDVWJTBEJTBBJnJlZl89dHRfd2JyX2FpdiIgCiAgICAgICAgICAgICAgICAgICAgdGl0bGU9IldhdGNoIE5vdyI+CiAgICAgICAgICAgIDxkaXYgaWQ9IndhdGNoYmFyMiIgY2xhc3M9IndhdGNoLWljb24gd2lubmVyIHByb3ZpZGVyIGFtYXpvbi1pbnN0YW50LXZpZGVvIj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImluZm8gdGFibGUtY2VsbCI+CiAgICAgICAgICAgICAgICA8aDI+CjxhIGhyZWY9Ii9vZmZzaXRlLz9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MjQyNTQyMjM0MiZwZl9yZF9yPTBRMzVIVkgxME1ZRDJNWFZISlNIJnBmX3JkX3M9Y2VudGVyLTImcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MTM3NTY2NiZwYWdlLWFjdGlvbj13YXRjaC1haXYmdG9rZW49QkNZa3J6enpCaWQ4SUx6aTVDbDEwTzVlYkIxM2lvQXdkd3hVVVdDYjZBUGxrNWk4NVhadVBYUjIwWXpQSHZ1a2VPdXo5Z053N1d0ZCUwRCUwQUQxTzR3YXZfM3poUE5mMG1FY2dIMmpOdGpid2hUaEl3T0ZUd29SMi1wSTUzcVQzMndKMXQtYm04dGJacWdKLTRXcFYwZllHTTlGdFglMEQlMEEybHlNM09Pb1Z3ZTM0b2I1NlJWeVNGenJHY3lrOEhNSXZBSG1tQmNXcmlWZUt4dEE3NnhNLUY1M0dhZjNiSTNrbEpEaU1KQjBjdjQ0JTBEJTBBcnE5RmZ3TnI5ZzZFQ2k3VlllaXpKOE45TmI2ak10NVYlMEQlMEEmcmVmXz10dF93YnJfYWl2IgpjbGFzcz0ic2VnbWVudC1saW5rICIgdGFyZ2V0PSJfYmxhbmsiPiBXYXRjaCBOb3cKPC9hPiAgICAgICAgICAgICAgICA8L2gyPgogICAgICAgICAgICAgICAgPHA+CgogICAgICAgICAgICBGcm9tICQyLjk5IChTRCkgb24KQW1hem9uIFZpZGVvICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgdmFyIHhtbGh0dHAgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTsKICAgICAgICB4bWxodHRwLm9wZW4oIlBPU1QiLCIvdHIvIix0cnVlKTsKICAgICAgICB4bWxodHRwLnNldFJlcXVlc3RIZWFkZXIoIkNvbnRlbnQtdHlwZSIsImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCIpOwogICAgICAgIHhtbGh0dHAuc2VuZCgicmVmXz10dF93YnJfYWl2JnB0PXRpdGxlJnNwdD1tYWluJnBhZ2VBY3Rpb249c2hvd2luZy1haXYmaHQ9YWN0aW9uT25seSIpOwogICAgPC9zY3JpcHQ+CiAgICAgICAgICAgIDxkaXYgdGl0bGU9Ik9uIFRWIiBjbGFzcz0id2F0Y2gtb3B0aW9uIHNlY29uZGFyeS13YXRjaC1vcHRpb24gIiBkYXRhLWhyZWY9Ii90aXRsZS90dDEzNzU2NjYvdHZzY2hlZHVsZT9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MjQyNTQyMjM0MiZwZl9yZF9yPTBRMzVIVkgxME1ZRDJNWFZISlNIJnBmX3JkX3M9Y2VudGVyLTImcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MTM3NTY2NiZyZWZfPXR0X3dicl90diIgZGF0YS1vcHRpb250eXBlPSJ0diI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3YXRjaC1pY29uIHR2Ij48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY29uZGFyeS1pbmZvIj5PTiZuYnNwO1RWPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IHRpdGxlPSJPbiBEaXNjIiBjbGFzcz0id2F0Y2gtb3B0aW9uIHNlY29uZGFyeS13YXRjaC1vcHRpb24gIiBkYXRhLWhyZWY9Ii9vZmZzaXRlLz9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MjQyNTQyMjM0MiZwZl9yZF9yPTBRMzVIVkgxME1ZRDJNWFZISlNIJnBmX3JkX3M9Y2VudGVyLTImcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MTM3NTY2NiZwYWdlLWFjdGlvbj13YXRjaC1hbWF6b24mdG9rZW49QkNZbzdnOEZYamVaSkpLWVVXMWVyOEROTWVBSnJXSENWTGVIMTNKVjMzTm85VlJ4NGFNZUtpdFkzYTM2R2tzYVZrbUU5Tk52TU9pOSUwRCUwQTFFaW56YmxWV2tWbDd5VWQ5VGNuSmlLVWphVkpuamRiQXZKaEN2VnRjS0R6SGNGNUdZd05vOU4yeF9MenF2LWczdnExN21kRXJhRUolMEQlMEFyejA1Qjh3cEVLQ2RSOU90M0p6QzZMRzE3TnlpdVpLY0l1T1NuWFY2REpxazYzMGlJazFFWlVQR0FJVTFUdmx5WG1zRHN0SVhoZDNkJTBEJTBBM0dyTkZwT0tiWUx4MXZkdTlVc3NJM29Ca3JCa0JHRnUlMEQlMEEmcmVmXz10dF93YnJfYW1hem9uIiBkYXRhLW9wdGlvbnR5cGU9InBoeXNpY2FsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndhdGNoLWljb24gcGh5c2ljYWwiPjwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ic2Vjb25kYXJ5LWluZm8iPk9OJm5ic3A7RElTQzwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IHRpdGxlPSJBbGwgV2F0Y2ggT3B0aW9ucyIgY2xhc3M9IndhdGNoLW9wdGlvbiBzZWNvbmRhcnktd2F0Y2gtb3B0aW9uIGhhcy13YXRjaG9wdGlvbnMiIGRhdGEtaHJlZj0iL3dhdGNoL19hamF4L2JveC90dDEzNzU2NjY/cGZfcmRfbT1BMkZHRUxVVU5PUUpOTCZwZl9yZF9wPTI0MjU0MjIzNDImcGZfcmRfcj0wUTM1SFZIMTBNWUQyTVhWSEpTSCZwZl9yZF9zPWNlbnRlci0yJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDEzNzU2NjYmcmVmXz10dF93YnJfc20jd2F0Y2hvcHRpb25zIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndhdGNoLWljb24gYWxsIj48L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY29uZGFyeS1pbmZvIj5BTEw8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvc3Bhbj4KCgoKICAgICAgICAgICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgogICAgICAgICAgICAgICAgaWYodHlwZW9mIHVleCA9PT0gJ2Z1bmN0aW9uJyl7dWV4KCdsZCcsJ1RpdGxlV2F0Y2hCYXInLHt3YjoxfSk7fQogICAgICAgICAgICA8L3NjcmlwdD4KICAgICAgICAKCgoKCiAgICAgICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InBsb3Rfc3VtbWFyeV93cmFwcGVyIj4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlUGxvdEFuZENyZWRpdFN1bW1hcnlXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgPGRpdiBjbGFzcz0icGxvdF9zdW1tYXJ5ICI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InN1bW1hcnlfdGV4dCIgaXRlbXByb3A9ImRlc2NyaXB0aW9uIj4KICAgICAgICAgICAgICAgICAgICBBIHRoaWVmLCB3aG8gc3RlYWxzIGNvcnBvcmF0ZSBzZWNyZXRzIHRocm91Z2ggdXNlIG9mIGRyZWFtLXNoYXJpbmcgdGVjaG5vbG9neSwgaXMgZ2l2ZW4gdGhlIGludmVyc2UgdGFzayBvZiBwbGFudGluZyBhbiBpZGVhIGludG8gdGhlIG1pbmQgb2YgYSBDRU8uCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIAogICAgPGRpdiBjbGFzcz0iY3JlZGl0X3N1bW1hcnlfaXRlbSI+CiAgICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPkRpcmVjdG9yOjwvaDQ+CiAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJkaXJlY3RvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTA2MzQyNDA/cmVmXz10dF9vdl9kciIKaXRlbXByb3A9J3VybCc+PHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+Q2hyaXN0b3BoZXIgTm9sYW48L3NwYW4+PC9hPiAgICAgICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY3JlZGl0X3N1bW1hcnlfaXRlbSI+CiAgICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPldyaXRlcjo8L2g0PgogICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iY3JlYXRvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTA2MzQyNDA/cmVmXz10dF9vdl93ciIKaXRlbXByb3A9J3VybCc+PHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+Q2hyaXN0b3BoZXIgTm9sYW48L3NwYW4+PC9hPiAgICAgICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0iY3JlZGl0X3N1bW1hcnlfaXRlbSI+CiAgICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPlN0YXJzOjwvaDQ+CiAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJhY3RvcnMiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAwMTM4P3JlZl89dHRfb3Zfc3Rfc20iCml0ZW1wcm9wPSd1cmwnPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPkxlb25hcmRvIERpQ2FwcmlvPC9zcGFuPjwvYT4sICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImFjdG9ycyIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTAzMzA2ODc/cmVmXz10dF9vdl9zdF9zbSIKaXRlbXByb3A9J3VybCc+PHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+Sm9zZXBoIEdvcmRvbi1MZXZpdHQ8L3NwYW4+PC9hPiwgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iYWN0b3JzIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDY4MDk4Mz9yZWZfPXR0X292X3N0X3NtIgppdGVtcHJvcD0ndXJsJz48c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5FbGxlbiBQYWdlPC9zcGFuPjwvYT4gICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4KPGEgaHJlZj0iZnVsbGNyZWRpdHM/cmVmXz10dF9vdl9zdF9zbSIKPlNlZSBmdWxsIGNhc3QgJiBjcmV3PC9hPiZuYnNwOyZyYXF1bzsKICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZVBsb3RBbmRDcmVkaXRTdW1tYXJ5V2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZVJldmlld3NBbmRQb3B1bGFyaXR5V2lkZ2V0X3N0YXJ0ZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KICAgICAgPGRpdiBjbGFzcz0idGl0bGVSZXZpZXdCYXIgIj4gICAgICAgICAgIAogICAgPGRpdiBjbGFzcz0idGl0bGVSZXZpZXdCYXJJdGVtIj4KPGEgaHJlZj0iY3JpdGljcmV2aWV3cz9yZWZfPXR0X292X3J0Igo+IDxkaXYgY2xhc3M9Im1ldGFjcml0aWNTY29yZSBzY29yZV9mYXZvcmFibGUgdGl0bGVSZXZpZXdCYXJTdWJJdGVtIj4KPHNwYW4+NzQ8L3NwYW4+CjwvZGl2PjwvYT4gICAgICAgIDxkaXYgY2xhc3M9InRpdGxlUmV2aWV3QmFyU3ViSXRlbSI+CiAgICAgICAgICAgIDxkaXY+PGEgaHJlZj0iY3JpdGljcmV2aWV3cz9yZWZfPXR0X292X3J0Igo+Ck1ldGFzY29yZQo8L2E+ICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXY+PHNwYW4gY2xhc3M9InN1YlRleHQiPiAKICAgICAgICAgICAgICAgRnJvbSA8YSBocmVmPSJodHRwOi8vd3d3Lm1ldGFjcml0aWMuY29tIgp0YXJnZXQ9J19ibGFuayc+bWV0YWNyaXRpYy5jb208L2E+IAogICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkaXZpZGVyIj48L2Rpdj4KICAgICAgICAgICAKICAgIDxkaXYgY2xhc3M9InRpdGxlUmV2aWV3QmFySXRlbSB0aXRsZVJldmlld2Jhckl0ZW1Cb3JkZXIiPgogICAgICAgIDxkaXY+CiAgICAgICAgUmV2aWV3cwogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdWJUZXh0Ij4KICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9InJldmlld3M/cmVmXz10dF9vdl9ydCIKPjIsODI4IHVzZXI8L2E+ICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnaG9zdFRleHQiPnw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICA8YSBocmVmPSJleHRlcm5hbHJldmlld3M/cmVmXz10dF9vdl9ydCIKPjY0NyBjcml0aWM8L2E+CiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRpdmlkZXIiPjwvZGl2PgoKICAgIDxkaXYgY2xhc3M9InRpdGxlUmV2aWV3QmFySXRlbSI+CiAgPGRpdiBjbGFzcz0idGl0bGVPdmVydmlld1Nwcml0ZSBwb3B1bGFyaXR5VHJlbmRVcCI+PC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0idGl0bGVSZXZpZXdCYXJTdWJJdGVtIj4KICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgUG9wdWxhcml0eQogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzdWJUZXh0Ij4KICAgICAgICAgICAgICAgICAgICAxNDkKICAgICAgKDxzcGFuIGNsYXNzPSJ0aXRsZU92ZXJ2aWV3U3ByaXRlIHBvcHVsYXJpdHlJbWFnZVVwIj48L3NwYW4+IDxzcGFuIGNsYXNzPSJwb3B1bGFyaXR5VXBPckZsYXQiPjEyPC9zcGFuPikKICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgIDwvZGl2PgogICAgICA8L2Rpdj4gICAgICAgICAgICAgIAogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVSZXZpZXdzQW5kUG9wdWxhcml0eVdpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZU92ZXJ2aWV3V2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICAgICAgICAgIDwvZGl2PiAKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYWYiKTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9hdGZfbWFpbicpOwogICAgfQogIDwvc2NyaXB0PgoKICAgIDwvZGl2PiAKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiY2YiKTsKICAgIH0KPC9zY3JpcHQ+CgoKICAgIDxkaXYgaWQ9InNpZGViYXIiPgoKCQoJPCEtLSBiZWdpbiBUT1BfUkhTIC0tPgo8ZGl2IGlkPSJ0b3BfcmhzX3dyYXBwZXIiIGNsYXNzPSJkZnBfc2xvdCI+CjxzY3JpcHQ+CndpbmRvdy5nZW5lcmljID0gd2luZG93LmdlbmVyaWMgfHwge307CmdlbmVyaWMuYWxwaGFsZmFDb21wb25lbnRzID0gewoiYWxwaGFsZmEtY29udGFpbmVyLmh0bWwiIDogImh0dHBzOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYmFkcy9hbHBoYWxmYS1jb250YWluZXItMjUzMTUwMzMwLl9UVERfIiwKImpzL2NvbGxlY3Rpb25zL2FscGhhbGZhLmpzIiA6ICJodHRwczovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGJhZHMvanMvY29sbGVjdGlvbnMvYWxwaGFsZmEtMzI5Mjc0NzA5MC5fVFREXyIKfTsKPC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KZG9XaXRoQWRzKGZ1bmN0aW9uKCl7CmFkX3V0aWxzLnJlZ2lzdGVyX2FkKCd0b3BfcmhzJyk7Cn0pOwo8L3NjcmlwdD4KPGlmcmFtZSBkYXRhLWRhcnQtcGFyYW1zPSIjaW1kYjIuY29uc3VtZXIudGl0bGUvbWFpbmRldGFpbHM7IVRJTEUhO3N6PTMwMHgyNTAsMzAweDYwMCwzMDB4MzAwLDExeDE7cD10cjtnPWFjO2c9YWQ7Zz1zZjtnPWJhYTtnPXRoO3R0PWY7bT1QRzEzO21oPVBHMTM7bWw9UEcxMztjb289dXM7Y29vPWdiO2I9dDI1O2I9dDI1MDtiPXQyNTBhO2I9Z2xic3Q7Yj1sb29wO2Z2PTE7aWQ9dHQxMzc1NjY2O2FiPWU7YnB4PTI7bWQ9dHQxMzc1NjY2O2M9MTtvZT11dGYtODtbQ0xJRU5UX1NJREVfS0VZVkFMVUVTXTt1PTk5MTcyNzAxMDEyOTtvcmQ9OTkxNzI3MDEwMTI5PyIgaWQ9InRvcF9yaHMiIG5hbWU9InRvcF9yaHMiIGNsYXNzPSJ5ZXNTY3JpcHQiIHdpZHRoPSIzMDAiIGhlaWdodD0iMjUwIiBkYXRhLW9yaWdpbmFsLXdpZHRoPSIzMDAiIGRhdGEtb3JpZ2luYWwtaGVpZ2h0PSIyNTAiIGRhdGEtY29uZmlnLXdpZHRoPSIzMDAiIGRhdGEtY29uZmlnLWhlaWdodD0iMjUwIiBkYXRhLWNvb2tpZS13aWR0aD0ibnVsbCIgZGF0YS1jb29raWUtaGVpZ2h0PSJudWxsIiBtYXJnaW53aWR0aD0iMCIgbWFyZ2luaGVpZ2h0PSIwIiBmcmFtZWJvcmRlcj0iMCIgc2Nyb2xsaW5nPSJubyIgYWxsb3d0cmFuc3BhcmVuY3k9InRydWUiIG9ubG9hZD0iZG9XaXRoQWRzLmNhbGwodGhpcywgZnVuY3Rpb24oKXsgYWRfdXRpbHMub25fYWRfbG9hZCh0aGlzKTsgfSk7Ij48L2lmcmFtZT4KPG5vc2NyaXB0PiA8YSBocmVmPSJodHRwOi8vcHViYWRzLmcuZG91YmxlY2xpY2submV0L2dhbXBhZC9qdW1wPyZpdT00MjE1L2ltZGIyLmNvbnN1bWVyLnRpdGxlL21haW5kZXRhaWxzJnN6PTMwMHgyNTB8MzAweDYwMHwzMDB4MzAwfDExeDEmdD1wJTNEdHIlMjZnJTNEYWMlMjZnJTNEYWQlMjZnJTNEc2YlMjZnJTNEYmFhJTI2ZyUzRHRoJTI2dHQlM0RmJTI2bSUzRFBHMTMlMjZtaCUzRFBHMTMlMjZtbCUzRFBHMTMlMjZjb28lM0R1cyUyNmNvbyUzRGdiJTI2YiUzRHQyNSUyNmIlM0R0MjUwJTI2YiUzRHQyNTBhJTI2YiUzRGdsYnN0JTI2YiUzRGxvb3AlMjZmdiUzRDElMjZpZCUzRHR0MTM3NTY2NiUyNmFiJTNEZSUyNmJweCUzRDIlMjZtZCUzRHR0MTM3NTY2NiUyNmMlM0QxJnRpbGU9MSZjPTk5MTcyNzAxMDEyOSIgdGFyZ2V0PSJfYmxhbmsiPiA8aW1nIHNyYz0iaHR0cDovL3B1YmFkcy5nLmRvdWJsZWNsaWNrLm5ldC9nYW1wYWQvYWQ/Jml1PTQyMTUvaW1kYjIuY29uc3VtZXIudGl0bGUvbWFpbmRldGFpbHMmc3o9MzAweDI1MHwzMDB4NjAwfDMwMHgzMDB8MTF4MSZ0PXAlM0R0ciUyNmclM0RhYyUyNmclM0RhZCUyNmclM0RzZiUyNmclM0RiYWElMjZnJTNEdGglMjZ0dCUzRGYlMjZtJTNEUEcxMyUyNm1oJTNEUEcxMyUyNm1sJTNEUEcxMyUyNmNvbyUzRHVzJTI2Y29vJTNEZ2IlMjZiJTNEdDI1JTI2YiUzRHQyNTAlMjZiJTNEdDI1MGElMjZiJTNEZ2xic3QlMjZiJTNEbG9vcCUyNmZ2JTNEMSUyNmlkJTNEdHQxMzc1NjY2JTI2YWIlM0RlJTI2YnB4JTNEMiUyNm1kJTNEdHQxMzc1NjY2JTI2YyUzRDEmdGlsZT0xJmM9OTkxNzI3MDEwMTI5IiBib3JkZXI9IjAiIGFsdD0iYWR2ZXJ0aXNlbWVudCIgLz4gPC9hPiA8L25vc2NyaXB0Pgo8L2Rpdj4KPGRpdiBpZD0idG9wX3Joc19yZWZsb3dfaGVscGVyIj48L2Rpdj4KPGRpdiBpZD0idG9wX3Joc19hZnRlciIgY2xhc3M9ImFmdGVyX2FkIiBzdHlsZT0idmlzaWJpbGl0eTpoaWRkZW47Ij4KPGEgY2xhc3M9Inllc1NjcmlwdCIgaHJlZj0iIyIgb25jbGljaz0iYWRfdXRpbHMuc2hvd19hZF9mZWVkYmFjaygndG9wX3JocycpO3JldHVybiBmYWxzZTsiIGlkPSJhZF9mZWVkYmFja190b3BfcmhzIj5hZCBmZWVkYmFjazwvYT4KPC9kaXY+CjxzY3JpcHQ+CmRvV2l0aEFkcyhmdW5jdGlvbigpewphZF91dGlscy5ncHQucmVuZGVyX2FkKCd0b3BfcmhzJyk7Cn0sICJhZF91dGlscyBub3QgZGVmaW5lZCwgdW5hYmxlIHRvIHJlbmRlciBjbGllbnQtc2lkZSBHUFQgYWQuIik7Cjwvc2NyaXB0Pgo8IS0tIEVuZCBUT1BfUkhTIC0tPgoJCiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9hdGZfc2lkZWJhcicpOwogICAgfQogIDwvc2NyaXB0PgoKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKCgoKICAgIAogICAgCiAgICAgICAgPGEgbmFtZT0ic2xvdF9yaWdodC0zIj48L2E+CiAgICAgICAgPGRpdiBjbGFzcz0ibWluaS1hcnRpY2xlIj4KICAgICAgICAKICAgIAogICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoKICAgIAogICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+aWYodHlwZW9mIHVldCA9PT0gJ2Z1bmN0aW9uJyl7dWV0KCdiYicsJ05pbmphV2lkZ2V0Jyx7d2I6MX0pO308L3NjcmlwdD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKCiAgICAgICAgICAgICAgICAgICAgCiAgICAKICAgICAgICA8c3BhbiBjbGFzcz0iYWJfd2lkZ2V0Ij4KICAgICAgICAKICAgIAoKICAgIDxkaXYgY2xhc3M9ImFiX25pbmphIj4KPHNwYW4gY2xhc3M9IndpZGdldF9oZWFkZXIiPiA8c3BhbiBjbGFzcz0ib25lbGluZSI+IDxhIGhyZWY9Ii9pbWRicGlja3MvP3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0yNzIyNzIwMDAyJnBmX3JkX3I9MFEzNUhWSDEwTVlEMk1YVkhKU0gmcGZfcmRfcz1yaWdodC0zJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDEzNzU2NjYmcmVmXz10dF9lY3dub3Zwa3NfaGQiID4gPGgzPklNRGIgUGlja3M8L2gzPiA8L2E+IDwvc3Bhbj4gPC9zcGFuPiA8ZGl2IGNsYXNzPSJ3aWRnZXRfY29udGVudCBub19pbmxpbmVfYmx1cmIiPiA8ZGl2IGNsYXNzPSJ3aWRnZXRfbmVzdGVkIj4gPGRpdiBjbGFzcz0ibmluamFfaW1hZ2VfcGFjayI+IDxkaXYgY2xhc3M9Im5pbmphX2NlbnRlciI+IDxkaXYgY2xhc3M9Im5pbmphX2ltYWdlIGZpcnN0X2ltYWdlIGxhc3RfaW1hZ2UiIHN0eWxlPSJ3aWR0aDozMDdweDtoZWlnaHQ6YXV0bzsiID4gPGRpdiBzdHlsZT0id2lkdGg6MzA3cHg7aGVpZ2h0OmF1dG87bWFyZ2luOjAgYXV0bzsiPiA8ZGl2IGNsYXNzPSJ3aWRnZXRfaW1hZ2UiPiA8ZGl2IGNsYXNzPSJpbWFnZSI+IDxhIGhyZWY9Ii9pbWRicGlja3MvP3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0yNzIyNzIwMDAyJnBmX3JkX3I9MFEzNUhWSDEwTVlEMk1YVkhKU0gmcGZfcmRfcz1yaWdodC0zJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDEzNzU2NjYmcmVmXz10dF9lY3dub3Zwa3NfaV8xIiA+IDxpbWcgaXRlbXByb3A9ImltYWdlIiBjbGFzcz0icHJpX2ltYWdlIiBzcmM9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRVeU5qa3hPVGs1TlY1Qk1sNUJhbkJuWGtGdFpUZ3dPREF4TVRjMU9ERUAuX0NSMTM2OSw2NSwxNjgzLDEyNjFfVVg2MTRfVVk0NjAuX1NZMjMwX1NYMzA3X0FMXy5qcGciIGRhdGEtc3JjLXgyPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UVXlOamt4T1RrNU5WNUJNbDVCYW5CblhrRnRaVGd3T0RBeE1UYzFPREVALl9DUjEzNjksNjUsMTY4MywxMjYxX1VYNjE0X1VZNDYwLl9TWTIzMF9TWDMwN19BTF9VWTQ2MF9VWDYxNF9BTF8uanBnIiAvPiA8L2E+IDxkaXYgY2xhc3M9IndpZGdldF9jYXB0aW9uIGNhcHRpb25fb3ZlcmxheSI+IDxkaXYgY2xhc3M9InByaW1hcnkiPiA8ZGl2IGNsYXNzPSJvbm92ZXJmbG93Ij4gPGEgaHJlZj0iL2ltZGJwaWNrcy8/cGZfcmRfbT1BMkZHRUxVVU5PUUpOTCZwZl9yZF9wPTI3MjI3MjAwMDImcGZfcmRfcj0wUTM1SFZIMTBNWUQyTVhWSEpTSCZwZl9yZF9zPXJpZ2h0LTMmcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MTM3NTY2NiZyZWZfPXR0X2Vjd25vdnBrc19jYXBfcHJpXzEiID4gPGk+Um9ndWUgT25lOiBBIFN0YXIgV2FycyBTdG9yeTwvaT4gPC9hPiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDxwIGNsYXNzPSJibHVyYiI+T2YgY291cnNlIDxhIGhyZWY9Ii90aXRsZS90dDM3NDg1MjgvP3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0yNzIyNzIwMDAyJnBmX3JkX3I9MFEzNUhWSDEwTVlEMk1YVkhKU0gmcGZfcmRfcz1yaWdodC0zJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDEzNzU2NjYmcmVmXz10dF9lY3dub3Zwa3NfbGsxIj48aT5Sb2d1ZSBPbmU6IEEgU3RhciBXYXJzIFN0b3J5PC9pPjwvYT4gaXMgb24gb3VyIHJhZGFyIHRoaXMgbW9udGguIFNlZSB3aGljaCBvdGhlciBtb3ZpZXMgYW5kIFRWIHNob3dzIHdlJ3JlIGV4Y2l0ZWQgYWJvdXQgaW4gPGEgaHJlZj0iL2ltZGJwaWNrcy8/cGZfcmRfbT1BMkZHRUxVVU5PUUpOTCZwZl9yZF9wPTI3MjI3MjAwMDImcGZfcmRfcj0wUTM1SFZIMTBNWUQyTVhWSEpTSCZwZl9yZF9zPXJpZ2h0LTMmcGZfcmRfdD0xNTAyMSZwZl9yZF9pPXR0MTM3NTY2NiZyZWZfPXR0X2Vjd25vdnBrc19sazIiPklNRGIgUGlja3M8L2E+LjwvcD4gPHAgY2xhc3M9InNlZW1vcmUiPjxhIGhyZWY9Ii9pbWRicGlja3MvP3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0yNzIyNzIwMDAyJnBmX3JkX3I9MFEzNUhWSDEwTVlEMk1YVkhKU0gmcGZfcmRfcz1yaWdodC0zJnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDEzNzU2NjYmcmVmXz10dF9lY3dub3Zwa3Nfc20iIGNsYXNzPSJwb3NpdGlvbl9ib3R0b20gc3VwcGxlbWVudGFsIiA+VmlzaXQgSU1EYiBQaWNrczwvYT48L3A+ICAgIDwvZGl2PgogICAgCgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L3NwYW4+CgoKCiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij4KICAgICAgICAgICAgICAgIGlmKHR5cGVvZiB1ZXggPT09ICdmdW5jdGlvbicpe3VleCgnbGQnLCdOaW5qYVdpZGdldCcse3diOjF9KTt9CiAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgIAoKCgoKICAgICAgICA8L2Rpdj4KICAgIAoKICA8ZGl2IGNsYXNzPSJhdXgtY29udGVudC13aWRnZXQtMiI+IAogICAgPGRpdiBjbGFzcz0ic29jaWFsIj4gICAgIAogIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5pZiAodWV0KSB7IHVldCgnYmInLCAnZmFjZWJvb2tfbGlrZV9pZnJhbWUnLCB7d2I6IDF9KTsgfTwvc2NyaXB0PgogIDxkaXYgY2xhc3M9InNvY2lhbF9uZXR3b3JraW5nX2xpa2UiPgogICAgPGlmcmFtZQogICAgICBpZD0iaWZyYW1lX2xpa2UiCiAgICAgIG5hbWU9ImZiTGlrZUlGcmFtZV8wIgogICAgICBjbGFzcz0ic29jaWFsLWlmcmFtZSIKICAgICAgc2Nyb2xsaW5nPSJubyIKICAgICAgZnJhbWVib3JkZXI9IjAiCiAgICAgIGFsbG93VHJhbnNwYXJlbmN5PSJhbGxvd1RyYW5zcGFyZW5jeSIKICAgICAgcmVmPSJodHRwOi8vd3d3LmltZGIuY29tL3RpdGxlL3R0MTM3NTY2Ni8iCiAgICAgIHdpZHRoPTI4MAogICAgICBoZWlnaHQ9NjU+PC9pZnJhbWU+CiAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KCgkKCTwhLS0gYmVnaW4gUkhTX0NPUk5FUlNUT05FIC0tPgo8ZGl2IGlkPSJyaHNfY29ybmVyc3RvbmVfd3JhcHBlciIgY2xhc3M9ImNvcm5lcnN0b25lX3Nsb3QiPgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CmRvV2l0aEFkcyhmdW5jdGlvbigpewphZF91dGlscy5yZWdpc3Rlcl9hZCgncmhzX2Nvcm5lcnN0b25lJyk7Cn0pOwo8L3NjcmlwdD4KPGlmcmFtZSBpZD0icmhzX2Nvcm5lcnN0b25lIiBuYW1lPSJyaHNfY29ybmVyc3RvbmUiIGNsYXNzPSJ5ZXNTY3JpcHQiIHdpZHRoPSIzMDAiIGhlaWdodD0iMTI1IiBkYXRhLW9yaWdpbmFsLXdpZHRoPSIzMDAiIGRhdGEtb3JpZ2luYWwtaGVpZ2h0PSIxMjUiIG1hcmdpbndpZHRoPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIGZyYW1lYm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIiBhbGxvd3RyYW5zcGFyZW5jeT0idHJ1ZSIgb25sb2FkPSJkb1dpdGhBZHMuY2FsbCh0aGlzLCBmdW5jdGlvbigpeyBhZF91dGlscy5vbl9hZF9sb2FkKHRoaXMpOyB9KTsiIGFsbG93ZnVsbHNjcmVlbj0idHJ1ZSI+PC9pZnJhbWU+CjwvZGl2Pgo8ZGl2IGlkPSJyaHNfY29ybmVyc3RvbmVfcmVmbG93X2hlbHBlciI+PC9kaXY+CjxzY3JpcHQ+CmRvV2l0aEFkcyhmdW5jdGlvbigpewphZF91dGlscy5pbmplY3Rfc2VydmVyc2lkZV9hZCgncmhzX2Nvcm5lcnN0b25lJywgJzxzY3JpcHQ+ZG9jdW1lbnQuZGVmYXVsdEFkID0ge2g6MTI1LHc6MzAwfTsgZG9jdW1lbnQuYWQgPSBkb2N1bWVudC5kZWZhdWx0QWQ7PFwvc2NyaXB0PiA8XCEtLSBhaWQgOiA0NzI0MTcwMTAwOTAxIDogY2lkIDogNjI4Nzc2MTE4MDkwMSA6IHRlbXBsYXRlIDogSU1EYiBEZWZhdWx0IEZsYXNoLTEuMjQgLS1cPjxzdHlsZSB0eXBlPVwidGV4dC9jc3NcIj5ib2R5e2JhY2tncm91bmQ6dHJhbnNwYXJlbnR9PC9zdHlsZT48c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj52b2lkIDA9PT1wYXJlbnQuc2ltJiZ0b3AmJnRvcC5nZW5lcmljJiZ0b3AuZ2VuZXJpYy5tb25pdG9yaW5nJiZ0b3AuZ2VuZXJpYy5tb25pdG9yaW5nLnNldF9wYXJ0bmVyJiZ0b3AuZ2VuZXJpYy5tb25pdG9yaW5nLnNldF9wYXJ0bmVyKHdpbmRvdyxcIjFQXCIpLGRvY3VtZW50LmFkPXthaWQ6XCI0NzI0MTcwMTAwOTAxXCIsY2lkOlwiNjI4Nzc2MTE4MDkwMVwiLHc6MzAwLGg6MTI1LHo6XCJcIn0scGFyZW50LmFkX3V0aWxzLmV4cGFuZF9hZCh0aGlzLmZyYW1lRWxlbWVudCk7dmFyIG1ha2VTd2ZQYXJhbT1mdW5jdGlvbihhLGUpe3JldHVybiBlP1wnPHBhcmFtIG5hbWU9XCJcJythK1wnXCIgdmFsdWU9XCJcJytlK1wnXCI+XCc6XCJcIn0sbWFrZVN3ZkVtYmVkPWZ1bmN0aW9uKGEsZSl7cmV0dXJuIGU/XCIgXCIrYStcJz1cIlwnK2UrXCdcIiBcJzpcIlwifTt0aGlzLmZsYXNoQWRVdGlscz17bWFrZUZsYXNoQWQ6ZnVuY3Rpb24oYSl7dmFyIGUsaSxyLHQ9YS5pZCxuPWEuc3JjLHM9YS53aWR0aCxvPWEuaGVpZ2h0LGw9YS5iZ2NvbG9yLGM9YS53bW9kZXx8XCJvcGFxdWVcIixtPWEuc2FsaWduLGQ9YS5zY2FsZSxoPWEuZXh0cmFQYXJhbXMscD1hLmV4dHJhVEFHcyx2PWEubWluVmVyc2lvbixnPWVzY2FwZShhLmNsaWNrVGhydSksZj1hLmNsaWNrVEFHcyx3PWZ1bmN0aW9uKGEpe3JldHVybiBudWxsIT09YSYmdm9pZCAwIT09YSYmKGErXCJcIikubGVuZ3RofSx1PWZ1bmN0aW9uKGEpe3JldHVybiBpc0Zpbml0ZShwYXJzZUludChhLDEwKSl9LGI9XCJcIjtpZighKHcodCkmJncobikmJnUocykmJnUobykpKXJldHVybiBjb25zb2xlTG9nKFwibWFrZUZsYXNoQWQ6IE1pc3NpbmcgcmVxdWlyZWQgcGFyYW1zXCIsXCJmbGFzaEFkVXRpbHNcIiksdm9pZCAwO2lmKGZsYXNoQWRVdGlscy5jYW5QbGF5Rmxhc2godil8fGNvbnNvbGVMb2coXCJtYWtlRmxhc2hBZDogQ3VycmVudCBmbGFzaCB2ZXJzaW9uIHRvbyBsb3dcIixcImZsYXNoQWRVdGlsc1wiKSxmKWZvcihlPTA7ZTxmLmxlbmd0aDtlKyspZltlXSYmKGI9YitcIiZjbGlja1RBR1wiKyhlKzEpK1wiPVwiK2VzY2FwZShmW2VdKSk7aWYocClmb3IoaSBpbiBwKWI9YitcIiZcIitlc2NhcGUoaSkrXCI9XCIrZXNjYXBlKHBbaV0pO2IrPVwiJm9yZD1cIixiKz12b2lkIDAhPT1wYXJlbnQmJnZvaWQgMCE9PXBhcmVudC5hZF91dGlscyYmdm9pZCAwIT09cGFyZW50LmFkX3V0aWxzLm9yZD9wYXJlbnQuYWRfdXRpbHMub3JkOjFlMTYqTWF0aC5yYW5kb20oKSxiKz1kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm5hdmJhclwiKT9kb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIm1lZ2FNZW51XCIpP1wiJm5hdmJhcj1tZWdhXCI6XCImbmF2YmFyPWxlZ2FjeVwiOlwiJm5hdmJhcj1udWxsXCI7dmFyIGs9XCJcIixTPVwiXCI7dHJ5e3ZhciB5PXt3aWR0aDoxLGhlaWdodDoxLHNyYzoxLGJnY29sb3I6MSx3bW9kZToxLHNhbGlnbjoxLHNjYWxlOjEsZmxhc2h2YXJzOjF9O2ZvcihyIGluIGgpeVtyXXx8KGsrPW1ha2VTd2ZQYXJhbShyLGhbcl0pLFMrPW1ha2VTd2ZFbWJlZChyLGhbcl0pKX1jYXRjaChBKXt9dmFyIEU9bWFrZVN3ZlBhcmFtKFwiYmdjb2xvclwiLGwpLF89bWFrZVN3ZkVtYmVkKFwiYmdjb2xvclwiLGwpLEY9bWFrZVN3ZlBhcmFtKFwid21vZGVcIixjKSxQPW1ha2VTd2ZFbWJlZChcIndtb2RlXCIsYykseD1tYWtlU3dmUGFyYW0oXCJzY2FsZVwiLGQpLFQ9bWFrZVN3ZkVtYmVkKFwic2NhbGVcIixkKSxHPW1ha2VTd2ZQYXJhbShcInNhbGlnblwiLG0pLEk9bWFrZVN3ZkVtYmVkKFwic2FsaWduXCIsbSksQj1cJzxvYmplY3QgY2xhc3NpZD1cImNsc2lkOkQyN0NEQjZFLUFFNkQtMTFjZi05NkI4LTQ0NDU1MzU0MDAwMFwiIGNvZGViYXNlPVwiaHR0cDovL2Rvd25sb2FkLm1hY3JvbWVkaWEuY29tL3B1Yi9zaG9ja3dhdmUvY2Ficy9mbGFzaC9zd2ZsYXNoLmNhYiN2ZXJzaW9uPTYsMCwwLDBcIiB3aWR0aD1cIlwnK3MrXCdcIiBoZWlnaHQ9XCJcJytvK1wnXCIgaWQ9XCJzd2ZfXCcrdCtcJ1wiPjxwYXJhbSBuYW1lPVwibW92aWVcIiB2YWx1ZT1cIlwnK24rXCdcIj48cGFyYW0gbmFtZT1cImZsYXNodmFyc1wiIHZhbHVlPVwiZW52PVdFQiZjbGlja1RBRz1cJytnK1wiJlwiK2IrXCdcIj48cGFyYW0gbmFtZT1cInBsYXlcIiB2YWx1ZT1cInRydWVcIj48cGFyYW0gbmFtZT1cInF1YWxpdHlcIiB2YWx1ZT1cImhpZ2hcIj48cGFyYW0gbmFtZT1cImFsbG93U2NyaXB0QWNjZXNzXCIgdmFsdWU9XCJhbHdheXNcIj5cJyt4K0crRStGK2srXCc8ZGl2IHN0eWxlPVwibWFyZ2luLWxlZnQ6MC4xcHhcIj48ZW1iZWQgc3JjPVwiXCcrbitcJ1wiIGZsYXNodmFycz1cImVudj1XRUImY2xpY2tUQUc9XCcrZytcIiZcIitiK1wnXCIgcXVhbGl0eT1cImhpZ2hcIiBwbGF5PVwidHJ1ZVwiIHdpZHRoPVwiXCcrcytcJ1wiIGhlaWdodD1cIlwnK28rXCdcIiBuYW1lPVwic3dmX1wnK3QrXCdcIiBhbGxvd1NjcmlwdEFjY2Vzcz1cImFsd2F5c1wiIHR5cGU9XCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiIHBsdWdpbnNwYWdlPVwiaHR0cDovL3d3dy5tYWNyb21lZGlhLmNvbS9nby9nZXRmbGFzaHBsYXllclwiIFwnK1QrSStfK1ArUytcIj48L2VtYmVkPjwvZGl2Pjwvb2JqZWN0PlwiO3JldHVybiBCfSxjYW5QbGF5Rmxhc2g6ZnVuY3Rpb24oYSl7dmFyIGU9ITEsaT1wYXJzZUludChhLDEwKTthPSFhfHw5Pmk/OTppO3ZhciByPW5hdmlnYXRvci5taW1lVHlwZXMmJm5hdmlnYXRvci5taW1lVHlwZXNbXCJhcHBsaWNhdGlvbi94LXNob2Nrd2F2ZS1mbGFzaFwiXT9uYXZpZ2F0b3IubWltZVR5cGVzW1wiYXBwbGljYXRpb24veC1zaG9ja3dhdmUtZmxhc2hcIl0uZW5hYmxlZFBsdWdpbjowO2lmKHImJm5hdmlnYXRvci5wbHVnaW5zW1wiU2hvY2t3YXZlIEZsYXNoXCJdKXt2YXIgdCxuLHM9bmF2aWdhdG9yLnBsdWdpbnNbXCJTaG9ja3dhdmUgRmxhc2hcIl0uZGVzY3JpcHRpb24uc3BsaXQoXCIgXCIpO2ZvcihuPTA7bjxzLmxlbmd0aDsrK24paXNOYU4ocGFyc2VJbnQoc1tuXSwxMCkpfHwodD1wYXJzZUludChzW25dLDEwKSk7ZT10Pj1hfWVsc2UgaWYobmF2aWdhdG9yLnVzZXJBZ2VudCYmbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKFwiTVNJRVwiKT49MCYmLTEhPT1uYXZpZ2F0b3IuYXBwVmVyc2lvbi5pbmRleE9mKFwiV2luXCIpKXRyeXt2YXIgbz1uZXcgQWN0aXZlWE9iamVjdChcIlNob2Nrd2F2ZUZsYXNoLlNob2Nrd2F2ZUZsYXNoLlwiK2EpO28uQWxsb3dTY3JpcHRBY2Nlc3M9XCJhbHdheXNcIjt2YXIgbD1vLkdldFZhcmlhYmxlKFwiJHZlcnNpb25cIiksYz1sLm1hdGNoKC8oWzAtOV0rKS8pO2U9Y1sxXT49YX1jYXRjaChtKXt9cmV0dXJuIGV9fSxjcmVhdGl2ZT1cJzxhIGhyZWY9XCJodHRwOi8vYWF4LXVzLWVhc3QuYW1hem9uLWFkc3lzdGVtLmNvbS94L2MvUXYySW9odDBlS3p0R2wxMm9FaFo2cllBQUFGWXphZ1dlQUVBQUFES0FlLVdLVGsvaHR0cDovL3BkYS1iZXMuYW1hem9uLmNvbS9jP2k9MSRBZ0FBQUFBQUFBQUVBQUFBQUFBQUFBTUFBQUFBMlRaaHpCdlJnVnBycVVrM1pYd3JndlN4dmxIN0NJUlZpZi5ZZHROaThCdklnc1dHTFlSOWdzTDNhYUhaODdKb0VTZk82clppd00xa05Lbi1kaHRTQXc2Ukg3SzI3Rk9aem5TRWQuT2JFZlM3am1zUnBNanFwYThmZnRUaUNLZGRjRjRWQmlOUlhKOEpteFg4UEJVZUh6T0FnbGhUYzB3N2NSdmlJeWdRdEhHckZlOFg5bDFVNDdaSFEtaUxiQnM0a3BoejRFMHQzdUZBTHppcWNnVmxUM3E0VU5KUHdaQjZ2Z3kxTGNGTUNTZmJqbnBXWnRxVDNUN0RCUlh5YzNlSjZHUGpTTDJST1JzT3VQd3o4YTBKRnU5aXQxRWF4c1VFMHBLbXViYjhsV2UxMGFNVVVpNWtqT2ZYWG1zTy0wUDVnLTZGbkpqRGYuUW5UN2lwbGkzeWVPNlV2WGZZSTI1T3BVdy5wQnVjT1lxTVlSLmJILW9TbmQxc25EYkR1a0htdHRtcTJLYlJVUUVaS3ViWjFKSjNWM3VtWE1KTHNRclFGbWtPb2hpRS5EV0JaeHVHVjRMNUF4alJnYVpXZURwdUVYSGphNUZsLlVWcjhHUXdRVS11UktGTlFHZU0ydjVxbFpHRXJXeTV6MXg3cTdaNURxN2R5dXo5ZThhcXdpbWUxTVZGeHdGajRJMy4zdk5EOEtxQ3dCU1d6Q1FBY1V4cEtKbk02UTA1RVcyWG9BbW01b1J1MXhELkpyeWt4dnRCTWE5VzdLSFV6SjhMTk03aVR5aVlwTGpqQlI5TXlQRWxiVmJOSWMtWTAyZ3puQi1MZVpPd2p2RVFYVUhBbHRUTG0uTHNickNqTkRUTm43a0d2U2pySUN3UXRPcVNEQzNQYjJQR214VFBYei43N0szSlBjQXhtdi1VdVpUUnJmUHBnWjQ2di50WmhrYnhmTFNnanVPY1NjMDVMNkhXVmFNWXgwWHZVQThHZ3k4dm1zdW0xWkVNaGVaU28tUnJ6WDhFQTZjYmEyejE2WWYxQnhTNGF4Y0RKMjcucUdHbHZZdEc5VlhWaXkwR1lVdEhQbEpZUzE1b0dXM09KWE5XemRMZDU4b2Zqb3VaTVdCcUFORnY4ajdKVDZmS1VLOWdVWGtKd2I2M1BPQ2VHdlhiUmxXeVJRS3o4UnMzcHplQUxIbm5lTVpmOHRuVjJoWm80OHhaLkU2VGFxc2Q4bEtKYlpoUEM5QmlQMTdGbE92SzJ5VWwuWDNTNXRzR2RLZk53c1hlQjE5OXlQSEZhbUFEQ0R6ajZQUkVXSXJhdnUwMnFQU1RwZ3gxOE5ULkJRbHlhWjlNOWZpLi5zbm9lWXQtTzJPb0E1WS0zc1pWY0NMWkxKcWpySkZWcHFVejVUS3U4WWQ5eEQub1FOZUR3VXM2d2lRQm5LdnJXZmJIRjNXLWJqM3gtLWhXdHN4UFdnck9hN3I2MFkweXdPSGJpYThlRHQwY2tHS05vSUNsLi4tLW8xTGJCQ2JnTDY5Vy5jUDlwcmhpQy01NklXRW5MQ1JUMXdGTUpDOU9yYUxHSjQ3eS45cG51V2JoMi1DUEY4LVI3akhJWGtQVmMwcUJYbldIM2dKUkY3RUNCMDUwTzU5Y2U1YmJaeW9BbmZIUG1kbjB0QVBHNVd5QmNWZE9KVTJyaC5hZXFRQTJ0YS02Mk90Wi5ySlFXSlpDSzhQZWFwcFJPMTRGeVd5QS5TOVpsdkFUNEhCd25rYmw2emV2dy4xdmg4YjRxSGtMd0Y5RlVqWDFJNUN0Q1cxNXBDd2stWWMtVTVndmc1TE5PT0N5Sk1zcG9sbUMwc0c3WW43a0FjUjBYdTBqdGZMeHZpN01vU29rTTk0R3JzU25XeGZvRU5tM0ZSek5sTHJtWW95dnpDUV8mZD1odHRwOi8vd3d3LmltZGIuY29tL2FtYXpvbi1vcmlnaW5hbHMvdmlkZW9cIiB0YXJnZXQ9XCJfdG9wXCI+PGltZyBzcmM9XCJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvc2hhemFtL1JvdG8tY28tYnJhbmRlZC1pbnRlbC1GaW5hbC0xQzZzNFMuX1Y1MjU4NjMxMDZfLmpwZ1wiIGJvcmRlcj1cIjBcIiBhbHQ9XCJcIiB3aWR0aD1cIjMwMFwiPjwvYT5cJyxkb2N1bWVudC53cml0ZShjcmVhdGl2ZSk7PFwvc2NyaXB0Pjxub3NjcmlwdD48YSBocmVmPVwiaHR0cDovL2FheC11cy1lYXN0LmFtYXpvbi1hZHN5c3RlbS5jb20veC9jL1F2MklvaHQwZUt6dEdsMTJvRWhaNnJZQUFBRll6YWdXZUFFQUFBREtBZS1XS1RrL2h0dHA6Ly9wZGEtYmVzLmFtYXpvbi5jb20vYz9pPTEkQWdBQUFBQUFBQUFFQUFBQUFBQUFBQU1BQUFBQTJUWmh6TEI4LkZiQUhNQWdNUFdNQlViLkhDSEkzVktWMld1Wkl3cHd0blNKRGJBZC5mWVJBeTZGTFZ5UUtvblFIZFUwQnFxUHJnRTVNQlhjYWxINmlKVGg3ajQ3UlJ0aFIzRERKMm14WjVuRDBETWxpYmNSSWxPNS1BSC5WQjVYQlpXYzA2OFRLN0t1OXNXR2NQT0l0ZlZacWZzUnhyNTJxZDFjNS5XN24yaWc5Mi4ydlN5NVZPTHZuVzFBLnNuRlZOdUlubjY3LXIxd1hIM3FaNzZiaDNmbkhZWVcwTFdybUpZUlNSNHRrLVFaTncyR0FTWWtBZHpqTUJvOEF1cFNreDZNM1ZYaDBqc2YxODk0eXExNW1VdU16bWxpSU5oS0lyQzlOTU5na2FzbWlHbFdoN2NWNUZRQXl3M0lBcnpsME9nUnVGM1Y0RUFpR3VUMHZyZTdXWlhoNnp0elJTSXpCR0ZsUXZwSXphczlGM0o5ZEphWHlzQjVwWjNYem12VFJnR3E0MlFQalNUaHp0dFNFSUF5ajZBS2FIVW1semVlaHJnSndYbnNMaXZBalkxbUgwbU9rNjNiNlduTGc3bTc1dC0xaUJDaXlDZjgxZXd6MzUuZFFuTDkzMXp3OFA1UnV2V2tMRnlVSGNRamE5T3BHV1FvbEo4QTkxUHZYbnRIRHVGTDFFNnp1aE1qVHdIelhKcWkxQm96LWMyalk4TnU0OElDb2hIWnZhNXZVdmppbEhmUjJSUWx5clJNcy1mVEJlOFVDY1NOeXpjLVRpODlqTnU4NHQ1WHRRallkOVZ3S3RGUk1OVnZIZFJ5R2lZR2xDbzVZS1ZkaG9pcVU1Z1M5RDgzUHA5S2k4TkMuUFJ2UzdLcC0wSGxINVB0SHQzLUNPWDc5T3dhLlpWVnc1Uk1KSlI1TURlU1pleDNFLkNKbDFpZ2hvaUFvM3JyNThBV1FGSmZqWmdlRG9sWHBXVUIuaDNKSGd5cFJNbVVhbXM5R2ZKUTZlLlg2cExtS1A0NVFrQS5wNDlkdEp0TUpDa3lZcTR1OGllZ2w2MEFMazVTZEVHc1VQM0tNZXhUREpGYjRXUjBjNHV4TGsua1RRSW1lelpuTXRPRFljdDhBSk1IRGNwRFVOMGRncFpNTUtzaUN2cERCYVpmT0d1d0E4cTJRQ3BGNkJRZlZqUE5IWlk4R2UycFplLldSdmphQ3E2cDMyLm5BWGw4MVczbDB4ODNPeG0yYll2QWhBZUZYTFA2eHJucWwyMmJnLm1xa3hSajBMU1B6YTdueUtpMWVNRThjRmxkVENjUWV1MmVRdS1mdXF2Q0xrMmFla3F2TmpOcExYUHJsN2VTYzNGRFVyWG1KWmN1c1RocWdCclFQMDRKRmpJY280WEFFSUFEUFBRRHNJc2tWNXpXQjlXWGVBTXUtdDZKcFVsck9DZ0l4T3N6TWh2QmVWZmxsaHIxVjJUWXlBSnlsbTdsVFdGZVFjMm16UktNNG5NR0NpNjhJY09IekNCUzRLSG1XZ09XeG1TTmtTMUMuV0tndHNTOHlpYU9kN3Z0R0c0ckplckprLWlRV1E0TlZXNmtUR011T05nTnNuVUJMTjVZTTNuS29xUG1ZZXpJbGx2akJqQXJDTzR0S2NVVnNRbGd2dG5oNTFJUWFVY2p0YnlhTE9jdGozUzNtQW9ud0ZhenhvQjNKZnh6cm8yQjFqOXotNEZPVUR0QnpXM252Ty1pZXpkaUlXM21FZlUzSElLMDBibG42Rmh0cWZJaTJMUVladU5oZmpES0FJb3FNR0JQZmRCc25oeHBTVkYteHd5Qm1tS2ppSFlXLWR0bXNOTURwT2swV0lKaEZmWDhpSkU1bjFwNldUUDVoTk9JSFRrZHlKaVNIWkdQelJST2NRbHRTTFVfJmQ9aHR0cDovL3d3dy5pbWRiLmNvbS9hbWF6b24tb3JpZ2luYWxzL3ZpZGVvXCIgdGFyZ2V0PVwiX3RvcFwiPjxpbWcgc3JjPVwiaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL3NoYXphbS9Sb3RvLWNvLWJyYW5kZWQtaW50ZWwtRmluYWwtMUM2czRTLl9WNTI1ODYzMTA2Xy5qcGdcIiBib3JkZXI9XCIwXCI+PC9hPjwvbm9zY3JpcHQ+XG48XCEtLSBjcmVhdGl2ZU1vZERhdGUgPSAxNDc5NDA5NjI4MDAwIC0tXD5cbiA8ZGl2IGlkPVwicmhzX2Nvcm5lcnN0b25lX3dlYmJ1Z1wiIHN0eWxlPVwiZGlzcGxheTpub25lO1wiPlxuIDxpbWcgc3JjPVwiaHR0cDovL2FheC11cy1lYXN0LmFtYXpvbi1hZHN5c3RlbS5jb20vZS9sb2kvaW1wP2I9SUlLQXNEWk9nRU9Panp3OU5seGY4YTRBQUFGWXphZ1dqQUVBQUFES2xLZGViZ1wiIGJvcmRlcj1cIjBcIiBoZWlnaHQ9XCIxXCIgd2lkdGg9XCIxXCIgYWx0PVwiXCIvPlxuIDwvZGl2PlxuJyk7Cn0sInVuYWJsZSB0byBpbmplY3Qgc2VydmVyc2lkZSBhZCIpOwo8L3NjcmlwdD4KCQoKCiAgICAKICAgIAogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlJlbGF0ZWROZXdzV2lkZ2V0UkhTIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fUmVsYXRlZE5ld3NXaWRnZXRSSFNfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgoKICAgICAgPGRpdiBjbGFzcz0ibWluaS1hcnRpY2xlIiA+CiAgICAgICAgPGgzPlJlbGF0ZWQgTmV3czwvaDM+CgogICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmV3c19pdGVtIG9kZCIgPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iaGVhZGxpbmUiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbmV3cz9yZWZfPXR0X253cl8xI25pNjA1MTU1OTAiCj5NZXJ5bCBTdHJlZXAgJiBKZWZmcmV5IEt1cmxhbmQgVG8gUmVjZWl2ZSBDb3N0dW1lIERlc2lnbmVycyBHdWlsZCBIb25vcnM8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxiciAvPjxzbWFsbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpdGVtcHJvcD0iZGF0ZVB1Ymxpc2hlZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyOSBOb3ZlbWJlciAyMDE2IDg6MjAgQU0sIC0wODowMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj48c3BhbiBpdGVtcHJvcD0icHJvdmlkZXIiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii9uZXdzL25zMDAwNDkxMz9yZWZfPXR0X253cl8xIgo+RGVhZGxpbmUgVFY8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NtYWxsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibmV3c19pdGVtIGV2ZW4iID4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImhlYWRsaW5lIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L25ld3M/cmVmXz10dF9ud3JfMiNuaTYwNTE1NDc2Igo+TWVyeWwgU3RyZWVwICYgSmVmZnJleSBLdXJsYW5kIFRvIFJlY2VpdmUgQ29zdHVtZSBEZXNpZ25lcnMgR3VpbGQgSG9ub3JzPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8YnIgLz48c21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImRhdGVQdWJsaXNoZWQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMjkgTm92ZW1iZXIgMjAxNiA4OjIwIEFNLCAtMDg6MDAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+PHNwYW4gaXRlbXByb3A9InByb3ZpZGVyIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvbmV3cy9uczAwMDQ5MTI/cmVmXz10dF9ud3JfMiIKPkRlYWRsaW5lPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im5ld3NfaXRlbSBvZGQiID4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9ImhlYWRsaW5lIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L25ld3M/cmVmXz10dF9ud3JfMyNuaTYwNTE1NDEzIgo+TWVyeWwgU3RyZWVwLCBKZWZmcmV5IEt1cmxhbmQgdG8gQmUgSG9ub3JlZCBieSBDb3N0dW1lIERlc2lnbmVycyBHdWlsZDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPGJyIC8+PHNtYWxsPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJkYXRlUHVibGlzaGVkIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDI5IE5vdmVtYmVyIDIwMTYgNzo0MCBBTSwgLTA4OjAwCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPjxzcGFuIGl0ZW1wcm9wPSJwcm92aWRlciIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL25ld3MvbnMwMDUyNzkxP3JlZl89dHRfbndyXzMiCj5WYXJpZXR5IC0gRmlsbSBOZXdzPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgIAogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWUtbW9yZSI+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L25ld3M/cmVmXz10dF9ud3Jfc20iCj5TZWUgYWxsIDEwNTIzIHJlbGF0ZWQgYXJ0aWNsZXM8L2E+Jm5ic3A7JnJhcXVvOwogICAgICAgICAgICA8L2Rpdj4KCiAgICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fUmVsYXRlZE5ld3NXaWRnZXRSSFNfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJSZWxhdGVkTmV3c1dpZGdldFJIUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJSZWxhdGVkTmV3c1dpZGdldFJIUyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgIAoKCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBtaWRkbGVfcmhzIC0tPgoJCgoKICAgIAogICAgCiAgICAKCgogICAgCiAgICAKICAgIAoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJSZWxhdGVkTGlzdHNXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgICAgPGRpdiBjbGFzcz0ibWluaS1hcnRpY2xlIj4KICAgICAgICAgICAgPGRpdiBpZD0icmVsYXRlZExpc3RzV2lkZ2V0Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJpZ2h0Y29ybmVybGluayI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2xpc3QvY3JlYXRlP3JlZl89dHRfcmxzIgo+Q3JlYXRlIGEgbGlzdDwvYT4mbmJzcDsmcmFxdW87CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxoMz5Vc2VyIExpc3RzPC9oMz4KICAgICAgICAgICAgICAgIDxwPlJlbGF0ZWQgbGlzdHMgZnJvbSBJTURiIHVzZXJzPC9wPgoKICAgIDxkaXYgY2xhc3M9Imxpc3QtcHJldmlldyBldmVuIj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0LXByZXZpZXctaXRlbS1uYXJyb3ciPgo8YSBocmVmPSIvbGlzdC9sczAwNjg2Njc1ND9yZWZfPXR0X3Jsc18xIgo+PGltZyBoZWlnaHQ9Ijg2IiB3aWR0aD0iODYiIGFsdD0ibGlzdCBpbWFnZSIgdGl0bGU9Imxpc3QgaW1hZ2Uic3JjPSIvaW1hZ2VzL25vcGljdHVyZS9tZWRpdW0vZmlsbS5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UTTBPRGszTWpNMU1WNUJNbDVCYW5CblhrRnRaVGN3TnpjMU1ESXdOQUBALl9WMV9VWDg2X0NSMCwwLDg2LDg2X0FMXy5qcGciIC8+PC9hPiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdF9uYW1lIj4KICAgICAgICAgICAgPHN0cm9uZz48YSBocmVmPSIvbGlzdC9sczAwNjg2Njc1ND9yZWZfPXR0X3Jsc18xIgo+CkF3ZXNvbWUgbW92aWVzCjwvYT48L3N0cm9uZz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X21ldGEiPgogICAgICAgICAgICBhIGxpc3Qgb2YgMzEgdGl0bGVzCiAgICAgICAgICAgIDxiciAvPmNyZWF0ZWQgMjEmbmJzcDtKYW4mbmJzcDsyMDEyCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXIiPiZuYnNwOzwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJsaXN0LXByZXZpZXcgb2RkIj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0LXByZXZpZXctaXRlbS1uYXJyb3ciPgo8YSBocmVmPSIvbGlzdC9sczA3OTAyOTg5Mz9yZWZfPXR0X3Jsc18yIgo+PGltZyBoZWlnaHQ9Ijg2IiB3aWR0aD0iODYiIGFsdD0ibGlzdCBpbWFnZSIgdGl0bGU9Imxpc3QgaW1hZ2Uic3JjPSIvaW1hZ2VzL25vcGljdHVyZS9tZWRpdW0vZmlsbS5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1tUmtPVEk1TjJZdE1XRTRNUzAwWkdZd0xXRmhNek10WlRCallUSXhPR1poT1RWbFhrRXlYa0ZxY0dkZVFYVnlNalEyTVRrMU9URUAuX1YxX1VYODZfQ1IwLDAsODYsODZfQUxfLmpwZyIgLz48L2E+ICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X25hbWUiPgogICAgICAgICAgICA8c3Ryb25nPjxhIGhyZWY9Ii9saXN0L2xzMDc5MDI5ODkzP3JlZl89dHRfcmxzXzIiCj4KR2hpc3kncyBCZXN0IE1vdmllIG9mIHRoZSBZZWFyCjwvYT48L3N0cm9uZz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X21ldGEiPgogICAgICAgICAgICBhIGxpc3Qgb2YgMjcgdGl0bGVzCiAgICAgICAgICAgIDxiciAvPmNyZWF0ZWQgMDImbmJzcDtTZXAmbmJzcDsyMDE1CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXIiPiZuYnNwOzwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2IGNsYXNzPSJsaXN0LXByZXZpZXcgZXZlbiI+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdC1wcmV2aWV3LWl0ZW0tbmFycm93Ij4KPGEgaHJlZj0iL2xpc3QvbHMwNjMzMTY5MTU/cmVmXz10dF9ybHNfMyIKPjxpbWcgaGVpZ2h0PSI4NiIgd2lkdGg9Ijg2IiBhbHQ9Imxpc3QgaW1hZ2UiIHRpdGxlPSJsaXN0IGltYWdlInNyYz0iL2ltYWdlcy9ub3BpY3R1cmUvbWVkaXVtL2ZpbG0ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakl4TlRVNE16WTRNRjVCTWw1QmFuQm5Ya0Z0WlRnd016TTRPREkzTWpFQC5fVjFfVVg4Nl9DUjAsMCw4Niw4Nl9BTF8uanBnIiAvPjwvYT4gICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3RfbmFtZSI+CiAgICAgICAgICAgIDxzdHJvbmc+PGEgaHJlZj0iL2xpc3QvbHMwNjMzMTY5MTU/cmVmXz10dF9ybHNfMyIKPgrEsHpsZW5lbgo8L2E+PC9zdHJvbmc+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdF9tZXRhIj4KICAgICAgICAgICAgYSBsaXN0IG9mIDQ1IHRpdGxlcwogICAgICAgICAgICA8YnIgLz5jcmVhdGVkIDQmbmJzcDttb250aHMmbmJzcDthZ28KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhciI+Jm5ic3A7PC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9Imxpc3QtcHJldmlldyBvZGQiPgogICAgICAgIDxkaXYgY2xhc3M9Imxpc3QtcHJldmlldy1pdGVtLW5hcnJvdyI+CjxhIGhyZWY9Ii9saXN0L2xzMDY2MDMzODM0P3JlZl89dHRfcmxzXzQiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJsaXN0IGltYWdlIiB0aXRsZT0ibGlzdCBpbWFnZSJzcmM9Ii9pbWFnZXMvbm9waWN0dXJlL21lZGl1bS9maWxtLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCT0RVNE1qVTROakl3Tmw1Qk1sNUJhbkJuWGtGdFpUZ3dNRFUyTWpFeU1ERUAuX1YxX1VYODZfQ1IwLDAsODYsODZfQUxfLmpwZyIgLz48L2E+ICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X25hbWUiPgogICAgICAgICAgICA8c3Ryb25nPjxhIGhyZWY9Ii9saXN0L2xzMDY2MDMzODM0P3JlZl89dHRfcmxzXzQiCj4KTXkgVG9wIDIwIE1vdmllcwo8L2E+PC9zdHJvbmc+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdF9tZXRhIj4KICAgICAgICAgICAgYSBsaXN0IG9mIDI1IHRpdGxlcwogICAgICAgICAgICA8YnIgLz5jcmVhdGVkIDImbmJzcDttb250aHMmbmJzcDthZ28KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjbGVhciI+Jm5ic3A7PC9kaXY+CiAgICA8L2Rpdj4KICAgIDxkaXYgY2xhc3M9Imxpc3QtcHJldmlldyBldmVuIj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0LXByZXZpZXctaXRlbS1uYXJyb3ciPgo8YSBocmVmPSIvbGlzdC9sczA2NjA4NDc5MD9yZWZfPXR0X3Jsc181Igo+PGltZyBoZWlnaHQ9Ijg2IiB3aWR0aD0iODYiIGFsdD0ibGlzdCBpbWFnZSIgdGl0bGU9Imxpc3QgaW1hZ2Uic3JjPSIvaW1hZ2VzL25vcGljdHVyZS9tZWRpdW0vZmlsbS5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qRTFPVFV4T1RBMU5sNUJNbDVCYW5CblhrRnRaVGN3TkRjNE9EUXpNZ0BALl9WMV9VWDg2X0NSMCwwLDg2LDg2X0FMXy5qcGciIC8+PC9hPiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibGlzdF9uYW1lIj4KICAgICAgICAgICAgPHN0cm9uZz48YSBocmVmPSIvbGlzdC9sczA2NjA4NDc5MD9yZWZfPXR0X3Jsc181Igo+CkxlcyByZWNvbW1hbmRhdGlvbnMgZGUgTS4gSMOpbGluCjwvYT48L3N0cm9uZz4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJsaXN0X21ldGEiPgogICAgICAgICAgICBhIGxpc3Qgb2YgMjIgdGl0bGVzCiAgICAgICAgICAgIDxiciAvPmNyZWF0ZWQgMSZuYnNwO21vbnRoJm5ic3A7YWdvCiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY2xlYXIiPiZuYnNwOzwvZGl2PgogICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWUtbW9yZSI+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL2xpc3RzL3R0MTM3NTY2Nj9yZWZfPXR0X3Jsc19zbSIKPlNlZSBhbGwgcmVsYXRlZCBsaXN0czwvYT4mbmJzcDsmcmFxdW87CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiUmVsYXRlZExpc3RzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIlJlbGF0ZWRMaXN0c1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgICAgICA8YSBuYW1lPSJzbG90X3JpZ2h0LTgiPjwvYT4KICAgICAgICA8ZGl2IGNsYXNzPSJtaW5pLWFydGljbGUiPgogICAgICAgIAogICAgCiAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgCiAgICAgICAgICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij5pZih0eXBlb2YgdWV0ID09PSAnZnVuY3Rpb24nKXt1ZXQoJ2JiJywnTWVzc2FnZVdpZGdldCcse3diOjF9KTt9PC9zY3JpcHQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgogICAgICAgICAgICAgICAgICAgIAogICAgCiAgICAgICAgPHNwYW4gY2xhc3M9ImFiX3dpZGdldCI+CiAgICAgICAgCiAgICAKCiAgICA8ZGl2IGNsYXNzPSJhYl9tZXNzYWdlIj4KPHNwYW4gY2xhc3M9IndpZGdldF9oZWFkZXIiPiA8aDM+UmVsYXRlZCBJdGVtczwvaDM+IDwvc3Bhbj4gPGRpdiBjbGFzcz0id2lkZ2V0X2NvbnRlbnQgaW5saW5lX2JsdXJiIj4gPGRpdiBjbGFzcz0id2lkZ2V0X25lc3RlZCI+IDxkaXYgY2xhc3M9Im5pbmphX2ltYWdlX3BhY2siPiA8ZGl2IGNsYXNzPSJuaW5qYV9sZWZ0Ij4gPGRpdiBjbGFzcz0ibmluamFfaW1hZ2UgZmlyc3RfaW1hZ2UgbGFzdF9pbWFnZSIgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OmF1dG87IiA+IDxkaXYgc3R5bGU9IndpZHRoOjM4cHg7aGVpZ2h0OmF1dG87bWFyZ2luOjAgYXV0bzsiPiA8ZGl2IGNsYXNzPSJ3aWRnZXRfaW1hZ2UiPiA8ZGl2IGNsYXNzPSJpbWFnZSI+IDxhIGhyZWY9Ii9vZmZzaXRlLz9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MjY5NjMzMjg0MiZwZl9yZF9yPTBRMzVIVkgxME1ZRDJNWFZISlNIJnBmX3JkX3M9cmlnaHQtOCZwZl9yZF90PTE1MDIxJnBmX3JkX2k9dHQxMzc1NjY2JnBhZ2UtYWN0aW9uPW9mZnNpdGUtYW1hem9uJnRva2VuPUJDWWplaTN5Q3FfMFFwdlM1TmY1c2Nxdndhazhrd1U4RFlPWnVMcFVOcGVuc1lfNS15WXlROWg2a3NpUWxYOU9JbHNpZkR5QzF5ZzklMEQlMEFSR0UzYU4tQWJKN3hwcHJ4T2tuakgzTm0zemZ5cHhkYk1ReDdZeENJOEp6OXA0aTVmSzRGNDdRT1JVSTVCa0wzLUhhTU1KMDMzelNEJTBEJTBBdVUwbVFheVdBbWE2R3JOVGR0dlpuM3ltZnpIRmVoTkRYTGNzc3BuRWE1RXg0NnlpSVFpYUg1b0hvalpOVDZ3WkZXcWRVNGxBT3hNMyUwRCUwQWk4UjdTbk5PaEFWUUZMRERhbjhDdXpxd3M0ZDN5V3praHRadXk1VUNsRWh0bXQ5dFUzWXJBWmF2TzZEUGVRODVQNUJ2dk5RazJiRSUwRCUwQSZyZWZfPXR0X21zZ19pXzEiID4gPGltZyBpdGVtcHJvcD0iaW1hZ2UiIGNsYXNzPSJwcmlfaW1hZ2UiIHRpdGxlPSJTZWFyY2ggZm9yICZxdW90O0luY2VwdGlvbiZxdW90OyBvbiBBbWF6b24uY29tIiBhbHQ9IlNlYXJjaCBmb3IgJnF1b3Q7SW5jZXB0aW9uJnF1b3Q7IG9uIEFtYXpvbi5jb20iIHNyYz0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL3dpZGdldC9hbWF6b24uX1RURF9TWTM4X1NYMzhfQUxfLnBuZyIgZGF0YS1zcmMteDI9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy93aWRnZXQvYW1hem9uLl9UVERfU1kzOF9TWDM4X0FMX1VZNzZfVVg3Nl9BTF8ucG5nIiAvPiA8L2E+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8L2Rpdj4gPC9kaXY+IDwvZGl2PiA8ZGl2IGNsYXNzPSJuaW5qYV9pbWFnZSBuaW5qYV9pbWFnZV9maXhlZF9wYWRkaW5nIHdpZGdldF9wYWRkaW5nIj48L2Rpdj48ZGl2IGNsYXNzPSJ3aWRnZXRfaW5saW5lX2JsdXJiIj48cCBjbGFzcz0iYmx1cmIiPlNlYXJjaCBmb3IgIjxhIGhyZWY9Ii9vZmZzaXRlLz9wZl9yZF9tPUEyRkdFTFVVTk9RSk5MJnBmX3JkX3A9MjY5NjMzMjg0MiZwZl9yZF9yPTBRMzVIVkgxME1ZRDJNWFZISlNIJnBmX3JkX3M9cmlnaHQtOCZwZl9yZF90PTE1MDIxJnBmX3JkX2k9dHQxMzc1NjY2JnBhZ2UtYWN0aW9uPW9mZnNpdGUtYW1hem9uJnRva2VuPUJDWWlEUGZJOXhhdjhoZmNpWVo4STluRzRXQjN4M1VjZE5YVUlfbGViNUJfMWh6WV9NcGlodDQwRXZvdkZxb0oxa25HNGNrM0RYMzAlMEQlMEFhU2FHdUJhVFlLZGNJWWZrWXlfSFVpS2o5eExYV1pkcnRKV1VkVVluRDVEZHdvaUVzZGxfOUFRdlpBb1NEa2liU3A2ZmtZcVF1YzJ5JTBEJTBBLVdaeHJXaVZXZ0tRdHNnZ3VzMEVsSlc4UjRoUlJWdUp4cFhfVThfZmxjdHhVYmJCZkkxZnhrTU04MXhibWRZQjlrSHB1T0JQNVBHcyUwRCUwQXpDVHF3RGEyemVmS01YRnBtR2cxSzg3TzlSWDdRaTM0N0tSdGhzQ21uSy1VZVQxQzJsczRHejV0VVM1Y0ljWlF2ajNLNEVYc1FPYyUwRCUwQSZyZWZfPXR0X21zZ19vdiI+SW5jZXB0aW9uPC9hPiIgb24gPGEgaHJlZj0iL29mZnNpdGUvP3BmX3JkX209QTJGR0VMVVVOT1FKTkwmcGZfcmRfcD0yNjk2MzMyODQyJnBmX3JkX3I9MFEzNUhWSDEwTVlEMk1YVkhKU0gmcGZfcmRfcz1yaWdodC04JnBmX3JkX3Q9MTUwMjEmcGZfcmRfaT10dDEzNzU2NjYmcGFnZS1hY3Rpb249b2Zmc2l0ZS1hbWF6b24mdG9rZW49QkNZcEV6TkxFNEdlTXRpaS0wRk00R3djc2I3Mklqd25VdWkyel9Wb19qXzBheDUtQTFDb3BKMGNxUDdLRmJld1F6Q0V1Z3h4YTZxOSUwRCUwQTFuQ3FkMUpVdzlHTGY5enBOVGxwb0FhamNvOC1ZMmFFTV82d01kbWx0T29BQnppSERMZDlWMUJLd2lCVTFJcXpJVnlEWnQ2M1hrOXUlMEQlMEFyM3c5QVVrdlRPRlI5WTJIU1lJWjZUaFNZOXI3bTdhU3hTV2NiV2FYRndvRkxDS3BKQnM5YzZyVXdhcVNqaXRPWmVEZHZkZml2eEpuJTBEJTBBblVkTVdIdDR5UGZ3RFhhWGpDa1d6bDc3UGFwN2lmM2JnMTQ3V0I1aU12WDN1QlBmQkhhRTlJXy1PLUNIN1EyYlcySTlHSFc2UUxZJTBEJTBBJnJlZl89dHRfbXNnX292Ij5BbWF6b24uY29tPC9hPjwvcD4gPC9kaXY+IDwvZGl2PiAgICA8L2Rpdj4KICAgIAoKICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9zcGFuPgoKCgogICAgICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgICAgICAgICBpZih0eXBlb2YgdWV4ID09PSAnZnVuY3Rpb24nKXt1ZXgoJ2xkJywnTWVzc2FnZVdpZGdldCcse3diOjF9KTt9CiAgICAgICAgICAgIDwvc2NyaXB0PgogICAgICAgIAoKCgoKICAgICAgICA8L2Rpdj4KICAgIAoKCQoJPCEtLSBubyBjb250ZW50IHJlY2VpdmVkIGZvciBzbG90OiBidGZfcmhzMSAtLT4KCQoKCiAgICAKICAgIAogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIkNvbm5lY3RXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICA8ZGl2IGNsYXNzPSJtaW5pLWFydGljbGUiPgogICAgICAgIDxoMz5Db25uZWN0IHdpdGggSU1EYjwvaDM+CiAgICAgICAgPGRpdiBpZD0iZmFjZWJvb2tXcmFwcGVyIj4KICAgICAgICAgICAgPGlmcmFtZQogICAgICAgICAgICAgICAgc2Nyb2xsaW5nPSJubyIKICAgICAgICAgICAgICAgIGZyYW1lYm9yZGVyPSIwIgogICAgICAgICAgICAgICAgaWQ9ImZhY2Vib29rSWZyYW1lIgogICAgICAgICAgICAgICAgYWxsb3dUcmFuc3BhcmVuY3k9InRydWUiPjwvaWZyYW1lPgogICAgICAgIDwvZGl2PgogICAgICAgIDxocj4KICAgICAgICA8aWZyYW1lIGFsbG93dHJhbnNwYXJlbmN5PSJ0cnVlIgogICAgICAgICAgICBmcmFtZWJvcmRlcj0iMCIKICAgICAgICAgICAgcm9sZT0icHJlc2VudGF0aW9uIgogICAgICAgICAgICBzY3JvbGxpbmc9Im5vIgogICAgICAgICAgICBpZD0idHdpdHRlcklmcmFtZSI+PC9pZnJhbWU+CiAgICA8L2Rpdj4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJDb25uZWN0V2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIkNvbm5lY3RXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CgoKICAgIAogICAgCiAgICAKCgogIAogICAgICAKICAgIDxkaXYgY2xhc3M9Im1pbmktYXJ0aWNsZSI+CiAgICAgICAgPGRpdiBpZD0icmF0aW5nV2lkZ2V0Ij4KICAgICAgICAgICAgPGgzPlNoYXJlIHRoaXMgUmF0aW5nPC9oMz4KICAgICAgICAgICAgPHA+CiAgICAgICAgICAgICAgICBUaXRsZToKICAgICAgICAgICAgICAgIDxzdHJvbmc+SW5jZXB0aW9uPC9zdHJvbmc+CiAgICAgICAgICAgICAgICAoMjAxMCkKICAgICAgICAgICAgPC9wPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iaW1kYlJhdGluZ1BsdWdpbiBpbWRiUmF0aW5nU3R5bGUxIiBkYXRhLXVzZXI9IiIgZGF0YS10aXRsZT0idHQxMzc1NjY2IiBkYXRhLXN0eWxlPSJ0MSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvP3JlZl89dHRfcGxnX3J0Igo+IDxpbWcgYWx0PSJJbmNlcHRpb24gKDIwMTApIG9uIElNRGIiCnNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL3BsdWdpbnMvaW1kYl80NngyMi0yMjY0NDczMjU0Ll9UVERfIj4KPC9hPiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icmF0aW5nIj44Ljg8c3BhbiBjbGFzcz0ib2ZUZW4iPi8xMDwvc3Bhbj48L3NwYW4+ICAgICAgICAgICAgICAgIAo8aW1nIHNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL3BsdWdpbnMvaW1kYl9zdGFyXzIyeDIxLTI4ODkxNDc4NTUuX0NCNTI3MDQ2NTQ3Xy5wbmciIGNsYXNzPSJzdGFyIj4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICA8cD5XYW50IHRvIHNoYXJlIElNRGIncyByYXRpbmcgb24geW91ciBvd24gc2l0ZT8gVXNlIHRoZSBIVE1MIGJlbG93LjwvcD4KICAgICAgICAgICAgPGRpdiBpZD0icmF0aW5nUGx1Z2luSFRNTCIgY2xhc3M9ImhpZGRlbiI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXNzYWdlX2JveCBzbWFsbCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXJyb3IiPgogICAgICAgICAgICAgICAgICAgICAgICA8cD4KICAgICAgICAgICAgICAgICAgICAgICAgWW91IG11c3QgYmUgYSByZWdpc3RlcmVkIHVzZXIgdG8gdXNlIHRoZSBJTURiIHJhdGluZyBwbHVnaW4uCiAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3JlZl89dHRfcGxnX3J0IgpjbGFzcz0iY2JveEVsZW1lbnQiIHJlbD0nbG9naW4nPkxvZ2luPC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGlkPSJyYXRpbmdXaWRnZXRMaW5rcyI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idGl0bGVQYWdlU3ByaXRlIGFycm93cyBzaG93Ij48L3NwYW4+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvcGx1Z2lucz90aXRsZUlkPXR0MTM3NTY2NiZyZWZfPXR0X3BsZ19ydCIKaWQ9InRvZ2dsZVJhdGluZ1BsdWdpbkhUTUwiIGl0ZW1wcm9wPSd1cmwnID5TaG93IEhUTUw8L2E+CiAgICAgICAgICAgICAgICA8YSBocmVmPSIvcGx1Z2lucz90aXRsZUlkPXR0MTM3NTY2NiZyZWZfPXR0X3BsZ19ydCIKaXRlbXByb3A9J3VybCc+VmlldyBtb3JlIHN0eWxlczwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KCgogICAgCiAgICAKICAgIAoKCiAgICAKICAgIAogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlTWFpbkRldGFpbHNSZWxhdGVkUG9sbHMiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZU1haW5EZXRhaWxzUmVsYXRlZFBvbGxzX3N0YXJ0ZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPGRpdiBjbGFzcz0ibWluaS1hcnRpY2xlIHBvbGwtd2lkZ2V0LXJocyAiPgogICAgPHN0eWxlPgogICAgICAgIC5taW5pLWFydGljbGUucG9sbC13aWRnZXQtcmhzIHVsIGxpIHsgbWFyZ2luLWJvdHRvbTogMC41ZW07IGNsZWFyOiBsZWZ0OyBmb250LXdlaWdodDogYm9sZDt9CiAgICAgICAgLm1pbmktYXJ0aWNsZS5wb2xsLXdpZGdldC1yaHMgc3BhbiB7IG1hcmdpbi1ib3R0b206IDAuNWVtOyBjbGVhcjogbGVmdDt9CiAgICAgICAgLm1pbmktYXJ0aWNsZS5wb2xsLXdpZGdldC1yaHMgaW1nIHsgZmxvYXQ6IGxlZnQ7IHBhZGRpbmc6IDAgNXB4IDVweCAwOyBoZWlnaHQ6IDg2cHg7IHdpZHRoOiA4NnB4O30KICAgIDwvc3R5bGU+CiAgICA8aDM+VXNlciBQb2xsczwvaDM+CiAgICA8dWw+CiAgICAgICAgPGxpPgo8YSBocmVmPSIvcG9sbC91Y3lrSFVQaWNuVS8/cmVmXz10dF9wb19pMSIKPjxpbWcgaGVpZ2h0PSI4NiIgd2lkdGg9Ijg2IiBhbHQ9InBvbGwgaW1hZ2UiIHRpdGxlPSJwb2xsIGltYWdlInNyYz0iaHR0cDovL2kuaW1kYi5jb20vaW1hZ2VzL25vcGljdHVyZS8xNDB4MjA5L3Vua25vd24ucG5nImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakF4TXpZM05qY3hORjVCTWw1QmFuQm5Ya0Z0WlRjd05USTVPVE0wTXdAQC5fVjFfU1g4Nl9DUjAsMCw4Niw4Nl8uanBnIiAvPjwvYT4gICAgICAgIDxhIGhyZWY9Ii9wb2xsL3VjeWtIVVBpY25VLz9yZWZfPXR0X3BvX3ExIgo+VGhpcyBDcmF6eSBUaGluZyBIYXBwZW5lZCBUbyBNZTwvYT4KICAgICAgICA8bGk+CjxhIGhyZWY9Ii9wb2xsL1FOX0ZTRUlEZHlVLz9yZWZfPXR0X3BvX2kyIgo+PGltZyBoZWlnaHQ9Ijg2IiB3aWR0aD0iODYiIGFsdD0icG9sbCBpbWFnZSIgdGl0bGU9InBvbGwgaW1hZ2Uic3JjPSJodHRwOi8vaS5pbWRiLmNvbS9pbWFnZXMvbm9waWN0dXJlLzE0MHgyMDkvdW5rbm93bi5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1QllURTRPREV3WkRVdE5ERmpPQzAwTmpBeExXRXpZVFF0WVRJMU5HVm1abUZsTmpkaUwybHRZV2RsTDJsdFlXZGxYa0V5WGtGcWNHZGVRWFZ5TmpjMU5UWXlNamdALl9WMV9TWDg2X0NSMCwwLDg2LDg2Xy5qcGciIC8+PC9hPiAgICAgICAgPGEgaHJlZj0iL3BvbGwvUU5fRlNFSURkeVUvP3JlZl89dHRfcG9fcTIiCj5Db2wgTmVlZGhhbSdzIDEwIEZhdm9yaXRlIEZpbG1zPC9hPgogICAgICAgIDxsaT4KPGEgaHJlZj0iL3BvbGwvX1N3LXlzU0U1VkkvP3JlZl89dHRfcG9faTMiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJwb2xsIGltYWdlIiB0aXRsZT0icG9sbCBpbWFnZSJzcmM9Imh0dHA6Ly9pLmltZGIuY29tL2ltYWdlcy9ub3BpY3R1cmUvMTQweDIwOS91bmtub3duLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCWldabFltRXlZVEl0TkdSall5MDBabU14TFdFek1XSXRNMlEyTmpabE5UTXdNalEzWGtFeVhrRnFjR2RlUVhWeU5EWXlNRGs1TVRVQC5fVjFfU1g4Nl9DUjAsMCw4Niw4Nl8uanBnIiAvPjwvYT4gICAgICAgIDxhIGhyZWY9Ii9wb2xsL19Tdy15c1NFNVZJLz9yZWZfPXR0X3BvX3EzIgo+SU1EYiBQb2xsIEJvYXJkIFRvcCBQaWNrcyBmb3IgU0NJLUZJPC9hPgogICAgICAgIDxsaT4KPGEgaHJlZj0iL3BvbGwvVmJxY0x5TnZKc3MvP3JlZl89dHRfcG9faTQiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJwb2xsIGltYWdlIiB0aXRsZT0icG9sbCBpbWFnZSJzcmM9Imh0dHA6Ly9pLmltZGIuY29tL2ltYWdlcy9ub3BpY3R1cmUvMTQweDIwOS91bmtub3duLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRReE5UYzNORE0yTUY1Qk1sNUJhbkJuWGtGdFpUY3dOelE1TlRRM09RQEAuX1YxLl9DUjI4LDI4LjY0OTk5Mzg5NjQ4NDM3NSwxMjcxLDE5OTEuMDAwMDMwNTE3NTc4MV9TWDg2X0NSMCwwLDg2LDg2Xy5qcGciIC8+PC9hPiAgICAgICAgPGEgaHJlZj0iL3BvbGwvVmJxY0x5TnZKc3MvP3JlZl89dHRfcG9fcTQiCj5GYXZvcml0ZSBKb3NlcGggR29yZG9uLUxldml0dCBGaWxtPzwvYT4KICAgICAgICA8bGk+CjxhIGhyZWY9Ii9wb2xsL1B0Q21aelQ4d0dNLz9yZWZfPXR0X3BvX2k1Igo+PGltZyBoZWlnaHQ9Ijg2IiB3aWR0aD0iODYiIGFsdD0icG9sbCBpbWFnZSIgdGl0bGU9InBvbGwgaW1hZ2Uic3JjPSJodHRwOi8vaS5pbWRiLmNvbS9pbWFnZXMvbm9waWN0dXJlLzE0MHgyMDkvdW5rbm93bi5wbmciY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qQXhNelkzTmpjeE5GNUJNbDVCYW5CblhrRnRaVGN3TlRJNU9UTTBNd0BALl9WMV9TWDg2X0NSMCwwLDg2LDg2Xy5qcGciIC8+PC9hPiAgICAgICAgPGEgaHJlZj0iL3BvbGwvUHRDbVp6VDh3R00vP3JlZl89dHRfcG9fcTUiCj5GYWNlLU9mZjogSW5jZXB0aW9uIFZzLiBUaGUgTWF0cml4PC9hPgogICAgICAgIDxsaT4KPGEgaHJlZj0iL3BvbGwvZUdGRlZSQmFFeVEvP3JlZl89dHRfcG9faTYiCj48aW1nIGhlaWdodD0iODYiIHdpZHRoPSI4NiIgYWx0PSJwb2xsIGltYWdlIiB0aXRsZT0icG9sbCBpbWFnZSJzcmM9Imh0dHA6Ly9pLmltZGIuY29tL2ltYWdlcy9ub3BpY3R1cmUvMTQweDIwOS91bmtub3duLnBuZyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRZME9UTTRPRE0yTUY1Qk1sNUJhbkJuWGtGdFpUZ3dNVEkwTkRJeE1ERUAuX1YxX1NYODZfQ1IwLDAsODYsODZfLmpwZyIgLz48L2E+ICAgICAgICA8YSBocmVmPSIvcG9sbC9lR0ZGVlJCYUV5US8/cmVmXz10dF9wb19xNiIKPkkgV2FudCBUbyBIb29rLVVwIE15IE1pbmQgVG8uLi48L2E+CiAgICA8L3VsPgogICAgPGRpdiBjbGFzcz0ic2VlLW1vcmUiPjxhIGhyZWY9Ii9wb2xsLz9yZWZfPXR0X3BvX3NtIgo+U2VlIG1vcmUgcG9sbHMgJnJhcXVvOzwvYT48L2Rpdj4KPC9kaXY+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZU1haW5EZXRhaWxzUmVsYXRlZFBvbGxzX2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVNYWluRGV0YWlsc1JlbGF0ZWRQb2xscyIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJUaXRsZU1haW5EZXRhaWxzUmVsYXRlZFBvbGxzIiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgoKCiAgICAKICAgIAogICAgCgoJCgk8IS0tIG5vIGNvbnRlbnQgcmVjZWl2ZWQgZm9yIHNsb3Q6IGJvdHRvbV9yaHMgLS0+CgkKCgogICAgCiAgICAKICAgIAoKCQoJPCEtLSBiZWdpbiBCVEZfUkhTMiAtLT4KPGRpdiBpZD0iYnRmX3JoczJfd3JhcHBlciIgY2xhc3M9ImNvcm5lcnN0b25lX3Nsb3QiPgo8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CmRvV2l0aEFkcyhmdW5jdGlvbigpewphZF91dGlscy5yZWdpc3Rlcl9hZCgnYnRmX3JoczInKTsKfSk7Cjwvc2NyaXB0Pgo8aWZyYW1lIGlkPSJidGZfcmhzMiIgbmFtZT0iYnRmX3JoczIiIGNsYXNzPSJ5ZXNTY3JpcHQiIHdpZHRoPSIzMDAiIGhlaWdodD0iMjUwIiBkYXRhLW9yaWdpbmFsLXdpZHRoPSIzMDAiIGRhdGEtb3JpZ2luYWwtaGVpZ2h0PSIyNTAiIG1hcmdpbndpZHRoPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIGZyYW1lYm9yZGVyPSIwIiBzY3JvbGxpbmc9Im5vIiBhbGxvd3RyYW5zcGFyZW5jeT0idHJ1ZSIgb25sb2FkPSJkb1dpdGhBZHMuY2FsbCh0aGlzLCBmdW5jdGlvbigpeyBhZF91dGlscy5vbl9hZF9sb2FkKHRoaXMpOyB9KTsiIGFsbG93ZnVsbHNjcmVlbj0idHJ1ZSI+PC9pZnJhbWU+CjwvZGl2Pgo8ZGl2IGlkPSJidGZfcmhzMl9yZWZsb3dfaGVscGVyIj48L2Rpdj4KPHNjcmlwdD4KZG9XaXRoQWRzKGZ1bmN0aW9uKCl7CmFkX3V0aWxzLmluamVjdF9zZXJ2ZXJzaWRlX2FkKCdidGZfcmhzMicsICc8c2NyaXB0PmRvY3VtZW50LmRlZmF1bHRBZCA9IHtoOjI1MCx3OjMwMH07IGRvY3VtZW50LmFkID0gZG9jdW1lbnQuZGVmYXVsdEFkOzxcL3NjcmlwdD4gPCFET0NUWVBFIGh0bWw+PGh0bWw+PGJvZHk+PHN0eWxlPi5hY3tkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO292ZXJmbG93OmhpZGRlbjt3aWR0aDoxOXB4O2hlaWdodDoxNXB4O3otaW5kZXg6OTt0b3A6MDtyaWdodDowO2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9kYS9hZGNob2ljZXMvYWMtdG9wcmlnaHQtc3ByaXRlLnBuZyl9LmFjOmhvdmVye3dpZHRoOjc3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMTlweCAwfS5oaWRle2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9I2Fke3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OmhpZGRlbjt3aWR0aDozMDBweDtoZWlnaHQ6MjUwcHg7ZGlzcGxheTpub25lfTwvc3R5bGU+PGRpdiBpZD1cImNyZWF0aXZlLXdyYXBwZXJcIiBzdHlsZT1cIndpZHRoOiAxMDAlO2hlaWdodDoyNTBweDtcIj5cbiA8YSBpZD1cImFkXCIgaHJlZj1cImh0dHA6Ly9hYXgtdXMtZWFzdC5hbWF6b24tYWRzeXN0ZW0uY29tL3gvYy9RdDVhUHdaU0NZZlNoYk5LZDhVTG9sMEFBQUZZemFnV2VBRUFBQURLQVpBb3NrQS9odHRwczovL3d3dy5hbWF6b24uY29tL2dwL3ZpZGVvL3ByaW1lc2lnbnVwL3JlZl89b19kaXNwX3dicGl2aG91X0lEMl9NblNiUHImYW1wO3RhZz1kdl9kZXZfaW1kYl9ob19ka3RwLTIwXCIgdGFyZ2V0PVwiX3RvcFwiID5cbjxpbWcgaWQ9XCJzdGF0aWNJbWFnZVwiIHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjEwMCVcIj48YSBpZD1cImxvZ29cIj48L2E+PGEgaWQ9XCJhYXBJbmZvXCIgdGFyZ2V0PVwiX2JsYW5rXCIgY2xhc3M9XCJoaWRlIGFjXCIgaHJlZj1cImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vYWRwcmVmcy9yZWY9Y3NfYWFwXzE1Njc3NjE0ODA3MDFcIj48L2E+PC9kaXY+PHNjcmlwdD5zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IWZ1bmN0aW9uKGEsZSx0KXt2YXIgbj0vXFwuYW1hem9uXFwuY29tKDouKik/JC8sYz1cInVuZGVmaW5lZFwiIT10eXBlb2YgSVNfM1AmJklTXzNQLGk9ITE7aWYoIWMpe3ZhciBvPWE7dHJ5e2Zvcig7byE9by5wYXJlbnQ7KXtpZighby5wYXJlbnQuZG9jdW1lbnQpdGhyb3cgbmV3IEVycm9yKFwiY3Jvc3MtZG9tYWluIGV4Y2VwdGlvblwiKTtvPW8ucGFyZW50fX1jYXRjaChyKXt9dHJ5e2k9by5TRkNsaWVudD9vLlNGQ2xpZW50LmlzT25BbWF6b24oKTpuLnRlc3Qoby5sb2NhdGlvbi5ob3N0KX1jYXRjaChyKXt9fXZhciBzPSFjJiYhaTtlLmFkPXthaWQ6XCI1ODQzNjE2MDgwMTAxXCIsY2lkOlwiMTU2Nzc2MTQ4MDcwMVwiLHc6MzAwLGg6MjUwLHRlbXBsYXRlOlwiSW1hZ2UtMS41NlwifSxhLmFhblJlc3BvbnNlPXthZElkOmUuYWQuYWlkLGNyZWF0aXZlSWQ6ZS5hZC5jaWQsYWROZXR3b3JrOlwicGRhXCIsc2hhemFtU3RhZ2U6XCJwcm9kXCIsc2hhemFtSWQ6XCI0NDc1MTg2XCJ9O3RyeXt0JiZ0LmFkX3V0aWxzJiZ0LmFkX3V0aWxzLmV4cGFuZF9hZChmcmFtZUVsZW1lbnQpfWNhdGNoKHIpe312YXIgZD1mdW5jdGlvbihhKXtyZXR1cm4vcy8udGVzdChhLnByb3RvY29sKX0sbT1mdW5jdGlvbihhKXtyZXR1cm4gZS5nZXRFbGVtZW50QnlJZChhKX0scD1mdW5jdGlvbihhLGUsdCl7YS5ocmVmPWUsYS50YXJnZXQ9dD9cIl9ibGFua1wiOlwiX3RvcFwifSxsPWZ1bmN0aW9uKGEsZSl7cmV0dXJuIGEuY2xhc3NOYW1lLm1hdGNoKG5ldyBSZWdFeHAoXCIoXFxcXHN8XilcIitlK1wiKFxcXFxzfCQpXCIpKX0sZj1mdW5jdGlvbihhLGUpe2woYSxlKXx8KGEuY2xhc3NOYW1lKz1cIiBcIitlKX0sdT1mdW5jdGlvbihhLGUpe2lmKGwoYSxlKSl7dmFyIHQ9bmV3IFJlZ0V4cChcIihcXFxcc3xeKVwiK2UrXCIoXFxcXHN8JClcIik7YS5jbGFzc05hbWU9YS5jbGFzc05hbWUucmVwbGFjZSh0LFwiIFwiKX19LGg9ZnVuY3Rpb24oYSl7dShhLFwiaGlkZVwiKX0sZz0oZChsb2NhdGlvbik/XCIvL2ltYWdlcy1uYS5zc2wtXCI6XCIvL2ctZWN4LlwiKStcImltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9HLzAxL1wiLF89bShcImFhcEluZm9cIiksdz1tKFwiYWRcIikseT1cInNoYXphbS9Nb2JpbGVEaXNwbGF5QmFubmVyLVBWTW9udGhseVN1Yi02MDB4NTAwLVByaWNlLUhPLS1WMjc0OTc4NzM2LS1DaDlIYy5fVjUyNjQ5NjAwMl8uanBnXCIsdj1tKFwic3RhdGljSW1hZ2VcIik7eSYmKHYuc3JjPWcreSx3LnN0eWxlLmRpc3BsYXk9XCJibG9ja1wiKTt2YXIgejtjJiZmKHcsXCJhYXBcIiksKGN8fHMpJiYody50YXJnZXQ9XCJfYmxhbmtcIiksXyYmYyYmaChfKSx6JiZwKF8sXCJodHRwczovL3d3dy5hbWF6b24uY29tL2FkcHJlZnNcIiwhMCk7dmFyIEk9YS5TRkNsaWVudDtpZihJJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiBJLmNoYW5nZVNpemUpdHJ5e0kuY2hhbmdlU2l6ZShcIjMwMHB4XCIsXCIyNTBweFwiKX1jYXRjaChyKXt9fSh3aW5kb3csZG9jdW1lbnQscGFyZW50KX0sMCk7PFwvc2NyaXB0PlxuPC9ib2R5PjwvaHRtbD48XCEtLSBjcmVhdGl2ZU1vZERhdGUgPSAxNDc5NDM2MDgwMDAwIC0tXD5cbiA8ZGl2IGlkPVwiYnRmX3JoczJfd2ViYnVnXCIgc3R5bGU9XCJkaXNwbGF5Om5vbmU7XCI+XG4gPGltZyBzcmM9XCJodHRwOi8vYWF4LXVzLWVhc3QuYW1hem9uLWFkc3lzdGVtLmNvbS9lL2xvaS9pbXA/Yj1JTWZwMFBHRlcwaHV0Y2pBUVg1WmtrTUFBQUZZemFnV3ZBRUFBQURLZk1PZFlnXCIgYm9yZGVyPVwiMFwiIGhlaWdodD1cIjFcIiB3aWR0aD1cIjFcIiBhbHQ9XCJcIi8+XG4gPC9kaXY+XG4nKTsKfSwidW5hYmxlIHRvIGluamVjdCBzZXJ2ZXJzaWRlIGFkIik7Cjwvc2NyaXB0PgoJCgoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICA8L2Rpdj4gCgogICAgPGRpdiBpZD0ibWFpbl9ib3R0b20iIGNsYXNzPSJtYWluIj4KCiAgICAKICAgIAogICAgCgoKCiAgICAKICAgIAogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlQXdhcmRzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVBd2FyZHNXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgICA8ZGl2IGNsYXNzPSJhcnRpY2xlIGhpZ2hsaWdodGVkIiBpZD0idGl0bGVBd2FyZHNSYW5rcyI+CiAgICAgICAgICA8c3Ryb25nPgo8YSBocmVmPSIvY2hhcnQvdG9wP3JlZl89dHRfYXdkIgo+IFRvcCBSYXRlZCBNb3ZpZXMgIzE0CjwvYT4gICAgICAgICAgPC9zdHJvbmc+CiAgICAgICAgICB8Cgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlQXdhcmRzU3VtbWFyeVdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlQXdhcmRzU3VtbWFyeVdpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICA8c3BhbiBpdGVtcHJvcD0iYXdhcmRzIj4KICAgICAgPGI+CiAgICAgICAgV29uCiAgICAgICAgNAogICAgICAgIE9zY2Fycy4KICAgICAgPC9iPgogICAgPC9zcGFuPgogICAgPHNwYW4gaXRlbXByb3A9ImF3YXJkcyI+CiAgICAgICAgQW5vdGhlcgogICAgICAxNDQgd2lucyAmYW1wOyAxOTggbm9taW5hdGlvbnMuCiAgICA8L3NwYW4+CiAgICA8c3BhbiBjbGFzcz0ic2VlLW1vcmUgaW5saW5lIj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9hd2FyZHM/cmVmXz10dF9hd2QiCmNsYXNzPSJidG4tZnVsbCIgPlNlZSBtb3JlIGF3YXJkczwvYT4mbmJzcDsmcmFxdW87ICAgIDwvc3Bhbj4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlQXdhcmRzU3VtbWFyeVdpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIlRpdGxlQXdhcmRzU3VtbWFyeVdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJUaXRsZUF3YXJkc1N1bW1hcnlXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVBd2FyZHNXaWRnZXRfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJUaXRsZUF3YXJkc1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJUaXRsZUF3YXJkc1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgIAoKCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmIiLCAiVGl0bGVNZWRpYVN0cmlwV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVNZWRpYVN0cmlwV2lkZ2V0X3N0YXJ0ZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KCgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVNZWRpYVN0cmlwV2lkZ2V0X3N0YXJ0ZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KCiAgICAgIDxkaXYgY2xhc3MgPSAiYXJ0aWNsZSIgaWQ9InRpdGxlTWVkaWFTdHJpcCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibWVkaWFzdHJpcF9jb250YWluZXIgY29tYmluZWQiPgogICAgICAgICAgICAgICAgPGRpdiBpZD0iY29tYmluZWQtdmlkZW9zIj4KICAgICAgICAgICAgICAgICAgICA8aDI+VmlkZW9zPC9oMj4KICAgIDxkaXYgY2xhc3M9Im1lZGlhc3RyaXBfYmlnIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ2aWRlb19zbGF0ZSIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy92aWRlb09iamVjdCI+CiAgICAgICAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0iZHVyYXRpb24iIGNvbnRlbnQ9IlQxTTE0UyIgLz4KCjxhIGhyZWY9Ii92aWRlby9zY3JlZW5wbGF5L3ZpMzc5Mzg5NDY1P3JlZl89dHRfcHZfdmlfYWl2XzEiCnRpdGxlPSJJbmNlcHRpb24gLS0gQ2xpcDogRG9uJ3QgYmUgYWZyYWlkIHRvIGRyZWFtIGEgbGl0dGxlIGJpZ2dlciIgYWx0PSJJbmNlcHRpb24gLS0gQ2xpcDogRG9uJ3QgYmUgYWZyYWlkIHRvIGRyZWFtIGEgbGl0dGxlIGJpZ2dlciIgY2xhc3M9InZpZGVvLW1vZGFsIiBkYXRhLXZpZGVvPSJ2aTM3OTM4OTQ2NSIgZGF0YS1jb250ZXh0PSJzY3JlZW5wbGF5IiBkYXRhLXJpZD0iMFEzNUhWSDEwTVlEMk1YVkhKU0giIHdpZGdldC1jb250ZXh0PSJ0aXRsZU1haW5kZXRhaWxzIiBpdGVtcHJvcD0idXJsIiA+PGltZyBoZWlnaHQ9IjEwNSIgd2lkdGg9IjEzOSIgYWx0PSJJbmNlcHRpb24gLS0gQ2xpcDogRG9uJ3QgYmUgYWZyYWlkIHRvIGRyZWFtIGEgbGl0dGxlIGJpZ2dlciIgdGl0bGU9IkluY2VwdGlvbiAtLSBDbGlwOiBEb24ndCBiZSBhZnJhaWQgdG8gZHJlYW0gYSBsaXR0bGUgYmlnZ2VyInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC9uby12aWRlby1zbGF0ZS04NTYwNzI5MDQuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiB2aWRlbyIgbG9hZGxhdGU9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvTS9NVjVCTVRNd05qRXdNRFF3TUY1Qk1sNUJhbkJuWGtGdFpUY3dNVE0zTmpRMk13QEAuX1YxX1NQMjI5LDIyOSwwLEMsMCwwLDBfQ1I0NSw2MiwxMzksMTA1X1BJaW1kYi1ibGFja2JhbmQtMjA0LTE0LFRvcExlZnQsMCwwX1BJaW1kYi1ibGFja2JhbmQtMjA0LTI4LEJvdHRvbUxlZnQsMCwxX0NSMCwwLDEzOSwxMDVfUElpbWRiLWJsdWVidXR0b24tYmlnLEJvdHRvbVJpZ2h0LC0xLC0xX1pBQ2xpcCwyLDc2LDE2LDEzNyx2ZXJkZW5hYiw4LDI1NSwyNTUsMjU1LDFfWkFvbiUyNTIwSU1EYiwyLDEsMTQsMTM3LHZlcmRlbmFiLDcsMjU1LDI1NSwyNTUsMV9aQTAxOjE0LDEwMywxLDE0LDM2LHZlcmRlbmFiLDcsMjU1LDI1NSwyNTUsMV8uanBnIiBpdGVtcHJvcD0naW1hZ2UnIHZpY29uc3Q9InZpMzc5Mzg5NDY1IiAvPjwvYT4gICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idmlkZW9fc2xhdGVfbGFzdCIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy92aWRlb09iamVjdCI+CiAgICAgICAgICAgICAgICA8bWV0YSBpdGVtcHJvcD0iZHVyYXRpb24iIGNvbnRlbnQ9IlQyTTM1UyIgLz4KCjxhIGhyZWY9Ii92aWRlby9pbWRiL3ZpMzM5OTc4NTI0MT9yZWZfPXR0X3B2X3ZpX2Fpdl8yIgp0aXRsZT0iSW5jZXB0aW9uIC0tIEluY2VwdGlvbjogQmVoaW5kIHRoZSBTY2VuZXMgRmVhdHVyZXR0ZSIgYWx0PSJJbmNlcHRpb24gLS0gSW5jZXB0aW9uOiBCZWhpbmQgdGhlIFNjZW5lcyBGZWF0dXJldHRlIiBjbGFzcz0idmlkZW8tbW9kYWwiIGRhdGEtdmlkZW89InZpMzM5OTc4NTI0MSIgZGF0YS1jb250ZXh0PSJpbWRiIiBkYXRhLXJpZD0iMFEzNUhWSDEwTVlEMk1YVkhKU0giIHdpZGdldC1jb250ZXh0PSJ0aXRsZU1haW5kZXRhaWxzIiBpdGVtcHJvcD0idXJsIiA+PGltZyBoZWlnaHQ9IjEwNSIgd2lkdGg9IjEzOSIgYWx0PSJJbmNlcHRpb24gLS0gSW5jZXB0aW9uOiBCZWhpbmQgdGhlIFNjZW5lcyBGZWF0dXJldHRlIiB0aXRsZT0iSW5jZXB0aW9uIC0tIEluY2VwdGlvbjogQmVoaW5kIHRoZSBTY2VuZXMgRmVhdHVyZXR0ZSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvbm8tdmlkZW8tc2xhdGUtODU2MDcyOTA0Ll9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gdmlkZW8iIGxvYWRsYXRlPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL00vTVY1Qk1UY3hOVEEyT1RrMU5sNUJNbDVCYW5CblhrRnRaVGd3TURVMU5qZzRNakVALl9WMV9TUDIyOSwyMjksMCxDLDAsMCwwX0NSNDUsNjIsMTM5LDEwNV9QSWltZGItYmxhY2tiYW5kLTIwNC0xNCxUb3BMZWZ0LDAsMF9QSWltZGItYmxhY2tiYW5kLTIwNC0yOCxCb3R0b21MZWZ0LDAsMV9DUjAsMCwxMzksMTA1X1BJaW1kYi1ibHVlYnV0dG9uLWJpZyxCb3R0b21SaWdodCwtMSwtMV9aQUZlYXR1cmV0dGUsMiw3NiwxNiwxMzcsdmVyZGVuYWIsOCwyNTUsMjU1LDI1NSwxX1pBb24lMjUyMElNRGIsMiwxLDE0LDEzNyx2ZXJkZW5hYiw3LDI1NSwyNTUsMjU1LDFfWkEwMjozNSwxMDMsMSwxNCwzNix2ZXJkZW5hYiw3LDI1NSwyNTUsMjU1LDFfUElpbWRiLUhESWNvbk1pbmlXaGl0ZSxCb3R0b21MZWZ0LDIsLTJfLmpwZyIgaXRlbXByb3A9J2ltYWdlJyB2aWNvbnN0PSJ2aTMzOTk3ODUyNDEiIC8+PC9hPiAgICAgICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGlkPSJjb21iaW5lZC1waG90b3MiPgogICAgICAgICAgICAgICAgICAgIDxoMj5QaG90b3M8L2gyPgogICAgPGRpdiBjbGFzcz0ibWVkaWFzdHJpcCI+ICAgICAgICAJCiAgICAgICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9tZWRpYXZpZXdlci9ybTkzNTI5Nzc5Mj9jb250ZXh0PWRlZmF1bHQmcmVmXz10dF9wdl9tZF8xIgppdGVtcHJvcD0ndGh1bWJuYWlsVXJsJz48aW1nIGhlaWdodD0iMTA1IiB3aWR0aD0iMTA1IiBhbHQ9Ikxlb25hcmRvIERpQ2FwcmlvIGluIEluY2VwdGlvbiAoMjAxMCkiIHRpdGxlPSJMZW9uYXJkbyBEaUNhcHJpbyBpbiBJbmNlcHRpb24gKDIwMTApInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC91bmtub3duLTEzOTQ4NDY4MzYuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qRXhNamt3TlRRME5sNUJNbDVCYW5CblhrRnRaVGN3TlRZME9UazFNd0BALl9WMV9VWDEwNV9DUjAsMCwxMDUsMTA1X0FMXy5qcGciIGl0ZW1wcm9wPSdpbWFnZScgLz48L2E+ICAgICAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L21lZGlhdmlld2VyL3JtNDUzOTM1ODcyP2NvbnRleHQ9ZGVmYXVsdCZyZWZfPXR0X3B2X21kXzIiCml0ZW1wcm9wPSd0aHVtYm5haWxVcmwnPjxpbWcgaGVpZ2h0PSIxMDUiIHdpZHRoPSIxMDUiIGFsdD0iTGVvbmFyZG8gRGlDYXByaW8gYXQgSW5jZXB0aW9uICgyMDEwKSIgdGl0bGU9Ikxlb25hcmRvIERpQ2FwcmlvIGF0IEluY2VwdGlvbiAoMjAxMCkic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL3Vua25vd24tMTM5NDg0NjgzNi5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRnNU1UTTFORGs0TkY1Qk1sNUJhbkJuWGtGdFpUY3dOVFF5T0RVMk13QEAuX1YxX1VYMTA1X0NSMCwwLDEwNSwxMDVfQUxfLmpwZyIgaXRlbXByb3A9J2ltYWdlJyAvPjwvYT4gICAgICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbWVkaWF2aWV3ZXIvcm05MTg1MjA1NzY/Y29udGV4dD1kZWZhdWx0JnJlZl89dHRfcHZfbWRfMyIKaXRlbXByb3A9J3RodW1ibmFpbFVybCc+PGltZyBoZWlnaHQ9IjEwNSIgd2lkdGg9IjEwNSIgYWx0PSJJbmNlcHRpb24gKDIwMTApIiB0aXRsZT0iSW5jZXB0aW9uICgyMDEwKSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvdW5rbm93bi0xMzk0ODQ2ODM2Ll9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNVE0wTWpVek5qa3dNbDVCTWw1QmFuQm5Ya0Z0WlRjd05qWTBPVGsxTXdAQC5fVjFfVVgxMDVfQ1IwLDAsMTA1LDEwNV9BTF8uanBnIiBpdGVtcHJvcD0naW1hZ2UnIC8+PC9hPiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb21iaW5lZC1zZWUtbW9yZSBzZWUtbW9yZSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbWVkaWFpbmRleD9yZWZfPXR0X3B2X21pX3NtIgo+PHNwYW4gY2xhc3M9InRpdGxlUGFnZVNwcml0ZSBzaG93QWxsVmlkc0FuZFBpY3MiPjwvc3Bhbj48L2E+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbWVkaWFpbmRleD9yZWZfPXR0X3B2X21pX3NtIgo+MjE1IHBob3RvczwvYT4KPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L3ZpZGVvZ2FsbGVyeT9yZWZfPXR0X3B2X3ZpX3NtIgo+MTcgdmlkZW9zPC9hPgo8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvbmV3cz9yZWZfPXR0X3B2X253X3NtIgo+MTA1MjMgbmV3cyBhcnRpY2xlczwvYT4gJnJhcXVvOyAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlTWVkaWFTdHJpcFdpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVNZWRpYVN0cmlwV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVNZWRpYVN0cmlwV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIlRpdGxlTWVkaWFTdHJpcFdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJUaXRsZVJlY3NXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZVJlY3NXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgCiAgICAgICAgPGRpdiBjbGFzcz0iYXJ0aWNsZSIgaWQ9InRpdGxlUmVjcyI+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJyaWdodGNvcm5lcmxpbmsiPgogICAgICAgICAgICA8YSBocmVmPSIvaGVscC9zaG93X2xlYWY/cGVyc29uYWxyZWNvbW1lbmRhdGlvbnMmcmVmXz10dF9yZWNfbG0iCj5MZWFybiBtb3JlPC9hPgogICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgIAogICAgICAgICAgICA8aDIgY2xhc3M9InJlY19oZWFkaW5nX3dyYXBwZXIiPiAgCiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0icmVjX2hlYWRpbmciIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQxMzc1NjY2Ij5QZW9wbGUgd2hvIGxpa2VkIHRoaXMgYWxzbyBsaWtlZC4uLiZuYnNwOzwvc3Bhbj4KICAgICAgICAgICAgPC9oMj4KCiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY193cmFwcGVyIiBpZD0idGl0bGVfcmVjcyIKICAgICAgICAgICAgICAgIGRhdGEtaXRlbXMtcGVyLXJlcXVlc3Q9IjI0IgogICAgICAgICAgICAgICAgZGF0YS1pdGVtcy1wZXItcGFnZT0iNiIKICAgICAgICAgICAgICAgIGRhdGEtc3BlY3M9InAxM25zaW1zOnR0MTM3NTY2NiIKICAgICAgICAgICAgICAgIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIj4gICAgICAKICAgICAgICAgICAgICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2NvbnN0X3BpY2tlciI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX3ZpZXciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZ3JhdmUiIHN0eWxlPSJkaXNwbGF5Om5vbmUiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfc2xpZGUiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfcGFnZSI+ICAgICAgICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MTM3NTY2NiIgZGF0YS10Y29uc3Q9InR0MDQ2ODU2OSI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDQ2ODU2OS8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IlRoZSBEYXJrIEtuaWdodCIgdGl0bGU9IlRoZSBEYXJrIEtuaWdodCJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvZmlsbS0yOTM5NzA1ODMuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRNeE5UTXdPRE0wTkY1Qk1sNUJhbkJuWGtGdFpUY3dPREF5TVRrMk13QEAuX1YxX1VZMTEzX0NSMCwwLDc2LDExM19BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfaXRlbSIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQxMzc1NjY2IiBkYXRhLXRjb25zdD0idHQwMTM3NTIzIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwMTM3NTIzLz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTEzIiB3aWR0aD0iNzYiIGFsdD0iRmlnaHQgQ2x1YiIgdGl0bGU9IkZpZ2h0IENsdWIic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk16YzFZbVUyWmpFdFlXSXdNQzAwWmpNM0xXSTBOVGN0TURWbE5HUTNZbVl3TXpFNVhrRXlYa0ZxY0dkZVFYVnlNVFF4TnpNek5ESUAuX1YxX1VZMTEzX0NSMiwwLDc2LDExM19BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfaXRlbSIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQxMzc1NjY2IiBkYXRhLXRjb25zdD0idHQwMTA5ODMwIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwMTA5ODMwLz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTEzIiB3aWR0aD0iNzYiIGFsdD0iRm9ycmVzdCBHdW1wIiB0aXRsZT0iRm9ycmVzdCBHdW1wInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC9maWxtLTI5Mzk3MDU4My5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJZVGhqTTJNd1pHTXRNemczTnkwME5HUmtMV0U0TTJFdFlUQmlOV016T1RZMFlUSTRYa0V5WGtGcWNHZGVRWFZ5TkRZeU1EazVNVFVALl9WMV9VWTExM19DUjUsMCw3NiwxMTNfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MTM3NTY2NiIgZGF0YS10Y29uc3Q9InR0MDgxNjY5MiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDgxNjY5Mi8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IkludGVyc3RlbGxhciIgdGl0bGU9IkludGVyc3RlbGxhciJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvZmlsbS0yOTM5NzA1ODMuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTWpJeE5UVTRNelk0TUY1Qk1sNUJhbkJuWGtGdFpUZ3dNek00T0RJM01qRUAuX1YxX1VYNzZfQ1IwLDAsNzYsMTEzX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19pdGVtIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDEzNzU2NjYiIGRhdGEtdGNvbnN0PSJ0dDAxMzMwOTMiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAxMzMwOTMvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxMTMiIHdpZHRoPSI3NiIgYWx0PSJUaGUgTWF0cml4IiB0aXRsZT0iVGhlIE1hdHJpeCJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvZmlsbS0yOTM5NzA1ODMuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTURNeU1tUTVZemd0WVdNeE9DMDBPVFUwTFdJd1pqRXRaV1V3WVRZNU1qVmtaamhoWGtFeVhrRnFjR2RlUVhWeU5EWXlNRGs1TVRVQC5fVjFfVVkxMTNfQ1IzLDAsNzYsMTEzX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19pdGVtIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDEzNzU2NjYiIGRhdGEtdGNvbnN0PSJ0dDAxNjcyNjAiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAxNjcyNjAvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxMTMiIHdpZHRoPSI3NiIgYWx0PSJUaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBSZXR1cm4gb2YgdGhlIEtpbmciIHRpdGxlPSJUaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBSZXR1cm4gb2YgdGhlIEtpbmcic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qRTRNakExTlRBeU1WNUJNbDVCYW5CblhrRnRaVGN3TnpNMU5EUXlNUUBALl9WMV9VWTExM19DUjAsMCw3NiwxMTNfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfcGFnZSI+ICAgICAgICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MTM3NTY2NiIgZGF0YS10Y29uc3Q9InR0MTM0NTgzNiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MTM0NTgzNi8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IlRoZSBEYXJrIEtuaWdodCBSaXNlcyIgdGl0bGU9IlRoZSBEYXJrIEtuaWdodCBSaXNlcyJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvZmlsbS0yOTM5NzA1ODMuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRrNE9EUXpORFkzTWw1Qk1sNUJhbkJuWGtGdFpUY3dPREEwTlRNNE53QEAuX1YxX1VZMTEzX0NSMCwwLDc2LDExM19BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfaXRlbSIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQxMzc1NjY2IiBkYXRhLXRjb25zdD0idHQxODUzNzI4Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQxODUzNzI4Lz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTEzIiB3aWR0aD0iNzYiIGFsdD0iRGphbmdvIFVuY2hhaW5lZCIgdGl0bGU9IkRqYW5nbyBVbmNoYWluZWQic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qSXlOVFE1TmpRMU9WNUJNbDVCYW5CblhrRnRaVGN3T0RnMU1EVTRPQUBALl9WMV9VWTExM19DUjAsMCw3NiwxMTNfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MTM3NTY2NiIgZGF0YS10Y29uc3Q9InR0MDExMDkxMiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDExMDkxMi8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IlB1bHAgRmljdGlvbiIgdGl0bGU9IlB1bHAgRmljdGlvbiJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvc21hbGwvZmlsbS0yOTM5NzA1ODMuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRreE1UQTVPVEF6TWw1Qk1sNUJhbkJuWGtGdFpUZ3dOakE1TURjM05qRUAuX1YxX1VZMTEzX0NSMCwwLDc2LDExM19BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfaXRlbSIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQxMzc1NjY2IiBkYXRhLXRjb25zdD0idHQwMTY3MjYxIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwMTY3MjYxLz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTEzIiB3aWR0aD0iNzYiIGFsdD0iVGhlIExvcmQgb2YgdGhlIFJpbmdzOiBUaGUgVHdvIFRvd2VycyIgdGl0bGU9IlRoZSBMb3JkIG9mIHRoZSBSaW5nczogVGhlIFR3byBUb3dlcnMic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL3NtYWxsL2ZpbG0tMjkzOTcwNTgzLl9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UQXlORFUwTmpZNE5UaGVRVEplUVdwd1oxNUJiV1UyTURrNE1UWTJOd0BALl9WMV9VWTExM19DUjAsMCw3NiwxMTNfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX2l0ZW0iIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MTM3NTY2NiIgZGF0YS10Y29uc3Q9InR0MDEyMDczNyI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDEyMDczNy8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjExMyIgd2lkdGg9Ijc2IiBhbHQ9IlRoZSBMb3JkIG9mIHRoZSBSaW5nczogVGhlIEZlbGxvd3NoaXAgb2YgdGhlIFJpbmciIHRpdGxlPSJUaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBGZWxsb3dzaGlwIG9mIHRoZSBSaW5nInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC9maWxtLTI5Mzk3MDU4My5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJOVEV5TWpBd01EVTFPVjVCTWw1QmFuQm5Ya0Z0WlRjd05EUXlOVGt4TXdAQC5fVjFfVVkxMTNfQ1IwLDAsNzYsMTEzX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19pdGVtIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDEzNzU2NjYiIGRhdGEtdGNvbnN0PSJ0dDA5OTM4NDYiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDA5OTM4NDYvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxMTMiIHdpZHRoPSI3NiIgYWx0PSJUaGUgV29sZiBvZiBXYWxsIFN0cmVldCIgdGl0bGU9IlRoZSBXb2xmIG9mIFdhbGwgU3RyZWV0InNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9zbWFsbC9maWxtLTI5Mzk3MDU4My5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakl4TWpneE5UazBNRjVCTWw1QmFuQm5Ya0Z0WlRnd05qSXlPVGcyTURFQC5fVjFfVVkxMTNfQ1IwLDAsNzYsMTEzX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19uYXYiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX25hdl9wYWdlX251bSI+PC9kaXY+CiAgICAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX25hdl9sZWZ0Ij4mIzk2Njg7IFByZXYgNjwvYT4KICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmF2X3JpZ2h0Ij5OZXh0IDYgJiM5NjU4OzwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIAogICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcnZpZXdzIj4KCiAgICAgICAgIAogICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcnZpZXciIGRhdGEtdGNvbnN0PSJ0dDA0Njg1NjkiPgogICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX3Bvc3RlciIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQxMzc1NjY2IiBkYXRhLXRjb25zdD0idHQwNDY4NTY5Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwNDY4NTY5Lz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTkwIiB3aWR0aD0iMTI4IiBhbHQ9IlRoZSBEYXJrIEtuaWdodCIgdGl0bGU9IlRoZSBEYXJrIEtuaWdodCJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRNeE5UTXdPRE0wTkY1Qk1sNUJhbkJuWGtGdFpUY3dPREF5TVRrMk13QEAuX1YxX1VZMTkwX0NSMCwwLDEyOCwxOTBfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25zIj4KICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3bGJfY2xhc3NpY193cmFwcGVyIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3bGJfd3JhcHBlciI+CiAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfd2xiX3dhdGNobGlzdF9idG4iIGRhdGEtdGNvbnN0PSJ0dDA0Njg1NjkiIGRhdGEtc2l6ZT0ibWVkaXVtIiBkYXRhLWNhbGxlci1uYW1lPSJwMTNuc2ltcy10aXRsZSIgZGF0YS10eXBlPSJwcmltYXJ5Ij48L2E+CiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgPC9kaXY+IAogICAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfd3JhcHBlciI+CiAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX25leHQgcmVjX2hhbGZfYnV0dG9uIGJ0bjIgbWVkaXVtIGJ0bjJfdGV4dF9vbiIgdGl0bGU9IlNob3cgbWUgdGhlIG5leHQgdGl0bGUiIG9uY2xpY2s9IiI+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX2dseXBoIj4wPC9zcGFuPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl90ZXh0Ij5OZXh0ICZyYXF1bzs8L3NwYW4+CiAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICA8L2Rpdj4gICAgCiAgICAgICAgIAogICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iNDllNmMiIHZhbHVlPSIwNzc5Ij4KICAgICAgIDwvZGl2PgogICAgICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZGV0YWlscyI+CiAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1pbmZvIj4KICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy11cHBlciI+ICAKCiAgICAgPGRpdiBjbGFzcz0icmVjLXRpdGxlIj4KICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDA0Njg1NjkvP3JlZl89dHRfcmVjX3R0Igo+PGI+VGhlIERhcmsgS25pZ2h0PC9iPjwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5vYnIiPigyMDA4KTwvc3Bhbj4KICAgPC9kaXY+ICAKICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJyZWMtY2VydC1nZW5yZSByZWMtZWxpcHNpcyI+CiAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT0iUmF0aW5ncyBjZXJ0aWZpY2F0ZSBmb3IgVGhlIERhcmsgS25pZ2h0ICgyMDA4KSIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0idXNfcGdfMTMgdGl0bGVQYWdlU3ByaXRlIGFic21pZGRsZSI+PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICAgQWN0aW9uICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgQ3JpbWUgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBEcmFtYSAgICAgICAgICAKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwNDY4NTY5fGltZGJ8OXw5fHAxM25zaW1zLXRpdGxlfHR0MTM3NTY2Nnx0aXRsZXxtYWluIiBkYXRhLWdhLWlkZW50aWZpZXI9IiIKdGl0bGU9IlVzZXJzIHJhdGVkIHRoaXMgOS8xMCAoMSw3MjAsMzk3IHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDEyNnB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OTwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+Lzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+MTA8L3NwYW4+PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWNhbmNlbCAiPjxhIGhyZWY9Ii90aXRsZS90dDA0Njg1Njkvdm90ZT92PVg7az0iIHRpdGxlPSJEZWxldGUiIHJlbD0ibm9mb2xsb3ciPjxzcGFuPlg8L3NwYW4+PC9hPjwvc3Bhbj4KJm5ic3A7PC9kaXY+CgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtb3V0bGluZSI+CiAgICA8cD4KV2hlbiB0aGUgbWVuYWNlIGtub3duIGFzIHRoZSBKb2tlciB3cmVha3MgaGF2b2MgYW5kIGNoYW9zIG9uIHRoZSBwZW9wbGUgb2YgR290aGFtLCB0aGUgY2FwZWQgY3J1c2FkZXIgbXVzdCBjb21lIHRvIHRlcm1zIHdpdGggb25lIG9mIHRoZSBncmVhdGVzdCBwc3ljaG9sb2dpY2FsIHRlc3RzIG9mIGhpcyBhYmlsaXR5IHRvIGZpZ2h0IGluanVzdGljZS4gICAgPC9wPgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy1sb3dlciI+CiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXRlZXRoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgIAogPGRpdiBjbGFzcz0icmVjLWRpcmVjdG9yIHJlYy1lbGxpcHNpcyI+CiAgICAgIDxiPkRpcmVjdG9yOjwvYj4KQ2hyaXN0b3BoZXIgTm9sYW4gIDwvZGl2Pgo8ZGl2IGNsYXNzPSJyZWMtYWN0b3IgcmVjLWVsbGlwc2lzIj4gPHNwYW4+CiAgICA8Yj5TdGFyczo8L2I+IApDaHJpc3RpYW4gQmFsZSwgCkhlYXRoIExlZGdlciwgCkFhcm9uIEVja2hhcnQ8L3NwYW4+PC9kaXY+IAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogCiAgICAgIDwvZGl2PgogICAgIAogICAgICAgICAKICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJ2aWV3IiBkYXRhLXRjb25zdD0idHQwMTM3NTIzIj4KICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19wb3N0ZXIiIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MTM3NTY2NiIgZGF0YS10Y29uc3Q9InR0MDEzNzUyMyI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDEzNzUyMy8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjE5MCIgd2lkdGg9IjEyOCIgYWx0PSJGaWdodCBDbHViIiB0aXRsZT0iRmlnaHQgQ2x1YiJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTXpjMVltVTJaakV0WVdJd01DMDBaak0zTFdJME5UY3RNRFZsTkdRM1ltWXdNekU1WGtFeVhrRnFjR2RlUVhWeU1UUXhOek16TkRJQC5fVjFfVVkxOTBfQ1IzLDAsMTI4LDE5MF9BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbnMiPgogICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9jbGFzc2ljX3dyYXBwZXIiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndsYl93cmFwcGVyIj4KICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY193bGJfd2F0Y2hsaXN0X2J0biIgZGF0YS10Y29uc3Q9InR0MDEzNzUyMyIgZGF0YS1zaXplPSJtZWRpdW0iIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIiBkYXRhLXR5cGU9InByaW1hcnkiPjwvYT4KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICA8L2Rpdj4gCiAgICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl93cmFwcGVyIj4KICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmV4dCByZWNfaGFsZl9idXR0b24gYnRuMiBtZWRpdW0gYnRuMl90ZXh0X29uIiB0aXRsZT0iU2hvdyBtZSB0aGUgbmV4dCB0aXRsZSIgb25jbGljaz0iIj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfZ2x5cGgiPjA8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3RleHQiPk5leHQgJnJhcXVvOzwvc3Bhbj4KICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSI0OWU2YyIgdmFsdWU9IjA3NzkiPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19kZXRhaWxzIj4KICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWluZm8iPgogICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXVwcGVyIj4gIAoKICAgICA8ZGl2IGNsYXNzPSJyZWMtdGl0bGUiPgogICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDEzNzUyMy8/cmVmXz10dF9yZWNfdHQiCj48Yj5GaWdodCBDbHViPC9iPjwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5vYnIiPigxOTk5KTwvc3Bhbj4KICAgPC9kaXY+ICAKICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJyZWMtY2VydC1nZW5yZSByZWMtZWxpcHNpcyI+CiAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT0iUmF0aW5ncyBjZXJ0aWZpY2F0ZSBmb3IgRmlnaHQgQ2x1YiAoMTk5OSkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InVzX3IgdGl0bGVQYWdlU3ByaXRlIGFic21pZGRsZSI+PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICAgRHJhbWEgICAgICAgICAgCgoKICAgICAgICAKICAgIDwvZGl2PgogICAgICAgICAgICAgCiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtcmF0aW5nIj4KICAgICAgICAgICAgICAgCgogIAoKICAKPGRpdiBjbGFzcz0icmF0aW5nIHJhdGluZy1saXN0IiBkYXRhLXN0YXJiYXItY2xhc3M9InJhdGluZy1saXN0IiBkYXRhLWF1dGg9IiIgZGF0YS11c2VyPSIiIGlkPSJ0dDAxMzc1MjN8aW1kYnw4Ljh8OC44fHAxM25zaW1zLXRpdGxlfHR0MTM3NTY2Nnx0aXRsZXxtYWluIiBkYXRhLWdhLWlkZW50aWZpZXI9IiIKdGl0bGU9IlVzZXJzIHJhdGVkIHRoaXMgOC44LzEwICgxLDM4NSw5OTUgdm90ZXMpIC0gY2xpY2sgc3RhcnMgdG8gcmF0ZSIgPgo8c3BhbiBjbGFzcz0icmF0aW5nLWJnIj4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctaW1kYiAiIHN0eWxlPSJ3aWR0aDogMTIzLjJweCI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXN0YXJzIj4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4yPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4zPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj40PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj41PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj42PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj43PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj44PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj45PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xMDwvc3Bhbj48L2E+Cjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1yYXRpbmcgIj48c3BhbiBjbGFzcz0idmFsdWUiPjguODwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+Lzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+MTA8L3NwYW4+PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWNhbmNlbCAiPjxhIGhyZWY9Ii90aXRsZS90dDAxMzc1MjMvdm90ZT92PVg7az0iIHRpdGxlPSJEZWxldGUiIHJlbD0ibm9mb2xsb3ciPjxzcGFuPlg8L3NwYW4+PC9hPjwvc3Bhbj4KJm5ic3A7PC9kaXY+CgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtb3V0bGluZSI+CiAgICA8cD4KQW4gaW5zb21uaWFjIG9mZmljZSB3b3JrZXIsIGxvb2tpbmcgZm9yIGEgd2F5IHRvIGNoYW5nZSBoaXMgbGlmZSwgY3Jvc3NlcyBwYXRocyB3aXRoIGEgZGV2aWwtbWF5LWNhcmUgc29hcCBtYWtlciwgZm9ybWluZyBhbiB1bmRlcmdyb3VuZCBmaWdodCBjbHViIHRoYXQgZXZvbHZlcyBpbnRvIHNvbWV0aGluZyBtdWNoLCBtdWNoIG1vcmUuICAgIDwvcD4KICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgICAgIAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctbG93ZXIiPgogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy10ZWV0aCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAKIDxkaXYgY2xhc3M9InJlYy1kaXJlY3RvciByZWMtZWxsaXBzaXMiPgogICAgICA8Yj5EaXJlY3Rvcjo8L2I+CkRhdmlkIEZpbmNoZXIgIDwvZGl2Pgo8ZGl2IGNsYXNzPSJyZWMtYWN0b3IgcmVjLWVsbGlwc2lzIj4gPHNwYW4+CiAgICA8Yj5TdGFyczo8L2I+IApCcmFkIFBpdHQsIApFZHdhcmQgTm9ydG9uLCAKTWVhdCBMb2FmPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDEwOTgzMCI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDEzNzU2NjYiIGRhdGEtdGNvbnN0PSJ0dDAxMDk4MzAiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAxMDk4MzAvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iRm9ycmVzdCBHdW1wIiB0aXRsZT0iRm9ycmVzdCBHdW1wInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9sYXJnZS9maWxtLTE4NDg5MDE0Ny5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJZVGhqTTJNd1pHTXRNemczTnkwME5HUmtMV0U0TTJFdFlUQmlOV016T1RZMFlUSTRYa0V5WGtGcWNHZGVRWFZ5TkRZeU1EazVNVFVALl9WMV9VWTE5MF9DUjgsMCwxMjgsMTkwX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9ucyI+CiAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2NsYXNzaWNfd3JhcHBlciI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0id2xiX3dyYXBwZXIiPgogICAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX3dsYl93YXRjaGxpc3RfYnRuIiBkYXRhLXRjb25zdD0idHQwMTA5ODMwIiBkYXRhLXNpemU9Im1lZGl1bSIgZGF0YS1jYWxsZXItbmFtZT0icDEzbnNpbXMtdGl0bGUiIGRhdGEtdHlwZT0icHJpbWFyeSI+PC9hPgogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgIDwvZGl2PiAKICAgICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPgogICAgICAgICAgICAgPGEgY2xhc3M9InJlY19uZXh0IHJlY19oYWxmX2J1dHRvbiBidG4yIG1lZGl1bSBidG4yX3RleHRfb24iIHRpdGxlPSJTaG93IG1lIHRoZSBuZXh0IHRpdGxlIiBvbmNsaWNrPSIiPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl9nbHlwaCI+MDwvc3Bhbj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfdGV4dCI+TmV4dCAmcmFxdW87PC9zcGFuPgogICAgICAgICAgICAgPC9hPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9kaXY+ICAgIAogICAgICAgICAKICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iMDc3OSI+CiAgICAgICA8L2Rpdj4KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2RldGFpbHMiPgogICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtaW5mbyI+CiAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdXBwZXIiPiAgCgogICAgIDxkaXYgY2xhc3M9InJlYy10aXRsZSI+CiAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTA5ODMwLz9yZWZfPXR0X3JlY190dCIKPjxiPkZvcnJlc3QgR3VtcDwvYj48L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJub2JyIj4oMTk5NCk8L3NwYW4+CiAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icmVjLWNlcnQtZ2VucmUgcmVjLWVsaXBzaXMiPgogICAgICAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdGl0bGU9IlJhdGluZ3MgY2VydGlmaWNhdGUgZm9yIEZvcnJlc3QgR3VtcCAoMTk5NCkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InVzX3BnXzEzIHRpdGxlUGFnZVNwcml0ZSBhYnNtaWRkbGUiPjwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgIENvbWVkeSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIERyYW1hICAgICAgICAgIAoKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwMTA5ODMwfGltZGJ8OC44fDguOHxwMTNuc2ltcy10aXRsZXx0dDEzNzU2NjZ8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguOC8xMCAoMSwyOTEsMzE1IHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDEyMy4ycHgiPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1zdGFycyI+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mjwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NDwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Njwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Nzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+ODwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+OTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTA8L3NwYW4+PC9hPgo8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctcmF0aW5nICI+PHNwYW4gY2xhc3M9InZhbHVlIj44Ljg8L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPi88L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPjEwPC9zcGFuPjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1jYW5jZWwgIj48YSBocmVmPSIvdGl0bGUvdHQwMTA5ODMwL3ZvdGU/dj1YO2s9IiB0aXRsZT0iRGVsZXRlIiByZWw9Im5vZm9sbG93Ij48c3Bhbj5YPC9zcGFuPjwvYT48L3NwYW4+CiZuYnNwOzwvZGl2PgoKICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLW91dGxpbmUiPgogICAgPHA+CkZvcnJlc3QgR3VtcCwgd2hpbGUgbm90IGludGVsbGlnZW50LCBoYXMgYWNjaWRlbnRhbGx5IGJlZW4gcHJlc2VudCBhdCBtYW55IGhpc3RvcmljIG1vbWVudHMsIGJ1dCBoaXMgdHJ1ZSBsb3ZlLCBKZW5ueSBDdXJyYW4sIGVsdWRlcyBoaW0uICAgIDwvcD4KICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgICAgIAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctbG93ZXIiPgogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy10ZWV0aCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAKIDxkaXYgY2xhc3M9InJlYy1kaXJlY3RvciByZWMtZWxsaXBzaXMiPgogICAgICA8Yj5EaXJlY3Rvcjo8L2I+ClJvYmVydCBaZW1lY2tpcyAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gClRvbSBIYW5rcywgClJvYmluIFdyaWdodCwgCkdhcnkgU2luaXNlPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDgxNjY5MiI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDEzNzU2NjYiIGRhdGEtdGNvbnN0PSJ0dDA4MTY2OTIiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDA4MTY2OTIvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iSW50ZXJzdGVsbGFyIiB0aXRsZT0iSW50ZXJzdGVsbGFyInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9sYXJnZS9maWxtLTE4NDg5MDE0Ny5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakl4TlRVNE16WTRNRjVCTWw1QmFuQm5Ya0Z0WlRnd016TTRPREkzTWpFQC5fVjFfVVgxMjhfQ1IwLDAsMTI4LDE5MF9BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbnMiPgogICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9jbGFzc2ljX3dyYXBwZXIiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndsYl93cmFwcGVyIj4KICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY193bGJfd2F0Y2hsaXN0X2J0biIgZGF0YS10Y29uc3Q9InR0MDgxNjY5MiIgZGF0YS1zaXplPSJtZWRpdW0iIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIiBkYXRhLXR5cGU9InByaW1hcnkiPjwvYT4KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICA8L2Rpdj4gCiAgICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl93cmFwcGVyIj4KICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmV4dCByZWNfaGFsZl9idXR0b24gYnRuMiBtZWRpdW0gYnRuMl90ZXh0X29uIiB0aXRsZT0iU2hvdyBtZSB0aGUgbmV4dCB0aXRsZSIgb25jbGljaz0iIj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfZ2x5cGgiPjA8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3RleHQiPk5leHQgJnJhcXVvOzwvc3Bhbj4KICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSI0OWU2YyIgdmFsdWU9IjA3NzkiPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19kZXRhaWxzIj4KICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWluZm8iPgogICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXVwcGVyIj4gIAoKICAgICA8ZGl2IGNsYXNzPSJyZWMtdGl0bGUiPgogICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDgxNjY5Mi8/cmVmXz10dF9yZWNfdHQiCj48Yj5JbnRlcnN0ZWxsYXI8L2I+PC9hPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibm9iciI+KDIwMTQpPC9zcGFuPgogICA8L2Rpdj4gIAogICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InJlYy1jZXJ0LWdlbnJlIHJlYy1lbGlwc2lzIj4KICAgICAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPSJSYXRpbmdzIGNlcnRpZmljYXRlIGZvciBJbnRlcnN0ZWxsYXIgKDIwMTQpIgogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJ1c19wZ18xMyB0aXRsZVBhZ2VTcHJpdGUgYWJzbWlkZGxlIj48L3NwYW4+CgogICAgICAgICAgICAgICAgICAgICBBZHZlbnR1cmUgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBEcmFtYSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIFNjaS1GaSAgICAgICAgICAKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwODE2NjkyfGltZGJ8OC42fDguNnxwMTNuc2ltcy10aXRsZXx0dDEzNzU2NjZ8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguNi8xMCAoOTczLDQwNSB2b3RlcykgLSBjbGljayBzdGFycyB0byByYXRlIiA+CjxzcGFuIGNsYXNzPSJyYXRpbmctYmciPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1pbWRiICIgc3R5bGU9IndpZHRoOiAxMjAuNHB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC42PC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MDgxNjY5Mi92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpBIHRlYW0gb2YgZXhwbG9yZXJzIHRyYXZlbCB0aHJvdWdoIGEgd29ybWhvbGUgaW4gc3BhY2UgaW4gYW4gYXR0ZW1wdCB0byBlbnN1cmUgaHVtYW5pdHkncyBzdXJ2aXZhbC4gICAgPC9wPgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy1sb3dlciI+CiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXRlZXRoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgIAogPGRpdiBjbGFzcz0icmVjLWRpcmVjdG9yIHJlYy1lbGxpcHNpcyI+CiAgICAgIDxiPkRpcmVjdG9yOjwvYj4KQ2hyaXN0b3BoZXIgTm9sYW4gIDwvZGl2Pgo8ZGl2IGNsYXNzPSJyZWMtYWN0b3IgcmVjLWVsbGlwc2lzIj4gPHNwYW4+CiAgICA8Yj5TdGFyczo8L2I+IApNYXR0aGV3IE1jQ29uYXVnaGV5LCAKQW5uZSBIYXRoYXdheSwgCkplc3NpY2EgQ2hhc3RhaW48L3NwYW4+PC9kaXY+IAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogCiAgICAgIDwvZGl2PgogICAgIAogICAgICAgICAKICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJ2aWV3IiBkYXRhLXRjb25zdD0idHQwMTMzMDkzIj4KICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19wb3N0ZXIiIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MTM3NTY2NiIgZGF0YS10Y29uc3Q9InR0MDEzMzA5MyI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDEzMzA5My8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjE5MCIgd2lkdGg9IjEyOCIgYWx0PSJUaGUgTWF0cml4IiB0aXRsZT0iVGhlIE1hdHJpeCJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTURNeU1tUTVZemd0WVdNeE9DMDBPVFUwTFdJd1pqRXRaV1V3WVRZNU1qVmtaamhoWGtFeVhrRnFjR2RlUVhWeU5EWXlNRGs1TVRVQC5fVjFfVVkxOTBfQ1I0LDAsMTI4LDE5MF9BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbnMiPgogICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9jbGFzc2ljX3dyYXBwZXIiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndsYl93cmFwcGVyIj4KICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY193bGJfd2F0Y2hsaXN0X2J0biIgZGF0YS10Y29uc3Q9InR0MDEzMzA5MyIgZGF0YS1zaXplPSJtZWRpdW0iIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIiBkYXRhLXR5cGU9InByaW1hcnkiPjwvYT4KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICA8L2Rpdj4gCiAgICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl93cmFwcGVyIj4KICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmV4dCByZWNfaGFsZl9idXR0b24gYnRuMiBtZWRpdW0gYnRuMl90ZXh0X29uIiB0aXRsZT0iU2hvdyBtZSB0aGUgbmV4dCB0aXRsZSIgb25jbGljaz0iIj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfZ2x5cGgiPjA8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3RleHQiPk5leHQgJnJhcXVvOzwvc3Bhbj4KICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSI0OWU2YyIgdmFsdWU9IjA3NzkiPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19kZXRhaWxzIj4KICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWluZm8iPgogICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXVwcGVyIj4gIAoKICAgICA8ZGl2IGNsYXNzPSJyZWMtdGl0bGUiPgogICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDEzMzA5My8/cmVmXz10dF9yZWNfdHQiCj48Yj5UaGUgTWF0cml4PC9iPjwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5vYnIiPigxOTk5KTwvc3Bhbj4KICAgPC9kaXY+ICAKICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJyZWMtY2VydC1nZW5yZSByZWMtZWxpcHNpcyI+CiAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT0iUmF0aW5ncyBjZXJ0aWZpY2F0ZSBmb3IgVGhlIE1hdHJpeCAoMTk5OSkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InVzX3IgdGl0bGVQYWdlU3ByaXRlIGFic21pZGRsZSI+PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICAgQWN0aW9uICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgU2NpLUZpICAgICAgICAgIAoKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwMTMzMDkzfGltZGJ8OC43fDguN3xwMTNuc2ltcy10aXRsZXx0dDEzNzU2NjZ8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguNy8xMCAoMSwyNDksODcxIHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDEyMS44cHgiPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1zdGFycyI+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mjwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NDwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Njwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Nzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+ODwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+OTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTA8L3NwYW4+PC9hPgo8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctcmF0aW5nICI+PHNwYW4gY2xhc3M9InZhbHVlIj44Ljc8L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPi88L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPjEwPC9zcGFuPjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1jYW5jZWwgIj48YSBocmVmPSIvdGl0bGUvdHQwMTMzMDkzL3ZvdGU/dj1YO2s9IiB0aXRsZT0iRGVsZXRlIiByZWw9Im5vZm9sbG93Ij48c3Bhbj5YPC9zcGFuPjwvYT48L3NwYW4+CiZuYnNwOzwvZGl2PgoKICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLW91dGxpbmUiPgogICAgPHA+CkEgY29tcHV0ZXIgaGFja2VyIGxlYXJucyBmcm9tIG15c3RlcmlvdXMgcmViZWxzIGFib3V0IHRoZSB0cnVlIG5hdHVyZSBvZiBoaXMgcmVhbGl0eSBhbmQgaGlzIHJvbGUgaW4gdGhlIHdhciBhZ2FpbnN0IGl0cyBjb250cm9sbGVycy4gICAgPC9wPgogICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgCiAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICAgCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy1sb3dlciI+CiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXRlZXRoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgIAogPGRpdiBjbGFzcz0icmVjLWRpcmVjdG9yIHJlYy1lbGxpcHNpcyI+CiAgICAgIDxiPkRpcmVjdG9yczo8L2I+CkxhbmEgV2FjaG93c2tpLApMaWxseSBXYWNob3dza2kgIDwvZGl2Pgo8ZGl2IGNsYXNzPSJyZWMtYWN0b3IgcmVjLWVsbGlwc2lzIj4gPHNwYW4+CiAgICA8Yj5TdGFyczo8L2I+IApLZWFudSBSZWV2ZXMsIApMYXVyZW5jZSBGaXNoYnVybmUsIApDYXJyaWUtQW5uZSBNb3NzPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDE2NzI2MCI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDEzNzU2NjYiIGRhdGEtdGNvbnN0PSJ0dDAxNjcyNjAiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAxNjcyNjAvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iVGhlIExvcmQgb2YgdGhlIFJpbmdzOiBUaGUgUmV0dXJuIG9mIHRoZSBLaW5nIiB0aXRsZT0iVGhlIExvcmQgb2YgdGhlIFJpbmdzOiBUaGUgUmV0dXJuIG9mIHRoZSBLaW5nInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS9sYXJnZS9maWxtLTE4NDg5MDE0Ny5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuIHJlY19wb3N0ZXJfaW1nIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakU0TWpBMU5UQXlNVjVCTWw1QmFuQm5Ya0Z0WlRjd056TTFORFF5TVFAQC5fVjFfVVkxOTBfQ1IwLDAsMTI4LDE5MF9BTF8uanBnIiAvPiA8YnIvPgo8L2E+ICAgIDwvZGl2PgoKICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbnMiPgogICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxkaXYgY2xhc3M9IndsYl9jbGFzc2ljX3dyYXBwZXIiPgogICAgICAgICAgICAgPHNwYW4gY2xhc3M9IndsYl93cmFwcGVyIj4KICAgICAgICAgICAgICAgPGEgY2xhc3M9InJlY193bGJfd2F0Y2hsaXN0X2J0biIgZGF0YS10Y29uc3Q9InR0MDE2NzI2MCIgZGF0YS1zaXplPSJtZWRpdW0iIGRhdGEtY2FsbGVyLW5hbWU9InAxM25zaW1zLXRpdGxlIiBkYXRhLXR5cGU9InByaW1hcnkiPjwvYT4KICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICA8L2Rpdj4gCiAgICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl93cmFwcGVyIj4KICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfbmV4dCByZWNfaGFsZl9idXR0b24gYnRuMiBtZWRpdW0gYnRuMl90ZXh0X29uIiB0aXRsZT0iU2hvdyBtZSB0aGUgbmV4dCB0aXRsZSIgb25jbGljaz0iIj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfZ2x5cGgiPjA8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3RleHQiPk5leHQgJnJhcXVvOzwvc3Bhbj4KICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgIDwvZGl2PiAgICAKICAgICAgICAgCiAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iaGlkZGVuIiBuYW1lPSI0OWU2YyIgdmFsdWU9IjA3NzkiPgogICAgICAgPC9kaXY+CiAgICAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19kZXRhaWxzIj4KICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWluZm8iPgogICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LXVwcGVyIj4gIAoKICAgICA8ZGl2IGNsYXNzPSJyZWMtdGl0bGUiPgogICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MDE2NzI2MC8/cmVmXz10dF9yZWNfdHQiCj48Yj5UaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBSZXR1cm4gb2YgdGhlIEtpbmc8L2I+PC9hPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibm9iciI+KDIwMDMpPC9zcGFuPgogICA8L2Rpdj4gIAogICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InJlYy1jZXJ0LWdlbnJlIHJlYy1lbGlwc2lzIj4KICAgICAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPSJSYXRpbmdzIGNlcnRpZmljYXRlIGZvciBUaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBSZXR1cm4gb2YgdGhlIEtpbmcgKDIwMDMpIgogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJ1c19wZ18xMyB0aXRsZVBhZ2VTcHJpdGUgYWJzbWlkZGxlIj48L3NwYW4+CgogICAgICAgICAgICAgICAgICAgICBBZHZlbnR1cmUgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBEcmFtYSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIEZhbnRhc3kgICAgICAgICAgCgogICAgICAgIAogICAgPC9kaXY+CiAgICAgICAgICAgICAKICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1yYXRpbmciPgogICAgICAgICAgICAgICAKCiAgCgogIAo8ZGl2IGNsYXNzPSJyYXRpbmcgcmF0aW5nLWxpc3QiIGRhdGEtc3RhcmJhci1jbGFzcz0icmF0aW5nLWxpc3QiIGRhdGEtYXV0aD0iIiBkYXRhLXVzZXI9IiIgaWQ9InR0MDE2NzI2MHxpbWRifDguOXw4Ljl8cDEzbnNpbXMtdGl0bGV8dHQxMzc1NjY2fHRpdGxlfG1haW4iIGRhdGEtZ2EtaWRlbnRpZmllcj0iIgp0aXRsZT0iVXNlcnMgcmF0ZWQgdGhpcyA4LjkvMTAgKDEsMjQ2LDYzOSB2b3RlcykgLSBjbGljayBzdGFycyB0byByYXRlIiA+CjxzcGFuIGNsYXNzPSJyYXRpbmctYmciPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1pbWRiICIgc3R5bGU9IndpZHRoOiAxMjQuNnB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC45PC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MDE2NzI2MC92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpHYW5kYWxmIGFuZCBBcmFnb3JuIGxlYWQgdGhlIFdvcmxkIG9mIE1lbiBhZ2FpbnN0IFNhdXJvbidzIGFybXkgdG8gZHJhdyBoaXMgZ2F6ZSBmcm9tIEZyb2RvIGFuZCBTYW0gYXMgdGhleSBhcHByb2FjaCBNb3VudCBEb29tIHdpdGggdGhlIE9uZSBSaW5nLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpQZXRlciBKYWNrc29uICA8L2Rpdj4KPGRpdiBjbGFzcz0icmVjLWFjdG9yIHJlYy1lbGxpcHNpcyI+IDxzcGFuPgogICAgPGI+U3RhcnM6PC9iPiAKRWxpamFoIFdvb2QsIApWaWdnbyBNb3J0ZW5zZW4sIApJYW4gTWNLZWxsZW48L3NwYW4+PC9kaXY+IAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogCiAgICAgIDwvZGl2PgogICAgIAogICAgICAgICAKICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJ2aWV3IiBkYXRhLXRjb25zdD0idHQxMzQ1ODM2Ij4KICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19wb3N0ZXIiIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MTM3NTY2NiIgZGF0YS10Y29uc3Q9InR0MTM0NTgzNiI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MTM0NTgzNi8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjE5MCIgd2lkdGg9IjEyOCIgYWx0PSJUaGUgRGFyayBLbmlnaHQgUmlzZXMiIHRpdGxlPSJUaGUgRGFyayBLbmlnaHQgUmlzZXMic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL2xhcmdlL2ZpbG0tMTg0ODkwMTQ3Ll9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UazRPRFF6TkRZM01sNUJNbDVCYW5CblhrRnRaVGN3T0RBME5UTTROd0BALl9WMV9VWTE5MF9DUjAsMCwxMjgsMTkwX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9ucyI+CiAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2NsYXNzaWNfd3JhcHBlciI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0id2xiX3dyYXBwZXIiPgogICAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX3dsYl93YXRjaGxpc3RfYnRuIiBkYXRhLXRjb25zdD0idHQxMzQ1ODM2IiBkYXRhLXNpemU9Im1lZGl1bSIgZGF0YS1jYWxsZXItbmFtZT0icDEzbnNpbXMtdGl0bGUiIGRhdGEtdHlwZT0icHJpbWFyeSI+PC9hPgogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgIDwvZGl2PiAKICAgICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPgogICAgICAgICAgICAgPGEgY2xhc3M9InJlY19uZXh0IHJlY19oYWxmX2J1dHRvbiBidG4yIG1lZGl1bSBidG4yX3RleHRfb24iIHRpdGxlPSJTaG93IG1lIHRoZSBuZXh0IHRpdGxlIiBvbmNsaWNrPSIiPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl9nbHlwaCI+MDwvc3Bhbj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfdGV4dCI+TmV4dCAmcmFxdW87PC9zcGFuPgogICAgICAgICAgICAgPC9hPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9kaXY+ICAgIAogICAgICAgICAKICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iMDc3OSI+CiAgICAgICA8L2Rpdj4KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2RldGFpbHMiPgogICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtaW5mbyI+CiAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdXBwZXIiPiAgCgogICAgIDxkaXYgY2xhc3M9InJlYy10aXRsZSI+CiAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzQ1ODM2Lz9yZWZfPXR0X3JlY190dCIKPjxiPlRoZSBEYXJrIEtuaWdodCBSaXNlczwvYj48L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJub2JyIj4oMjAxMik8L3NwYW4+CiAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icmVjLWNlcnQtZ2VucmUgcmVjLWVsaXBzaXMiPgogICAgICAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdGl0bGU9IlJhdGluZ3MgY2VydGlmaWNhdGUgZm9yIFRoZSBEYXJrIEtuaWdodCBSaXNlcyAoMjAxMikiCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InVzX3BnXzEzIHRpdGxlUGFnZVNwcml0ZSBhYnNtaWRkbGUiPjwvc3Bhbj4KCiAgICAgICAgICAgICAgICAgICAgIEFjdGlvbiAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIFRocmlsbGVyICAgICAgICAgIAoKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQxMzQ1ODM2fGltZGJ8OC41fDguNXxwMTNuc2ltcy10aXRsZXx0dDEzNzU2NjZ8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguNS8xMCAoMSwxNzQsNzIzIHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDExOXB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC41PC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MTM0NTgzNi92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpFaWdodCB5ZWFycyBhZnRlciB0aGUgSm9rZXIncyByZWlnbiBvZiBhbmFyY2h5LCB0aGUgRGFyayBLbmlnaHQsIHdpdGggdGhlIGhlbHAgb2YgdGhlIGVuaWdtYXRpYyBTZWxpbmEsIGlzIGZvcmNlZCBmcm9tIGhpcyBpbXBvc2VkIGV4aWxlIHRvIHNhdmUgR290aGFtIENpdHksIG5vdyBvbiB0aGUgZWRnZSBvZiB0b3RhbCBhbm5paGlsYXRpb24sIGZyb20gdGhlIGJydXRhbCBndWVycmlsbGEgdGVycm9yaXN0IEJhbmUuICAgIDwvcD4KICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgICAgIAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctbG93ZXIiPgogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy10ZWV0aCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAKIDxkaXYgY2xhc3M9InJlYy1kaXJlY3RvciByZWMtZWxsaXBzaXMiPgogICAgICA8Yj5EaXJlY3Rvcjo8L2I+CkNocmlzdG9waGVyIE5vbGFuICA8L2Rpdj4KPGRpdiBjbGFzcz0icmVjLWFjdG9yIHJlYy1lbGxpcHNpcyI+IDxzcGFuPgogICAgPGI+U3RhcnM6PC9iPiAKQ2hyaXN0aWFuIEJhbGUsIApUb20gSGFyZHksIApBbm5lIEhhdGhhd2F5PC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MTg1MzcyOCI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDEzNzU2NjYiIGRhdGEtdGNvbnN0PSJ0dDE4NTM3MjgiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDE4NTM3MjgvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iRGphbmdvIFVuY2hhaW5lZCIgdGl0bGU9IkRqYW5nbyBVbmNoYWluZWQic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL2xhcmdlL2ZpbG0tMTg0ODkwMTQ3Ll9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1qSXlOVFE1TmpRMU9WNUJNbDVCYW5CblhrRnRaVGN3T0RnMU1EVTRPQUBALl9WMV9VWTE5MF9DUjAsMCwxMjgsMTkwX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9ucyI+CiAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2NsYXNzaWNfd3JhcHBlciI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0id2xiX3dyYXBwZXIiPgogICAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX3dsYl93YXRjaGxpc3RfYnRuIiBkYXRhLXRjb25zdD0idHQxODUzNzI4IiBkYXRhLXNpemU9Im1lZGl1bSIgZGF0YS1jYWxsZXItbmFtZT0icDEzbnNpbXMtdGl0bGUiIGRhdGEtdHlwZT0icHJpbWFyeSI+PC9hPgogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgIDwvZGl2PiAKICAgICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPgogICAgICAgICAgICAgPGEgY2xhc3M9InJlY19uZXh0IHJlY19oYWxmX2J1dHRvbiBidG4yIG1lZGl1bSBidG4yX3RleHRfb24iIHRpdGxlPSJTaG93IG1lIHRoZSBuZXh0IHRpdGxlIiBvbmNsaWNrPSIiPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl9nbHlwaCI+MDwvc3Bhbj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfdGV4dCI+TmV4dCAmcmFxdW87PC9zcGFuPgogICAgICAgICAgICAgPC9hPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9kaXY+ICAgIAogICAgICAgICAKICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iMDc3OSI+CiAgICAgICA8L2Rpdj4KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2RldGFpbHMiPgogICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtaW5mbyI+CiAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdXBwZXIiPiAgCgogICAgIDxkaXYgY2xhc3M9InJlYy10aXRsZSI+CiAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxODUzNzI4Lz9yZWZfPXR0X3JlY190dCIKPjxiPkRqYW5nbyBVbmNoYWluZWQ8L2I+PC9hPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibm9iciI+KDIwMTIpPC9zcGFuPgogICA8L2Rpdj4gIAogICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InJlYy1jZXJ0LWdlbnJlIHJlYy1lbGlwc2lzIj4KICAgICAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPSJSYXRpbmdzIGNlcnRpZmljYXRlIGZvciBEamFuZ28gVW5jaGFpbmVkICgyMDEyKSIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0idXNfciB0aXRsZVBhZ2VTcHJpdGUgYWJzbWlkZGxlIj48L3NwYW4+CgogICAgICAgICAgICAgICAgICAgICBEcmFtYSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIFdlc3Rlcm4gICAgICAgICAgCgoKICAgICAgICAKICAgIDwvZGl2PgogICAgICAgICAgICAgCiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtcmF0aW5nIj4KICAgICAgICAgICAgICAgCgogIAoKICAKPGRpdiBjbGFzcz0icmF0aW5nIHJhdGluZy1saXN0IiBkYXRhLXN0YXJiYXItY2xhc3M9InJhdGluZy1saXN0IiBkYXRhLWF1dGg9IiIgZGF0YS11c2VyPSIiIGlkPSJ0dDE4NTM3Mjh8aW1kYnw4LjR8OC40fHAxM25zaW1zLXRpdGxlfHR0MTM3NTY2Nnx0aXRsZXxtYWluIiBkYXRhLWdhLWlkZW50aWZpZXI9IiIKdGl0bGU9IlVzZXJzIHJhdGVkIHRoaXMgOC40LzEwICg5ODYsODU1IHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDExNy42cHgiPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1zdGFycyI+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mjwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NDwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Njwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Nzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+ODwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+OTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTA8L3NwYW4+PC9hPgo8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctcmF0aW5nICI+PHNwYW4gY2xhc3M9InZhbHVlIj44LjQ8L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPi88L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPjEwPC9zcGFuPjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1jYW5jZWwgIj48YSBocmVmPSIvdGl0bGUvdHQxODUzNzI4L3ZvdGU/dj1YO2s9IiB0aXRsZT0iRGVsZXRlIiByZWw9Im5vZm9sbG93Ij48c3Bhbj5YPC9zcGFuPjwvYT48L3NwYW4+CiZuYnNwOzwvZGl2PgoKICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLW91dGxpbmUiPgogICAgPHA+CldpdGggdGhlIGhlbHAgb2YgYSBHZXJtYW4gYm91bnR5IGh1bnRlciwgYSBmcmVlZCBzbGF2ZSBzZXRzIG91dCB0byByZXNjdWUgaGlzIHdpZmUgZnJvbSBhIGJydXRhbCBNaXNzaXNzaXBwaSBwbGFudGF0aW9uIG93bmVyLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpRdWVudGluIFRhcmFudGlubyAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCkphbWllIEZveHgsIApDaHJpc3RvcGggV2FsdHosIApMZW9uYXJkbyBEaUNhcHJpbzwvc3Bhbj48L2Rpdj4gCiAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgCiAgICAgICAgIDwvZGl2PgogICAgICAgPC9kaXY+CiAKICAgICAgPC9kaXY+CiAgICAgCiAgICAgICAgIAogICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcnZpZXciIGRhdGEtdGNvbnN0PSJ0dDAxMTA5MTIiPgogICAgCiAgICAKICAgIAogICAgPGRpdiBjbGFzcz0icmVjX3Bvc3RlciIgZGF0YS1pbmZvPSIiIGRhdGEtc3BlYz0icDEzbnNpbXM6dHQxMzc1NjY2IiBkYXRhLXRjb25zdD0idHQwMTEwOTEyIj4KICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfb3ZlcmxheSI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY19maWx0ZXIiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfd2F0Y2hsaXN0X2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX2Jsb2NrZWRfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcmF0aW5nX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3BlbmRpbmdfZ2x5cGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgIDwvZGl2PiAgICAgICAgICAgIAo8YSBocmVmPSIvdGl0bGUvdHQwMTEwOTEyLz9yZWZfPXR0X3JlY190dGkiCj48aW1nIGhlaWdodD0iMTkwIiB3aWR0aD0iMTI4IiBhbHQ9IlB1bHAgRmljdGlvbiIgdGl0bGU9IlB1bHAgRmljdGlvbiJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRreE1UQTVPVEF6TWw1Qk1sNUJhbkJuWGtGdFpUZ3dOakE1TURjM05qRUAuX1YxX1VYMTI4X0NSMCwwLDEyOCwxOTBfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25zIj4KICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3bGJfY2xhc3NpY193cmFwcGVyIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3bGJfd3JhcHBlciI+CiAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfd2xiX3dhdGNobGlzdF9idG4iIGRhdGEtdGNvbnN0PSJ0dDAxMTA5MTIiIGRhdGEtc2l6ZT0ibWVkaXVtIiBkYXRhLWNhbGxlci1uYW1lPSJwMTNuc2ltcy10aXRsZSIgZGF0YS10eXBlPSJwcmltYXJ5Ij48L2E+CiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgPC9kaXY+IAogICAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfd3JhcHBlciI+CiAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX25leHQgcmVjX2hhbGZfYnV0dG9uIGJ0bjIgbWVkaXVtIGJ0bjJfdGV4dF9vbiIgdGl0bGU9IlNob3cgbWUgdGhlIG5leHQgdGl0bGUiIG9uY2xpY2s9IiI+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX2dseXBoIj4wPC9zcGFuPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl90ZXh0Ij5OZXh0ICZyYXF1bzs8L3NwYW4+CiAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICA8L2Rpdj4gICAgCiAgICAgICAgIAogICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iNDllNmMiIHZhbHVlPSIwNzc5Ij4KICAgICAgIDwvZGl2PgogICAgICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZGV0YWlscyI+CiAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1pbmZvIj4KICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy11cHBlciI+ICAKCiAgICAgPGRpdiBjbGFzcz0icmVjLXRpdGxlIj4KICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDAxMTA5MTIvP3JlZl89dHRfcmVjX3R0Igo+PGI+UHVscCBGaWN0aW9uPC9iPjwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im5vYnIiPigxOTk0KTwvc3Bhbj4KICAgPC9kaXY+ICAKICAgICAgICAgICAgIAoKCiAgICA8ZGl2IGNsYXNzPSJyZWMtY2VydC1nZW5yZSByZWMtZWxpcHNpcyI+CiAgICAgICAgCgogICAgICAgICAgICAKICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA8c3BhbiB0aXRsZT0iUmF0aW5ncyBjZXJ0aWZpY2F0ZSBmb3IgUHVscCBGaWN0aW9uICgxOTk0KSIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0idXNfciB0aXRsZVBhZ2VTcHJpdGUgYWJzbWlkZGxlIj48L3NwYW4+CgogICAgICAgICAgICAgICAgICAgICBDcmltZSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIERyYW1hICAgICAgICAgIAoKCiAgICAgICAgCiAgICA8L2Rpdj4KICAgICAgICAgICAgIAogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLXJhdGluZyI+CiAgICAgICAgICAgICAgIAoKICAKCiAgCjxkaXYgY2xhc3M9InJhdGluZyByYXRpbmctbGlzdCIgZGF0YS1zdGFyYmFyLWNsYXNzPSJyYXRpbmctbGlzdCIgZGF0YS1hdXRoPSIiIGRhdGEtdXNlcj0iIiBpZD0idHQwMTEwOTEyfGltZGJ8OC45fDguOXxwMTNuc2ltcy10aXRsZXx0dDEzNzU2NjZ8dGl0bGV8bWFpbiIgZGF0YS1nYS1pZGVudGlmaWVyPSIiCnRpdGxlPSJVc2VycyByYXRlZCB0aGlzIDguOS8xMCAoMSwzNTksMjk5IHZvdGVzKSAtIGNsaWNrIHN0YXJzIHRvIHJhdGUiID4KPHNwYW4gY2xhc3M9InJhdGluZy1iZyI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWltZGIgIiBzdHlsZT0id2lkdGg6IDEyNC42cHgiPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1zdGFycyI+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mjwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Mzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NDwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+NTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Njwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+Nzwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+ODwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+OTwvc3Bhbj48L2E+CiAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9dm90ZSZyZWZfPXR0X292X3J0IgpyZWw9Im5vZm9sbG93IiB0aXRsZT0iUmVnaXN0ZXIgb3IgbG9naW4gdG8gcmF0ZSB0aGlzIHRpdGxlIiA+PHNwYW4+MTA8L3NwYW4+PC9hPgo8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctcmF0aW5nICI+PHNwYW4gY2xhc3M9InZhbHVlIj44Ljk8L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPi88L3NwYW4+PHNwYW4gY2xhc3M9ImdyZXkiPjEwPC9zcGFuPjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1jYW5jZWwgIj48YSBocmVmPSIvdGl0bGUvdHQwMTEwOTEyL3ZvdGU/dj1YO2s9IiB0aXRsZT0iRGVsZXRlIiByZWw9Im5vZm9sbG93Ij48c3Bhbj5YPC9zcGFuPjwvYT48L3NwYW4+CiZuYnNwOzwvZGl2PgoKICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLW91dGxpbmUiPgogICAgPHA+ClRoZSBsaXZlcyBvZiB0d28gbW9iIGhpdCBtZW4sIGEgYm94ZXIsIGEgZ2FuZ3N0ZXIncyB3aWZlLCBhbmQgYSBwYWlyIG9mIGRpbmVyIGJhbmRpdHMgaW50ZXJ0d2luZSBpbiBmb3VyIHRhbGVzIG9mIHZpb2xlbmNlIGFuZCByZWRlbXB0aW9uLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpRdWVudGluIFRhcmFudGlubyAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCkpvaG4gVHJhdm9sdGEsIApVbWEgVGh1cm1hbiwgClNhbXVlbCBMLiBKYWNrc29uPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDE2NzI2MSI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDEzNzU2NjYiIGRhdGEtdGNvbnN0PSJ0dDAxNjcyNjEiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDAxNjcyNjEvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iVGhlIExvcmQgb2YgdGhlIFJpbmdzOiBUaGUgVHdvIFRvd2VycyIgdGl0bGU9IlRoZSBMb3JkIG9mIHRoZSBSaW5nczogVGhlIFR3byBUb3dlcnMic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlL2xhcmdlL2ZpbG0tMTg0ODkwMTQ3Ll9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gcmVjX3Bvc3Rlcl9pbWciIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UQXlORFUwTmpZNE5UaGVRVEplUVdwd1oxNUJiV1UyTURrNE1UWTJOd0BALl9WMV9VWTE5MF9DUjEsMCwxMjgsMTkwX0FMXy5qcGciIC8+IDxici8+CjwvYT4gICAgPC9kaXY+CgogICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9ucyI+CiAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPGRpdiBjbGFzcz0id2xiX2NsYXNzaWNfd3JhcHBlciI+CiAgICAgICAgICAgICA8c3BhbiBjbGFzcz0id2xiX3dyYXBwZXIiPgogICAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX3dsYl93YXRjaGxpc3RfYnRuIiBkYXRhLXRjb25zdD0idHQwMTY3MjYxIiBkYXRhLXNpemU9Im1lZGl1bSIgZGF0YS1jYWxsZXItbmFtZT0icDEzbnNpbXMtdGl0bGUiIGRhdGEtdHlwZT0icHJpbWFyeSI+PC9hPgogICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgIDwvZGl2PiAKICAgICAgIAogICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfYWN0aW9uX2RpdmlkZXIiPgogICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX3dyYXBwZXIiPgogICAgICAgICAgICAgPGEgY2xhc3M9InJlY19uZXh0IHJlY19oYWxmX2J1dHRvbiBidG4yIG1lZGl1bSBidG4yX3RleHRfb24iIHRpdGxlPSJTaG93IG1lIHRoZSBuZXh0IHRpdGxlIiBvbmNsaWNrPSIiPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl9nbHlwaCI+MDwvc3Bhbj4KICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfdGV4dCI+TmV4dCAmcmFxdW87PC9zcGFuPgogICAgICAgICAgICAgPC9hPgogICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgPC9kaXY+ICAgIAogICAgICAgICAKICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9IjQ5ZTZjIiB2YWx1ZT0iMDc3OSI+CiAgICAgICA8L2Rpdj4KICAgICAgIAogICAgICAgPGRpdiBjbGFzcz0icmVjX2RldGFpbHMiPgogICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtaW5mbyI+CiAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdXBwZXIiPiAgCgogICAgIDxkaXYgY2xhc3M9InJlYy10aXRsZSI+CiAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQwMTY3MjYxLz9yZWZfPXR0X3JlY190dCIKPjxiPlRoZSBMb3JkIG9mIHRoZSBSaW5nczogVGhlIFR3byBUb3dlcnM8L2I+PC9hPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibm9iciI+KDIwMDIpPC9zcGFuPgogICA8L2Rpdj4gIAogICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InJlYy1jZXJ0LWdlbnJlIHJlYy1lbGlwc2lzIj4KICAgICAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPSJSYXRpbmdzIGNlcnRpZmljYXRlIGZvciBUaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBUd28gVG93ZXJzICgyMDAyKSIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0idXNfcGdfMTMgdGl0bGVQYWdlU3ByaXRlIGFic21pZGRsZSI+PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICAgQWR2ZW50dXJlICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgRHJhbWEgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBGYW50YXN5ICAgICAgICAgIAoKICAgICAgICAKICAgIDwvZGl2PgogICAgICAgICAgICAgCiAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtcmF0aW5nIj4KICAgICAgICAgICAgICAgCgogIAoKICAKPGRpdiBjbGFzcz0icmF0aW5nIHJhdGluZy1saXN0IiBkYXRhLXN0YXJiYXItY2xhc3M9InJhdGluZy1saXN0IiBkYXRhLWF1dGg9IiIgZGF0YS11c2VyPSIiIGlkPSJ0dDAxNjcyNjF8aW1kYnw4Ljd8OC43fHAxM25zaW1zLXRpdGxlfHR0MTM3NTY2Nnx0aXRsZXxtYWluIiBkYXRhLWdhLWlkZW50aWZpZXI9IiIKdGl0bGU9IlVzZXJzIHJhdGVkIHRoaXMgOC43LzEwICgxLDEyOSwxNjMgdm90ZXMpIC0gY2xpY2sgc3RhcnMgdG8gcmF0ZSIgPgo8c3BhbiBjbGFzcz0icmF0aW5nLWJnIj4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctaW1kYiAiIHN0eWxlPSJ3aWR0aDogMTIxLjhweCI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXN0YXJzIj4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4yPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4zPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj40PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj41PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj42PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj43PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj44PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj45PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xMDwvc3Bhbj48L2E+Cjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1yYXRpbmcgIj48c3BhbiBjbGFzcz0idmFsdWUiPjguNzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+Lzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+MTA8L3NwYW4+PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWNhbmNlbCAiPjxhIGhyZWY9Ii90aXRsZS90dDAxNjcyNjEvdm90ZT92PVg7az0iIHRpdGxlPSJEZWxldGUiIHJlbD0ibm9mb2xsb3ciPjxzcGFuPlg8L3NwYW4+PC9hPjwvc3Bhbj4KJm5ic3A7PC9kaXY+CgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtb3V0bGluZSI+CiAgICA8cD4KV2hpbGUgRnJvZG8gYW5kIFNhbSBlZGdlIGNsb3NlciB0byBNb3Jkb3Igd2l0aCB0aGUgaGVscCBvZiB0aGUgc2hpZnR5IEdvbGx1bSwgdGhlIGRpdmlkZWQgZmVsbG93c2hpcCBtYWtlcyBhIHN0YW5kIGFnYWluc3QgU2F1cm9uJ3MgbmV3IGFsbHksIFNhcnVtYW4sIGFuZCBoaXMgaG9yZGVzIG9mIElzZW5nYXJkLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpQZXRlciBKYWNrc29uICA8L2Rpdj4KPGRpdiBjbGFzcz0icmVjLWFjdG9yIHJlYy1lbGxpcHNpcyI+IDxzcGFuPgogICAgPGI+U3RhcnM6PC9iPiAKRWxpamFoIFdvb2QsIApJYW4gTWNLZWxsZW4sIApWaWdnbyBNb3J0ZW5zZW48L3NwYW4+PC9kaXY+IAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogCiAgICAgIDwvZGl2PgogICAgIAogICAgICAgICAKICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJ2aWV3IiBkYXRhLXRjb25zdD0idHQwMTIwNzM3Ij4KICAgIAogICAgCiAgICAKICAgIDxkaXYgY2xhc3M9InJlY19wb3N0ZXIiIGRhdGEtaW5mbz0iIiBkYXRhLXNwZWM9InAxM25zaW1zOnR0MTM3NTY2NiIgZGF0YS10Y29uc3Q9InR0MDEyMDczNyI+CiAgICAgICAgPGRpdiBjbGFzcz0icmVjX292ZXJsYXkiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZmlsdGVyIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3dhdGNobGlzdF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19ibG9ja2VkX2dseXBoIj48L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZ2x5cGggcmVjX3JhdGluZ19nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19wZW5kaW5nX2dseXBoIj48L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICA8L2Rpdj4gICAgICAgICAgICAKPGEgaHJlZj0iL3RpdGxlL3R0MDEyMDczNy8/cmVmXz10dF9yZWNfdHRpIgo+PGltZyBoZWlnaHQ9IjE5MCIgd2lkdGg9IjEyOCIgYWx0PSJUaGUgTG9yZCBvZiB0aGUgUmluZ3M6IFRoZSBGZWxsb3dzaGlwIG9mIHRoZSBSaW5nIiB0aXRsZT0iVGhlIExvcmQgb2YgdGhlIFJpbmdzOiBUaGUgRmVsbG93c2hpcCBvZiB0aGUgUmluZyJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTlRFeU1qQXdNRFUxT1Y1Qk1sNUJhbkJuWGtGdFpUY3dORFF5TlRreE13QEAuX1YxX1VZMTkwX0NSMSwwLDEyOCwxOTBfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25zIj4KICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3bGJfY2xhc3NpY193cmFwcGVyIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3bGJfd3JhcHBlciI+CiAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfd2xiX3dhdGNobGlzdF9idG4iIGRhdGEtdGNvbnN0PSJ0dDAxMjA3MzciIGRhdGEtc2l6ZT0ibWVkaXVtIiBkYXRhLWNhbGxlci1uYW1lPSJwMTNuc2ltcy10aXRsZSIgZGF0YS10eXBlPSJwcmltYXJ5Ij48L2E+CiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgPC9kaXY+IAogICAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfd3JhcHBlciI+CiAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX25leHQgcmVjX2hhbGZfYnV0dG9uIGJ0bjIgbWVkaXVtIGJ0bjJfdGV4dF9vbiIgdGl0bGU9IlNob3cgbWUgdGhlIG5leHQgdGl0bGUiIG9uY2xpY2s9IiI+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX2dseXBoIj4wPC9zcGFuPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl90ZXh0Ij5OZXh0ICZyYXF1bzs8L3NwYW4+CiAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICA8L2Rpdj4gICAgCiAgICAgICAgIAogICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iNDllNmMiIHZhbHVlPSIwNzc5Ij4KICAgICAgIDwvZGl2PgogICAgICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZGV0YWlscyI+CiAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1pbmZvIj4KICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy11cHBlciI+ICAKCiAgICAgPGRpdiBjbGFzcz0icmVjLXRpdGxlIj4KICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDAxMjA3MzcvP3JlZl89dHRfcmVjX3R0Igo+PGI+VGhlIExvcmQgb2YgdGhlIFJpbmdzOiBUaGUgRmVsbG93c2hpcCBvZiB0aGUgUmluZzwvYj48L2E+CiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJub2JyIj4oMjAwMSk8L3NwYW4+CiAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKCgogICAgPGRpdiBjbGFzcz0icmVjLWNlcnQtZ2VucmUgcmVjLWVsaXBzaXMiPgogICAgICAgIAoKICAgICAgICAgICAgCiAgICAgICAgICAgIAogICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPHNwYW4gdGl0bGU9IlJhdGluZ3MgY2VydGlmaWNhdGUgZm9yIFRoZSBMb3JkIG9mIHRoZSBSaW5nczogVGhlIEZlbGxvd3NoaXAgb2YgdGhlIFJpbmcgKDIwMDEpIgogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJ1c19wZ18xMyB0aXRsZVBhZ2VTcHJpdGUgYWJzbWlkZGxlIj48L3NwYW4+CgogICAgICAgICAgICAgICAgICAgICBBZHZlbnR1cmUgICAgICAgICAgCiA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+IAogICAgICAgICAgICAgICAgICAgICBEcmFtYSAgICAgICAgICAKIDxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gCiAgICAgICAgICAgICAgICAgICAgIEZhbnRhc3kgICAgICAgICAgCgogICAgICAgIAogICAgPC9kaXY+CiAgICAgICAgICAgICAKICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1yYXRpbmciPgogICAgICAgICAgICAgICAKCiAgCgogIAo8ZGl2IGNsYXNzPSJyYXRpbmcgcmF0aW5nLWxpc3QiIGRhdGEtc3RhcmJhci1jbGFzcz0icmF0aW5nLWxpc3QiIGRhdGEtYXV0aD0iIiBkYXRhLXVzZXI9IiIgaWQ9InR0MDEyMDczN3xpbWRifDguOHw4Ljh8cDEzbnNpbXMtdGl0bGV8dHQxMzc1NjY2fHRpdGxlfG1haW4iIGRhdGEtZ2EtaWRlbnRpZmllcj0iIgp0aXRsZT0iVXNlcnMgcmF0ZWQgdGhpcyA4LjgvMTAgKDEsMjY5LDAzNiB2b3RlcykgLSBjbGljayBzdGFycyB0byByYXRlIiA+CjxzcGFuIGNsYXNzPSJyYXRpbmctYmciPiZuYnNwOzwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1pbWRiICIgc3R5bGU9IndpZHRoOiAxMjMuMnB4Ij4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctc3RhcnMiPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjE8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjI8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjM8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjQ8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjU8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjY8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjc8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjg8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjk8L3NwYW4+PC9hPgogICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PXZvdGUmcmVmXz10dF9vdl9ydCIKcmVsPSJub2ZvbGxvdyIgdGl0bGU9IlJlZ2lzdGVyIG9yIGxvZ2luIHRvIHJhdGUgdGhpcyB0aXRsZSIgPjxzcGFuPjEwPC9zcGFuPjwvYT4KPC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXJhdGluZyAiPjxzcGFuIGNsYXNzPSJ2YWx1ZSI+OC44PC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4vPC9zcGFuPjxzcGFuIGNsYXNzPSJncmV5Ij4xMDwvc3Bhbj48L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctY2FuY2VsICI+PGEgaHJlZj0iL3RpdGxlL3R0MDEyMDczNy92b3RlP3Y9WDtrPSIgdGl0bGU9IkRlbGV0ZSIgcmVsPSJub2ZvbGxvdyI+PHNwYW4+WDwvc3Bhbj48L2E+PC9zcGFuPgombmJzcDs8L2Rpdj4KCiAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1vdXRsaW5lIj4KICAgIDxwPgpBIG1lZWsgSG9iYml0IGZyb20gdGhlIFNoaXJlIGFuZCBlaWdodCBjb21wYW5pb25zIHNldCBvdXQgb24gYSBqb3VybmV5IHRvIGRlc3Ryb3kgdGhlIHBvd2VyZnVsIE9uZSBSaW5nIGFuZCBzYXZlIE1pZGRsZSBFYXJ0aCBmcm9tIHRoZSBEYXJrIExvcmQgU2F1cm9uLiAgICA8L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAKICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgICAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtamF3LWxvd2VyIj4KICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctdGVldGgiPjwvZGl2PiAgICAgICAgICAgICAgICAgICAgICAgCiA8ZGl2IGNsYXNzPSJyZWMtZGlyZWN0b3IgcmVjLWVsbGlwc2lzIj4KICAgICAgPGI+RGlyZWN0b3I6PC9iPgpQZXRlciBKYWNrc29uICA8L2Rpdj4KPGRpdiBjbGFzcz0icmVjLWFjdG9yIHJlYy1lbGxpcHNpcyI+IDxzcGFuPgogICAgPGI+U3RhcnM6PC9iPiAKRWxpamFoIFdvb2QsIApJYW4gTWNLZWxsZW4sIApPcmxhbmRvIEJsb29tPC9zcGFuPjwvZGl2PiAKICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAKICAgICAgICAgPC9kaXY+CiAgICAgICA8L2Rpdj4KIAogICAgICA8L2Rpdj4KICAgICAKICAgICAgICAgCiAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVydmlldyIgZGF0YS10Y29uc3Q9InR0MDk5Mzg0NiI+CiAgICAKICAgIAogICAgCiAgICA8ZGl2IGNsYXNzPSJyZWNfcG9zdGVyIiBkYXRhLWluZm89IiIgZGF0YS1zcGVjPSJwMTNuc2ltczp0dDEzNzU2NjYiIGRhdGEtdGNvbnN0PSJ0dDA5OTM4NDYiPgogICAgICAgIDxkaXYgY2xhc3M9InJlY19vdmVybGF5Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2ZpbHRlciI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY193YXRjaGxpc3RfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfYmxvY2tlZF9nbHlwaCI+PC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImdseXBoIHJlY19yYXRpbmdfZ2x5cGgiPjwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJnbHlwaCByZWNfcGVuZGluZ19nbHlwaCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgPC9kaXY+ICAgICAgICAgICAgCjxhIGhyZWY9Ii90aXRsZS90dDA5OTM4NDYvP3JlZl89dHRfcmVjX3R0aSIKPjxpbWcgaGVpZ2h0PSIxOTAiIHdpZHRoPSIxMjgiIGFsdD0iVGhlIFdvbGYgb2YgV2FsbCBTdHJlZXQiIHRpdGxlPSJUaGUgV29sZiBvZiBXYWxsIFN0cmVldCJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvbGFyZ2UvZmlsbS0xODQ4OTAxNDcuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiByZWNfcG9zdGVyX2ltZyIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTWpJeE1qZ3hOVGswTUY1Qk1sNUJhbkJuWGtGdFpUZ3dOakl5T1RnMk1ERUAuX1YxX1VZMTkwX0NSMCwwLDEyOCwxOTBfQUxfLmpwZyIgLz4gPGJyLz4KPC9hPiAgICA8L2Rpdj4KCiAgICAKICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25zIj4KICAgICAKICAgICAgICAgPGRpdiBjbGFzcz0icmVjX2FjdGlvbl9kaXZpZGVyIj4KICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3bGJfY2xhc3NpY193cmFwcGVyIj4KICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3bGJfd3JhcHBlciI+CiAgICAgICAgICAgICAgIDxhIGNsYXNzPSJyZWNfd2xiX3dhdGNobGlzdF9idG4iIGRhdGEtdGNvbnN0PSJ0dDA5OTM4NDYiIGRhdGEtc2l6ZT0ibWVkaXVtIiBkYXRhLWNhbGxlci1uYW1lPSJwMTNuc2ltcy10aXRsZSIgZGF0YS10eXBlPSJwcmltYXJ5Ij48L2E+CiAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgPC9kaXY+IAogICAgICAgCiAgICAgICAgIDxkaXYgY2xhc3M9InJlY19hY3Rpb25fZGl2aWRlciI+CiAgICAgICAgICAgPHNwYW4gY2xhc3M9ImJ0bjJfd3JhcHBlciI+CiAgICAgICAgICAgICA8YSBjbGFzcz0icmVjX25leHQgcmVjX2hhbGZfYnV0dG9uIGJ0bjIgbWVkaXVtIGJ0bjJfdGV4dF9vbiIgdGl0bGU9IlNob3cgbWUgdGhlIG5leHQgdGl0bGUiIG9uY2xpY2s9IiI+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJidG4yX2dseXBoIj4wPC9zcGFuPgogICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYnRuMl90ZXh0Ij5OZXh0ICZyYXF1bzs8L3NwYW4+CiAgICAgICAgICAgICA8L2E+CiAgICAgICAgICAgPC9zcGFuPgogICAgICAgICA8L2Rpdj4gICAgCiAgICAgICAgIAogICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iNDllNmMiIHZhbHVlPSIwNzc5Ij4KICAgICAgIDwvZGl2PgogICAgICAgCiAgICAgICA8ZGl2IGNsYXNzPSJyZWNfZGV0YWlscyI+CiAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1pbmZvIj4KICAgICAgICAgCiAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy11cHBlciI+ICAKCiAgICAgPGRpdiBjbGFzcz0icmVjLXRpdGxlIj4KICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDA5OTM4NDYvP3JlZl89dHRfcmVjX3R0Igo+PGI+VGhlIFdvbGYgb2YgV2FsbCBTdHJlZXQ8L2I+PC9hPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibm9iciI+KDIwMTMpPC9zcGFuPgogICA8L2Rpdj4gIAogICAgICAgICAgICAgCgoKICAgIDxkaXYgY2xhc3M9InJlYy1jZXJ0LWdlbnJlIHJlYy1lbGlwc2lzIj4KICAgICAgICAKCiAgICAgICAgICAgIAogICAgICAgICAgICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxzcGFuIHRpdGxlPSJSYXRpbmdzIGNlcnRpZmljYXRlIGZvciBUaGUgV29sZiBvZiBXYWxsIFN0cmVldCAoMjAxMykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InVzX3IgdGl0bGVQYWdlU3ByaXRlIGFic21pZGRsZSI+PC9zcGFuPgoKICAgICAgICAgICAgICAgICAgICAgQmlvZ3JhcGh5ICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgQ29tZWR5ICAgICAgICAgIAogPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAKICAgICAgICAgICAgICAgICAgICAgQ3JpbWUgICAgICAgICAgCgogICAgICAgIAogICAgPC9kaXY+CiAgICAgICAgICAgICAKICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1yYXRpbmciPgogICAgICAgICAgICAgICAKCiAgCgogIAo8ZGl2IGNsYXNzPSJyYXRpbmcgcmF0aW5nLWxpc3QiIGRhdGEtc3RhcmJhci1jbGFzcz0icmF0aW5nLWxpc3QiIGRhdGEtYXV0aD0iIiBkYXRhLXVzZXI9IiIgaWQ9InR0MDk5Mzg0NnxpbWRifDguMnw4LjJ8cDEzbnNpbXMtdGl0bGV8dHQxMzc1NjY2fHRpdGxlfG1haW4iIGRhdGEtZ2EtaWRlbnRpZmllcj0iIgp0aXRsZT0iVXNlcnMgcmF0ZWQgdGhpcyA4LjIvMTAgKDgxMywyOTQgdm90ZXMpIC0gY2xpY2sgc3RhcnMgdG8gcmF0ZSIgPgo8c3BhbiBjbGFzcz0icmF0aW5nLWJnIj4mbmJzcDs8L3NwYW4+CjxzcGFuIGNsYXNzPSJyYXRpbmctaW1kYiAiIHN0eWxlPSJ3aWR0aDogMTE0LjhweCI+Jm5ic3A7PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLXN0YXJzIj4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4yPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4zPC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj40PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj41PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj42PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj43PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj44PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj45PC9zcGFuPjwvYT4KICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT12b3RlJnJlZl89dHRfb3ZfcnQiCnJlbD0ibm9mb2xsb3ciIHRpdGxlPSJSZWdpc3RlciBvciBsb2dpbiB0byByYXRlIHRoaXMgdGl0bGUiID48c3Bhbj4xMDwvc3Bhbj48L2E+Cjwvc3Bhbj4KPHNwYW4gY2xhc3M9InJhdGluZy1yYXRpbmcgIj48c3BhbiBjbGFzcz0idmFsdWUiPjguMjwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+Lzwvc3Bhbj48c3BhbiBjbGFzcz0iZ3JleSI+MTA8L3NwYW4+PC9zcGFuPgo8c3BhbiBjbGFzcz0icmF0aW5nLWNhbmNlbCAiPjxhIGhyZWY9Ii90aXRsZS90dDA5OTM4NDYvdm90ZT92PVg7az0iIHRpdGxlPSJEZWxldGUiIHJlbD0ibm9mb2xsb3ciPjxzcGFuPlg8L3NwYW4+PC9hPjwvc3Bhbj4KJm5ic3A7PC9kaXY+CgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyZWMtb3V0bGluZSI+CiAgICA8cD4KQmFzZWQgb24gdGhlIHRydWUgc3Rvcnkgb2YgPGEgaHJlZj0iL25hbWUvbm0wMDY3Nzg5Ij5Kb3JkYW4gQmVsZm9ydDwvYT4sIGZyb20gaGlzIHJpc2UgdG8gYSB3ZWFsdGh5IHN0b2NrLWJyb2tlciBsaXZpbmcgdGhlIGhpZ2ggbGlmZSB0byBoaXMgZmFsbCBpbnZvbHZpbmcgY3JpbWUsIGNvcnJ1cHRpb24gYW5kIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQuICAgIDwvcD4KICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgIAogICAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgICAgIAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICAgIDxkaXYgY2xhc3M9InJlYy1qYXctbG93ZXIiPgogICAgICAgICAgICAgPGRpdiBjbGFzcz0icmVjLWphdy10ZWV0aCI+PC9kaXY+ICAgICAgICAgICAgICAgICAgICAgICAKIDxkaXYgY2xhc3M9InJlYy1kaXJlY3RvciByZWMtZWxsaXBzaXMiPgogICAgICA8Yj5EaXJlY3Rvcjo8L2I+Ck1hcnRpbiBTY29yc2VzZSAgPC9kaXY+CjxkaXYgY2xhc3M9InJlYy1hY3RvciByZWMtZWxsaXBzaXMiPiA8c3Bhbj4KICAgIDxiPlN0YXJzOjwvYj4gCkxlb25hcmRvIERpQ2FwcmlvLCAKSm9uYWggSGlsbCwgCk1hcmdvdCBSb2JiaWU8L3NwYW4+PC9kaXY+IAogICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIAogICAgICAgICA8L2Rpdj4KICAgICAgIDwvZGl2PgogCiAgICAgIDwvZGl2PgogICAgIAogICAgCiAgIDwvZGl2PgogICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4gIAogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVSZWNzV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVSZWNzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIlRpdGxlUmVjc1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlQ2FzdFdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlQ2FzdFdpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICA8ZGl2IGNsYXNzPSJhcnRpY2xlIiBpZD0idGl0bGVDYXN0Ij4KICAgIDxzcGFuIGNsYXNzPXJpZ2h0Y29ybmVybGluayA+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9ZWRpdCZyZWZfPXR0X2NsIgpyZWw9ImxvZ2luIj5FZGl0PC9hPgogICAgPC9zcGFuPgogICAgICAgIDxoMj5DYXN0PC9oMj4KICAgICAgICAKICAgICAgICA8dGFibGUgY2xhc3M9ImNhc3RfbGlzdCI+ICAgIAogIDx0cj48dGQgY29sc3Bhbj0iNCIgY2xhc3M9ImNhc3RsaXN0X2xhYmVsIj5DYXN0IG92ZXJ2aWV3LCBmaXJzdCBiaWxsZWQgb25seTo8L3RkPjwvdHI+CiAgICAgIDx0ciBjbGFzcz0ib2RkIj4KICAgICAgICAgIDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMDEzOC8/cmVmXz10dF9jbF9pMSIKPjxpbWcgaGVpZ2h0PSI0NCIgd2lkdGg9IjMyIiBhbHQ9Ikxlb25hcmRvIERpQ2FwcmlvIiB0aXRsZT0iTGVvbmFyZG8gRGlDYXByaW8ic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTWpJME1UZzNNekkwTTE1Qk1sNUJhbkJuWGtGdFpUY3dNelF5T0RVMk13QEAuX1YxX1VZNDRfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAwMTM4Lz9yZWZfPXR0X2NsX3QxIgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+TGVvbmFyZG8gRGlDYXByaW88L3NwYW4+CjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iZWxsaXBzaXMiPgogICAgICAgICAgICAgIC4uLgogICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY2hhcmFjdGVyIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvY2hhcmFjdGVyL2NoMDE2MjcwNS8/cmVmXz10dF9jbF90MSIgPkNvYmI8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0iZXZlbiI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTAzMzA2ODcvP3JlZl89dHRfY2xfaTIiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJKb3NlcGggR29yZG9uLUxldml0dCIgdGl0bGU9Ikpvc2VwaCBHb3Jkb24tTGV2aXR0InNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS8zMng0NC9uYW1lLTIxMzg1NTg3ODMuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UUXpPVGcwTlRrek5GNUJNbDVCYW5CblhrRnRaVGN3TlRRNE1UY3dPUUBALl9WMV9VWTQ0X0NSNCwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDMzMDY4Ny8/cmVmXz10dF9jbF90MiIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPkpvc2VwaCBHb3Jkb24tTGV2aXR0PC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAxNTc4NjAvP3JlZl89dHRfY2xfdDIiID5BcnRodXI8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0ib2RkIj4KICAgICAgICAgIDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+CjxhIGhyZWY9Ii9uYW1lL25tMDY4MDk4My8/cmVmXz10dF9jbF9pMyIKPjxpbWcgaGVpZ2h0PSI0NCIgd2lkdGg9IjMyIiBhbHQ9IkVsbGVuIFBhZ2UiIHRpdGxlPSJFbGxlbiBQYWdlInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS8zMng0NC9uYW1lLTIxMzg1NTg3ODMuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UVTNNek0zTURZek1WNUJNbDVCYW5CblhrRnRaVGN3TnprMU16YzNOQUBALl9WMV9VWDMyX0NSMCwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDY4MDk4My8/cmVmXz10dF9jbF90MyIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPkVsbGVuIFBhZ2U8L3NwYW4+CjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iZWxsaXBzaXMiPgogICAgICAgICAgICAgIC4uLgogICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY2hhcmFjdGVyIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvY2hhcmFjdGVyL2NoMDE2MjcwOC8/cmVmXz10dF9jbF90MyIgPkFyaWFkbmU8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0iZXZlbiI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTAzNjI3NjYvP3JlZl89dHRfY2xfaTQiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJUb20gSGFyZHkiIHRpdGxlPSJUb20gSGFyZHkic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRRM09ERXlOakE0Tmw1Qk1sNUJhbkJuWGtGdFpUZ3dNVEU0T0RNeU1qRUAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMzYyNzY2Lz9yZWZfPXR0X2NsX3Q0IgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+VG9tIEhhcmR5PC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAxNTgxMjgvP3JlZl89dHRfY2xfdDQiID5FYW1lczwvYT4gCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIGNsYXNzPSJvZGQiPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wOTEzODIyLz9yZWZfPXR0X2NsX2k1Igo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iS2VuIFdhdGFuYWJlIiB0aXRsZT0iS2VuIFdhdGFuYWJlInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS8zMng0NC9uYW1lLTIxMzg1NTg3ODMuX1RURF8iY2xhc3M9ImxvYWRsYXRlIGhpZGRlbiAiIGxvYWRsYXRlPSJodHRwczovL2ltYWdlcy1uYS5zc2wtaW1hZ2VzLWFtYXpvbi5jb20vaW1hZ2VzL00vTVY1Qk1UUXpNVFV6TmpjNE5sNUJNbDVCYW5CblhrRnRaVGN3TVRVeU9EVTJNd0BALl9WMV9VWDMyX0NSMCwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDkxMzgyMi8/cmVmXz10dF9jbF90NSIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPktlbiBXYXRhbmFiZTwvc3Bhbj4KPC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJlbGxpcHNpcyI+CiAgICAgICAgICAgICAgLi4uCiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjaGFyYWN0ZXIiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFyYWN0ZXIvY2gwMTYyNzA2Lz9yZWZfPXR0X2NsX3Q1IiA+U2FpdG88L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0iZXZlbiI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTI0MzgzMDcvP3JlZl89dHRfY2xfaTYiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJEaWxlZXAgUmFvIiB0aXRsZT0iRGlsZWVwIFJhbyJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvMzJ4NDQvbmFtZS0yMTM4NTU4NzgzLl9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNVEk1TnpjMk5UYzJNRjVCTWw1QmFuQm5Ya0Z0WlRjd01ETTJNVGMxTWdAQC5fVjFfVVk0NF9DUjE3LDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0yNDM4MzA3Lz9yZWZfPXR0X2NsX3Q2IgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+RGlsZWVwIFJhbzwvc3Bhbj4KPC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJlbGxpcHNpcyI+CiAgICAgICAgICAgICAgLi4uCiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjaGFyYWN0ZXIiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFyYWN0ZXIvY2gwMjEwNjY4Lz9yZWZfPXR0X2NsX3Q2IiA+WXVzdWY8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0ib2RkIj4KICAgICAgICAgIDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+CjxhIGhyZWY9Ii9uYW1lL25tMDYxNDE2NS8/cmVmXz10dF9jbF9pNyIKPjxpbWcgaGVpZ2h0PSI0NCIgd2lkdGg9IjMyIiBhbHQ9IkNpbGxpYW4gTXVycGh5IiB0aXRsZT0iQ2lsbGlhbiBNdXJwaHkic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRVek1qZzFOekl5T1Y1Qk1sNUJhbkJuWGtGdFpUWXdNemcyTWpneS5fVjFfVVgzMl9DUjAsMCwzMiw0NF9BTF8uanBnIiAvPjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJhY3RvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTA2MTQxNjUvP3JlZl89dHRfY2xfdDciCml0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5DaWxsaWFuIE11cnBoeTwvc3Bhbj4KPC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJlbGxpcHNpcyI+CiAgICAgICAgICAgICAgLi4uCiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjaGFyYWN0ZXIiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFyYWN0ZXIvY2gwMjA5ODQ4Lz9yZWZfPXR0X2NsX3Q3IiA+Um9iZXJ0IEZpc2NoZXI8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0iZXZlbiI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTAwMDAyOTcvP3JlZl89dHRfY2xfaTgiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJUb20gQmVyZW5nZXIiIHRpdGxlPSJUb20gQmVyZW5nZXIic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRrMU9UUTVNelV6TTE1Qk1sNUJhbkJuWGtGdFpUZ3dNRFV4TVRZMU5ERUAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAwMjk3Lz9yZWZfPXR0X2NsX3Q4IgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+VG9tIEJlcmVuZ2VyPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAxNTgxMjkvP3JlZl89dHRfY2xfdDgiID5Ccm93bmluZzwvYT4gCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgPC90cj4KICAgICAgPHRyIGNsYXNzPSJvZGQiPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wMTgyODM5Lz9yZWZfPXR0X2NsX2k5Igo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iTWFyaW9uIENvdGlsbGFyZCIgdGl0bGU9Ik1hcmlvbiBDb3RpbGxhcmQic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRReE5URXpOVGt3TkY1Qk1sNUJhbkJuWGtGdFpUY3dOelEyTkRJd09RQEAuX1YxX1VYMzJfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMTgyODM5Lz9yZWZfPXR0X2NsX3Q5IgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+TWFyaW9uIENvdGlsbGFyZDwvc3Bhbj4KPC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJlbGxpcHNpcyI+CiAgICAgICAgICAgICAgLi4uCiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJjaGFyYWN0ZXIiPgogICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9jaGFyYWN0ZXIvY2gwMTY4MjQ3Lz9yZWZfPXR0X2NsX3Q5IiA+TWFsPC9hPiAKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L3RkPgogICAgICA8L3RyPgogICAgICA8dHIgY2xhc3M9ImV2ZW4iPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAwNTkyLz9yZWZfPXR0X2NsX2kxMCIKPjxpbWcgaGVpZ2h0PSI0NCIgd2lkdGg9IjMyIiBhbHQ9IlBldGUgUG9zdGxldGh3YWl0ZSIgdGl0bGU9IlBldGUgUG9zdGxldGh3YWl0ZSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvMzJ4NDQvbmFtZS0yMTM4NTU4NzgzLl9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNVE15TWpJeE1UUTJOVjVCTWw1QmFuQm5Ya0Z0WlRZd05EUTBOVEUxLl9WMV9VWDMyX0NSMCwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMDU5Mi8/cmVmXz10dF9jbF90MTAiCml0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5QZXRlIFBvc3RsZXRod2FpdGU8L3NwYW4+CjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iZWxsaXBzaXMiPgogICAgICAgICAgICAgIC4uLgogICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY2hhcmFjdGVyIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvY2hhcmFjdGVyL2NoMDIwOTU5Ny8/cmVmXz10dF9jbF90MTAiID5NYXVyaWNlIEZpc2NoZXI8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0ib2RkIj4KICAgICAgICAgIDx0ZCBjbGFzcz0icHJpbWFyeV9waG90byI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMDMyMy8/cmVmXz10dF9jbF9pMTEiCj48aW1nIGhlaWdodD0iNDQiIHdpZHRoPSIzMiIgYWx0PSJNaWNoYWVsIENhaW5lIiB0aXRsZT0iTWljaGFlbCBDYWluZSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvMzJ4NDQvbmFtZS0yMTM4NTU4NzgzLl9UVERfImNsYXNzPSJsb2FkbGF0ZSBoaWRkZW4gIiBsb2FkbGF0ZT0iaHR0cHM6Ly9pbWFnZXMtbmEuc3NsLWltYWdlcy1hbWF6b24uY29tL2ltYWdlcy9NL01WNUJNakF3TnpJd05UUTRNbDVCTWw1QmFuQm5Ya0Z0WlRZd016RTFNVFV6Ll9WMV9VWDMyX0NSMCwwLDMyLDQ0X0FMXy5qcGciIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMDAwMDMyMy8/cmVmXz10dF9jbF90MTEiCml0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5NaWNoYWVsIENhaW5lPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAyMDk3MzMvP3JlZl89dHRfY2xfdDExIiA+TWlsZXM8L2E+IAogICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvdGQ+CiAgICAgIDwvdHI+CiAgICAgIDx0ciBjbGFzcz0iZXZlbiI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTAwMDEzMDUvP3JlZl89dHRfY2xfaTEyIgo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iTHVrYXMgSGFhcyIgdGl0bGU9Ikx1a2FzIEhhYXMic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fVFREXyJjbGFzcz0ibG9hZGxhdGUgaGlkZGVuICIgbG9hZGxhdGU9Imh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvTS9NVjVCTVRRM01qVTFNRE14TTE1Qk1sNUJhbkJuWGtGdFpUZ3dPRGs1T0RFNE1ERUAuX1YxX1VZNDRfQ1IwLDAsMzIsNDRfQUxfLmpwZyIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0wMDAxMzA1Lz9yZWZfPXR0X2NsX3QxMiIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPkx1a2FzIEhhYXM8L3NwYW4+CjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iZWxsaXBzaXMiPgogICAgICAgICAgICAgIC4uLgogICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY2hhcmFjdGVyIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvY2hhcmFjdGVyL2NoMDIxMDY2OS8/cmVmXz10dF9jbF90MTIiID5OYXNoPC9hPiAKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L3RkPgogICAgICA8L3RyPgogICAgICA8dHIgY2xhc3M9Im9kZCI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTI1ODE3MzAvP3JlZl89dHRfY2xfaTEzIgo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iVGFpLUxpIExlZSIgdGl0bGU9IlRhaS1MaSBMZWUic3JjPSJodHRwOi8vaWEubWVkaWEtaW1kYi5jb20vaW1hZ2VzL0cvMDEvaW1kYi9pbWFnZXMvbm9waWN0dXJlLzMyeDQ0L25hbWUtMjEzODU1ODc4My5fVFREXyIgY2xhc3M9IiIgLz48L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0iYWN0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUGVyc29uIj4KPGEgaHJlZj0iL25hbWUvbm0yNTgxNzMwLz9yZWZfPXR0X2NsX3QxMyIKaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPlRhaS1MaSBMZWU8L3NwYW4+CjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iZWxsaXBzaXMiPgogICAgICAgICAgICAgIC4uLgogICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY2hhcmFjdGVyIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvY2hhcmFjdGVyL2NoMDQ3ODk4Mi8/cmVmXz10dF9jbF90MTMiID5UYWRhc2hpPC9hPiAKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L3RkPgogICAgICA8L3RyPgogICAgICA8dHIgY2xhc3M9ImV2ZW4iPgogICAgICAgICAgPHRkIGNsYXNzPSJwcmltYXJ5X3Bob3RvIj4KPGEgaHJlZj0iL25hbWUvbm0zNjM3NTAwLz9yZWZfPXR0X2NsX2kxNCIKPjxpbWcgaGVpZ2h0PSI0NCIgd2lkdGg9IjMyIiBhbHQ9IkNsYWlyZSBHZWFyZSIgdGl0bGU9IkNsYWlyZSBHZWFyZSJzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2ltYWdlcy9ub3BpY3R1cmUvMzJ4NDQvbmFtZS0yMTM4NTU4NzgzLl9UVERfIiBjbGFzcz0iIiAvPjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJhY3RvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9QZXJzb24iPgo8YSBocmVmPSIvbmFtZS9ubTM2Mzc1MDAvP3JlZl89dHRfY2xfdDE0IgppdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+Q2xhaXJlIEdlYXJlPC9zcGFuPgo8L2E+ICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImVsbGlwc2lzIj4KICAgICAgICAgICAgICAuLi4KICAgICAgICAgIDwvdGQ+CiAgICAgICAgICA8dGQgY2xhc3M9ImNoYXJhY3RlciI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL2NoYXJhY3Rlci9jaDAxNDk5MDUvP3JlZl89dHRfY2xfdDE0IiA+UGhpbGxpcGEgKDMgeWVhcnMpPC9hPiAKICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L3RkPgogICAgICA8L3RyPgogICAgICA8dHIgY2xhc3M9Im9kZCI+CiAgICAgICAgICA8dGQgY2xhc3M9InByaW1hcnlfcGhvdG8iPgo8YSBocmVmPSIvbmFtZS9ubTM5NjA0MDgvP3JlZl89dHRfY2xfaTE1Igo+PGltZyBoZWlnaHQ9IjQ0IiB3aWR0aD0iMzIiIGFsdD0iTWFnbnVzIE5vbGFuIiB0aXRsZT0iTWFnbnVzIE5vbGFuInNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvaW1hZ2VzL25vcGljdHVyZS8zMng0NC9uYW1lLTIxMzg1NTg3ODMuX1RURF8iIGNsYXNzPSIiIC8+PC9hPiAgICAgICAgICA8L3RkPgogICAgICAgICAgPHRkIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9ImFjdG9yIiBpdGVtc2NvcGUgaXRlbXR5cGU9Imh0dHA6Ly9zY2hlbWEub3JnL1BlcnNvbiI+CjxhIGhyZWY9Ii9uYW1lL25tMzk2MDQwOC8/cmVmXz10dF9jbF90MTUiCml0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJuYW1lIj5NYWdudXMgTm9sYW48L3NwYW4+CjwvYT4gICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iZWxsaXBzaXMiPgogICAgICAgICAgICAgIC4uLgogICAgICAgICAgPC90ZD4KICAgICAgICAgIDx0ZCBjbGFzcz0iY2hhcmFjdGVyIj4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvY2hhcmFjdGVyL2NoMDE2MjcwNy8/cmVmXz10dF9jbF90MTUiID5KYW1lcyAoMjAgbW9udGhzKTwvYT4gCiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC90ZD4KICAgICAgPC90cj4KICAgICAgICA8L3RhYmxlPgogICAgICAgIDxkaXYgY2xhc3M9InNlZS1tb3JlIj4KICAgICAgICAgICAgPGEgaHJlZj0iZnVsbGNyZWRpdHM/cmVmXz10dF9jbF9zbSNjYXN0Igo+U2VlIGZ1bGwgY2FzdDwvYT4mbmJzcDsmcmFxdW87CiAgICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlQ2FzdFdpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIlRpdGxlQ2FzdFdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJUaXRsZUNhc3RXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CgoKCiAgICAKICAgIAogICAgCgoJCgk8IS0tIG5vIGNvbnRlbnQgcmVjZWl2ZWQgZm9yIHNsb3Q6IG1haW5kZXRhaWxzX2NlbnRlcl9hZCAtLT4KCQoKCiAgICAKICAgIAogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlU3RvcnlsaW5lV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVTdG9yeWxpbmVXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgPGRpdiBjbGFzcyA9ICJhcnRpY2xlIiBpZD0idGl0bGVTdG9yeUxpbmUiPgogICAgPHNwYW4gY2xhc3M9cmlnaHRjb3JuZXJsaW5rID4KICAgICAgICAgICAgPGEgaHJlZj0iL3JlZ2lzdGVyL2xvZ2luP3doeT1lZGl0JnJlZl89dHRfc3RyeSIKcmVsPSJsb2dpbiI+RWRpdDwvYT4KICAgIDwvc3Bhbj4KICAgIAogICAgICAgIDxoMj5TdG9yeWxpbmU8L2gyPgogICAgICAgIAogICAgICAgIDxkaXYgY2xhc3M9ImlubGluZSBjYW53cmFwIiBpdGVtcHJvcD0iZGVzY3JpcHRpb24iPgogICAgICAgICAgICA8cD4KRG9tIENvYmIgaXMgYSBza2lsbGVkIHRoaWVmLCB0aGUgYWJzb2x1dGUgYmVzdCBpbiB0aGUgZGFuZ2Vyb3VzIGFydCBvZiBleHRyYWN0aW9uLCBzdGVhbGluZyB2YWx1YWJsZSBzZWNyZXRzIGZyb20gZGVlcCB3aXRoaW4gdGhlIHN1YmNvbnNjaW91cyBkdXJpbmcgdGhlIGRyZWFtIHN0YXRlLCB3aGVuIHRoZSBtaW5kIGlzIGF0IGl0cyBtb3N0IHZ1bG5lcmFibGUuIENvYmIncyByYXJlIGFiaWxpdHkgaGFzIG1hZGUgaGltIGEgY292ZXRlZCBwbGF5ZXIgaW4gdGhpcyB0cmVhY2hlcm91cyBuZXcgd29ybGQgb2YgY29ycG9yYXRlIGVzcGlvbmFnZSwgYnV0IGl0IGhhcyBhbHNvIG1hZGUgaGltIGFuIGludGVybmF0aW9uYWwgZnVnaXRpdmUgYW5kIGNvc3QgaGltIGV2ZXJ5dGhpbmcgaGUgaGFzIGV2ZXIgbG92ZWQuIE5vdyBDb2JiIGlzIGJlaW5nIG9mZmVyZWQgYSBjaGFuY2UgYXQgcmVkZW1wdGlvbi4gT25lIGxhc3Qgam9iIGNvdWxkIGdpdmUgaGltIGhpcyBsaWZlIGJhY2sgYnV0IG9ubHkgaWYgaGUgY2FuIGFjY29tcGxpc2ggdGhlIGltcG9zc2libGUgLSBpbmNlcHRpb24uIEluc3RlYWQgb2YgdGhlIHBlcmZlY3QgaGVpc3QsIENvYmIgYW5kIGhpcyB0ZWFtIG9mIHNwZWNpYWxpc3RzIGhhdmUgdG8gcHVsbCBvZmYgdGhlIHJldmVyc2U6IHRoZWlyIHRhc2sgaXMgbm90IHRvIHN0ZWFsIGFuIGlkZWEgYnV0IHRvIHBsYW50IG9uZS4gSWYgdGhleSBzdWNjZWVkLCBpdCBjb3VsZCBiZSB0aGUgcGVyZmVjdCBjcmltZS4gQnV0IG5vIGFtb3VudCBvZiBjYXJlZnVsIHBsYW5uaW5nIG9yIGV4cGVydGlzZSBjYW4gcHJlcGFyZSB0aGUgdGVhbSBmb3IgdGhlIGRhbmdlcm91cyBlbmVteSB0aGF0IHNlZW1zIHRvIHByZWRpY3QgdGhlaXIgZXZlcnkgbW92ZS4gQW4gZW5lbXkgdGhhdCBvbmx5IENvYmIgY291bGQgaGF2ZSBzZWVuIGNvbWluZy4gICAgICAgICAgICAgICAgPGVtIGNsYXNzPSJub2JyIj5Xcml0dGVuIGJ5CjxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/cGxvdF9hdXRob3I9V2FybmVyJTIwQnJvcy4lMjBQaWN0dXJlcyZ2aWV3PXNpbXBsZSZzb3J0PWFscGhhJnJlZl89dHRfc3RyeV9wbCIKPldhcm5lciBCcm9zLiBQaWN0dXJlczwvYT48L2VtPiAgICAgICAgICAgIDwvcD4KICAgICAgICA8L2Rpdj4KICAgICAgICAKICAgICAgICA8c3BhbiBjbGFzcz0ic2VlLW1vcmUgaW5saW5lIj4gCiAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L3Bsb3RzdW1tYXJ5P3JlZl89dHRfc3RyeV9wbCIKPlBsb3QgU3VtbWFyeTwvYT4KICAgIDxzcGFuPnw8L3NwYW4+CiAgICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9zeW5vcHNpcz9yZWZfPXR0X3N0cnlfcGwiCj5QbG90IFN5bm9wc2lzPC9hPgogICAgPC9zcGFuPgogICAgICAgIDxociAvPgogICAgICAgIDxkaXYgY2xhc3M9InNlZS1tb3JlIGlubGluZSBjYW53cmFwIiBpdGVtcHJvcD0ia2V5d29yZHMiPgogICAgICAgICAgICA8aDQgY2xhc3M9ImlubGluZSI+UGxvdCBLZXl3b3Jkczo8L2g0Pgo8YSBocmVmPSIva2V5d29yZC9kcmVhbT9yZWZfPXR0X3N0cnlfa3ciCj4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ia2V5d29yZHMiPmRyZWFtPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+fDwvc3Bhbj4KPGEgaHJlZj0iL2tleXdvcmQvc3ViY29uc2Npb3VzP3JlZl89dHRfc3RyeV9rdyIKPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJrZXl3b3JkcyI+c3ViY29uc2Npb3VzPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+fDwvc3Bhbj4KPGEgaHJlZj0iL2tleXdvcmQvYW1iaWd1b3VzLWVuZGluZz9yZWZfPXR0X3N0cnlfa3ciCj4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ia2V5d29yZHMiPmFtYmlndW91cyBlbmRpbmc8L3NwYW4+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8c3Bhbj58PC9zcGFuPgo8YSBocmVmPSIva2V5d29yZC90aGllZj9yZWZfPXR0X3N0cnlfa3ciCj4gPHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ia2V5d29yZHMiPnRoaWVmPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+fDwvc3Bhbj4KPGEgaHJlZj0iL2tleXdvcmQvYXJjaGl0ZWN0dXJlP3JlZl89dHRfc3RyeV9rdyIKPiA8c3BhbiBjbGFzcz0iaXRlbXByb3AiIGl0ZW1wcm9wPSJrZXl3b3JkcyI+YXJjaGl0ZWN0dXJlPC9zcGFuPjwvYT4KICAgICAgICAgICAgPHNwYW4+fDwvc3Bhbj4mbmJzcDs8bm9icj48YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2tleXdvcmRzP3JlZl89dHRfc3RyeV9rdyIKPlNlZSBBbGwgKDI4Myk8L2E+Jm5ic3A7JnJhcXVvOzwvbm9icj4KCiAgICAgICAgPC9kaXY+ICAgICAgCiAgICAgICAgPGhyIC8+CiAgICAgICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgICAgICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPlRhZ2xpbmVzOjwvaDQ+CllvdXIgbWluZCBpcyB0aGUgc2NlbmUgb2YgdGhlIGNyaW1lICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L3RhZ2xpbmVzP3JlZl89dHRfc3RyeV90ZyIKPiBTZWUgbW9yZTwvYT4mbmJzcDsmcmFxdW87CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGhyIC8+CiAgICAgICAgPGRpdiBjbGFzcz0ic2VlLW1vcmUgaW5saW5lIGNhbndyYXAiIGl0ZW1wcm9wPSJnZW5yZSI+CiAgICAgICAgICAgIDxoNCBjbGFzcz0iaW5saW5lIj5HZW5yZXM6PC9oND4KPGEgaHJlZj0iL2dlbnJlL0FjdGlvbj9yZWZfPXR0X3N0cnlfZ25yIgo+IEFjdGlvbjwvYT4mbmJzcDs8c3Bhbj58PC9zcGFuPgo8YSBocmVmPSIvZ2VucmUvQWR2ZW50dXJlP3JlZl89dHRfc3RyeV9nbnIiCj4gQWR2ZW50dXJlPC9hPiZuYnNwOzxzcGFuPnw8L3NwYW4+CjxhIGhyZWY9Ii9nZW5yZS9TY2ktRmk/cmVmXz10dF9zdHJ5X2duciIKPiBTY2ktRmk8L2E+Jm5ic3A7PHNwYW4+fDwvc3Bhbj4KPGEgaHJlZj0iL2dlbnJlL1RocmlsbGVyP3JlZl89dHRfc3RyeV9nbnIiCj4gVGhyaWxsZXI8L2E+CiAgICAgICAgPC9kaXY+ICAgICAgCiAgICAgICAgCiAgICAgICAgICAgICA8aHIvPgogICAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgICAgICAgICAgICAgPGg0Pk1vdGlvbiBQaWN0dXJlIFJhdGluZwogICAgICAgICAgICAgICAgICAgICg8YSBocmVmPSIvbXBhYT9yZWZfPXR0X3N0cnlfcGciCj5NUEFBPC9hPikKICAgICAgICAgICAgICAgIDwvaDQ+CiAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJjb250ZW50UmF0aW5nIj5SYXRlZCBQRy0xMyBmb3Igc2VxdWVuY2VzIG9mIHZpb2xlbmNlIGFuZCBhY3Rpb24gdGhyb3VnaG91dDwvc3Bhbj4KPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L3BhcmVudGFsZ3VpZGU/cmVmXz10dF9zdHJ5X3BnI2NlcnRpZmljYXRpb24iCj4gU2VlIGFsbCBjZXJ0aWZpY2F0aW9uczwvYT4mbmJzcDsmcmFxdW87CiAgICAgICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgICAgICA8aDQgY2xhc3M9ImlubGluZSI+UGFyZW50cyBHdWlkZTo8L2g0PgogICAgICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiIGl0ZW1wcm9wPSJhdWRpZW5jZSIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9BdWRpZW5jZSI+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvcGFyZW50YWxndWlkZT9yZWZfPXR0X3N0cnlfcGciCml0ZW1wcm9wPSd1cmwnPiBWaWV3IGNvbnRlbnQgYWR2aXNvcnk8L2E+Jm5ic3A7JnJhcXVvOwogICAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZVN0b3J5bGluZVdpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIlRpdGxlU3RvcnlsaW5lV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIlRpdGxlU3RvcnlsaW5lV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgoKCiAgICAKICAgIAogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlRGV0YWlsc1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlRGV0YWlsc1dpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICAKICAgIDxkaXYgY2xhc3MgPSAiYXJ0aWNsZSIgaWQ9InRpdGxlRGV0YWlscyI+CiAgICA8c3BhbiBjbGFzcz1yaWdodGNvcm5lcmxpbmsgPgogICAgICAgICAgICA8YSBocmVmPSIvcmVnaXN0ZXIvbG9naW4/d2h5PWVkaXQmcmVmXz10dF9kdF9kdCIKcmVsPSJsb2dpbiI+RWRpdDwvYT4KICAgIDwvc3Bhbj4KICAgICAgICA8aDI+RGV0YWlsczwvaDI+CiAgICAgIDxkaXYgY2xhc3M9InR4dC1ibG9jayI+CiAgICAgIDxoNCBjbGFzcz0iaW5saW5lIj5PZmZpY2lhbCBTaXRlczo8L2g0PgogICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPW9mZnNpdGUtZmFjZWJvb2smdG9rZW49QkNZZ0xydHVnVS1qTGNpVWFXcml5M3N3SDZORXBUQjNtbmkxUVIxMWhNejI2dHViM3g3M1NjTUxOYVBYR3NtalBxMGtvcXI4ZklCTiUwRCUwQUwwTHVpV3JqbWRRY1U4cUdSMHpsbENVdTN3MXRKMHVINWNXYXM0TktfSUd4T0l5d0NXd203RVVGVzc0OWpPbFk4b19kcFVCblJaaG8lMEQlMEEydmJvQ2todFhLeWdYS0lILVpzcVlpbXFQUmc4aGxLdVdva1BNMnZOOUxwZ2Vxb1VHS1dDWXFPQjliTnBQOEtkUEpPVjJDdFNSMHZLJTBEJTBBTDJIRnhGc2Jsb0UlMEQlMEEmcmVmXz10dF9wZHRfb2ZzX29mZnNpdGVfMCIKcmVsPSJub2ZvbGxvdyIgaXRlbXByb3A9J3VybCc+T2ZmaWNpYWwgRmFjZWJvb2s8L2E+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CiAgICAgICAgCiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249b2Zmc2l0ZS13YXJuZXJicm9zJnRva2VuPUJDWW9lM29tUDJTTF9MMi1taENUNkgycXpvY2J6MTdmQlU2NUdrel96TnJwSXRVYXBENURDUFBJQjVnaWxfdVdfLVBXLXVSVXdJclElMEQlMEFrc1FBSTFpWm54WU1zRGh6Vkc1WVFjZ2daNkJEOEdIQWxWdFZxVzg5c19VWEhYOWhxbS1nZXFQcXA5UWQ1T3BnZXMzVFJ6ejVnNi01JTBEJTBBQ3lJSUJQRnd0RWhPbThpb1FCMlpFNXpudnhFUFBieVBSWHFMY3lsMm5zdEZqWW40U2pSWG5TMTRYQ0lqeXZCYUlvV25HenNLUEd3VSUwRCUwQUdCVDFxYTY4N1AwJTBEJTBBJnJlZl89dHRfcGR0X29mc19vZmZzaXRlXzEiCnJlbD0ibm9mb2xsb3ciIGl0ZW1wcm9wPSd1cmwnPldhcm5lciBCcm9zLiBbR2VybWFueV08L2E+CiAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CiAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiPgogICAgICAgICAgPGEgaHJlZj0iZXh0ZXJuYWxzaXRlcz9yZWZfPXR0X2R0X2R0I29mZmljaWFsIgppdGVtcHJvcD0ndXJsJz5TZWUgbW9yZTwvYT4mbmJzcDsmcmFxdW87CiAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPkNvdW50cnk6PC9oND4KICAgICAgICA8YSBocmVmPSIvc2VhcmNoL3RpdGxlP2NvdW50cmllcz11cyZyZWZfPXR0X2R0X2R0IgppdGVtcHJvcD0ndXJsJz5VU0E8L2E+CiAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgogICAgICAgIDxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/Y291bnRyaWVzPWdiJnJlZl89dHRfZHRfZHQiCml0ZW1wcm9wPSd1cmwnPlVLPC9hPgogICAgPC9kaXY+CiAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPkxhbmd1YWdlOjwvaDQ+CiAgICAgICAgPGEgaHJlZj0iL3NlYXJjaC90aXRsZT90aXRsZV90eXBlPWZlYXR1cmUmbGFuZ3VhZ2VzPWVuJnNvcnQ9bW92aWVtZXRlcixhc2MmcmVmXz10dF9kdF9kdCIKaXRlbXByb3A9J3VybCc+RW5nbGlzaDwvYT4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Imdob3N0Ij58PC9zcGFuPgogICAgICAgIDxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/dGl0bGVfdHlwZT1mZWF0dXJlJmxhbmd1YWdlcz1qYSZzb3J0PW1vdmllbWV0ZXIsYXNjJnJlZl89dHRfZHRfZHQiCml0ZW1wcm9wPSd1cmwnPkphcGFuZXNlPC9hPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+CiAgICAgICAgPGEgaHJlZj0iL3NlYXJjaC90aXRsZT90aXRsZV90eXBlPWZlYXR1cmUmbGFuZ3VhZ2VzPWZyJnNvcnQ9bW92aWVtZXRlcixhc2MmcmVmXz10dF9kdF9kdCIKaXRlbXByb3A9J3VybCc+RnJlbmNoPC9hPgogICAgPC9kaXY+CiAgCiAgICAKICAgIDxkaXYgY2xhc3M9InR4dC1ibG9jayI+CiAgICA8aDQgY2xhc3M9ImlubGluZSI+UmVsZWFzZSBEYXRlOjwvaDQ+IDE2IEp1bHkgMjAxMCAoVVNBKQogICAgPHNwYW4gY2xhc3M9InNlZS1tb3JlIGlubGluZSI+CiAgICAgIDxhIGhyZWY9InJlbGVhc2VpbmZvP3JlZl89dHRfZHRfZHQiCml0ZW1wcm9wPSd1cmwnPlNlZSBtb3JlPC9hPiZuYnNwOyZyYXF1bzsKICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogIAogICAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgICA8aDQgY2xhc3M9ImlubGluZSI+QWxzbyBLbm93biBBczo8L2g0PiBJbmNlcHRpb246IFRoZSBJTUFYIEV4cGVyaWVuY2UKICAgICAgPHNwYW4gY2xhc3M9InNlZS1tb3JlIGlubGluZSI+CiAgICAgICAgPGEgaHJlZj0icmVsZWFzZWluZm8/cmVmXz10dF9kdF9kdCNha2FzIgppdGVtcHJvcD0ndXJsJz5TZWUgbW9yZTwvYT4mbmJzcDsmcmFxdW87CiAgICAgIDwvc3Bhbj4KICAgICAgPC9kaXY+CiAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPkZpbG1pbmcgTG9jYXRpb25zOjwvaDQ+IAogICAgPGEgaHJlZj0iL3NlYXJjaC90aXRsZT9sb2NhdGlvbnM9QmVkZm9yZHNoaXJlLCUyMEVuZ2xhbmQsJTIwVUsmcmVmXz10dF9kdF9kdCIKaXRlbXByb3A9J3VybCc+QmVkZm9yZHNoaXJlLCBFbmdsYW5kLCBVSzwvYT4KICAgICAgPHNwYW4gY2xhc3M9InNlZS1tb3JlIGlubGluZSI+CiAgICAgICAgPGEgaHJlZj0ibG9jYXRpb25zP3JlZl89dHRfZHRfZHQiCml0ZW1wcm9wPSd1cmwnPlNlZSBtb3JlPC9hPiZuYnNwOyZyYXF1bzsKICAgICAgPC9zcGFuPgogICAgPC9kaXY+CiAgCiAgICA8aHIgLz4gCiAgICA8aDMgY2xhc3M9InN1YmhlYWRpbmciPkJveCBPZmZpY2U8L2gzPgogIAogICAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgICA8aDQgY2xhc3M9ImlubGluZSI+QnVkZ2V0OjwvaDQ+ICAgICAgICAkMTYwLDAwMCwwMDAgICAgICAgIAoKICAgICAgPHNwYW4gY2xhc3M9ImF0dHJpYnV0ZSI+KGVzdGltYXRlZCk8L3NwYW4+CiAgICAgIDwvZGl2PgogIAogICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgIDxoNCBjbGFzcz0iaW5saW5lIj5PcGVuaW5nIFdlZWtlbmQ6PC9oND4gICAgICAgICAmcG91bmQ7NSw5MTIsODE0ICAgICAgICAKCiAgICAgIChVSykKICAgICAgPHNwYW4gY2xhc3M9ImF0dHJpYnV0ZSI+KDE2IEp1bHkgMjAxMCk8L3NwYW4+CiAgICA8L2Rpdj4KICAKICAgIDxkaXYgY2xhc3M9InR4dC1ibG9jayI+CiAgICA8aDQgY2xhc3M9ImlubGluZSI+R3Jvc3M6PC9oND4gICAgICAgICQyOTIsNTY4LDg1MSAgICAgICAgCgogICAgICA8c3BhbiBjbGFzcz0iYXR0cmlidXRlIj4oVVNBKTwvc3Bhbj4KICAgICAgPHNwYW4gY2xhc3M9ImF0dHJpYnV0ZSI+KDMxIERlY2VtYmVyIDIwMTApPC9zcGFuPgogICAgPC9kaXY+CiAgCiAgPHNwYW4gY2xhc3M9InNlZS1tb3JlIGlubGluZSI+CiAgICA8YSBocmVmPSJidXNpbmVzcz9yZWZfPXR0X2R0X2J1cyIKaXRlbXByb3A9J3VybCc+U2VlIG1vcmU8L2E+Jm5ic3A7JnJhcXVvOwogIDwvc3Bhbj4gIAogIDxociAvPiAKICA8aDMgY2xhc3M9InN1YmhlYWRpbmciPkNvbXBhbnkgQ3JlZGl0czwvaDM+CiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPlByb2R1Y3Rpb24gQ286PC9oND4KICAgICAgICA8c3BhbiBpdGVtcHJvcD0iY3JlYXRvciIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9Pcmdhbml6YXRpb24iPgo8YSBocmVmPSIvY29tcGFueS9jbzAwMjY4NDA/cmVmXz10dF9kdF9jbyIKaXRlbXByb3A9J3VybCc+PHNwYW4gY2xhc3M9Iml0ZW1wcm9wIiBpdGVtcHJvcD0ibmFtZSI+V2FybmVyIEJyb3MuPC9zcGFuPjwvYT48L3NwYW4+LCAgICAgICAgPHNwYW4gaXRlbXByb3A9ImNyZWF0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KPGEgaHJlZj0iL2NvbXBhbnkvY28wMTU5MTExP3JlZl89dHRfZHRfY28iCml0ZW1wcm9wPSd1cmwnPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPkxlZ2VuZGFyeSBFbnRlcnRhaW5tZW50PC9zcGFuPjwvYT48L3NwYW4+LCAgICAgICAgPHNwYW4gaXRlbXByb3A9ImNyZWF0b3IiIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvT3JnYW5pemF0aW9uIj4KPGEgaHJlZj0iL2NvbXBhbnkvY28wMTQ3OTU0P3JlZl89dHRfZHRfY28iCml0ZW1wcm9wPSd1cmwnPjxzcGFuIGNsYXNzPSJpdGVtcHJvcCIgaXRlbXByb3A9Im5hbWUiPlN5bmNvcHk8L3NwYW4+PC9hPjwvc3Bhbj4gICAgICA8c3BhbiBjbGFzcz0ic2VlLW1vcmUgaW5saW5lIj4KICAgICAgICA8YSBocmVmPSJjb21wYW55Y3JlZGl0cz9yZWZfPXR0X2R0X2NvIgppdGVtcHJvcD0ndXJsJz5TZWUgbW9yZTwvYT4mbmJzcDsmcmFxdW87CiAgICAgIDwvc3Bhbj4KICAgIDwvZGl2PgogIDxkaXYgY2xhc3M9InR4dC1ibG9jayI+IAogIFNob3cgZGV0YWlsZWQKPGEgaHJlZj0iaHR0cDovL3Byby5pbWRiLmNvbS90aXRsZS90dDEzNzU2NjYvY29tcGFueWNyZWRpdHM/cmY9Y29uc190dF9jb2NyZWRfdHQmcmVmXz1jb25zX3R0X2NvY3JlZF90dCIKaXRlbXByb3A9J3VybCc+Y29tcGFueSBjb250YWN0IGluZm9ybWF0aW9uPC9hPgogIG9uIAogIDxhIGhyZWY9Imh0dHA6Ly9wcm8uaW1kYi5jb20vc2lnbnVwL2luZGV4Lmh0bWw/cmY9Y29uc190dF9jb2NyZWRfc3BsJnJlZl89Y29uc190dF9jb2NyZWRfc3BsIgppdGVtcHJvcD0ndXJsJz5JTURiUHJvPC9hPiZuYnNwOyZyYXF1bzsKICA8L2Rpdj4KICAKCiAgPGhyIC8+CiAgPGgzIGNsYXNzPSJzdWJoZWFkaW5nIj5UZWNobmljYWwgU3BlY3M8L2gzPgogIAogICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgICAgPGg0IGNsYXNzPSJpbmxpbmUiPlJ1bnRpbWU6PC9oND4gCiAgICAgICAgPHRpbWUgaXRlbXByb3A9ImR1cmF0aW9uIiBkYXRldGltZT0iUFQxNDhNIj4xNDggbWluPC90aW1lPgogICAgPC9kaXY+CiAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPlNvdW5kIE1peDo8L2g0PgogICAgICAgIDxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/c291bmRfbWl4ZXM9ZG9sYnlfZGlnaXRhbCZyZWZfPXR0X2R0X3NwZWMiCml0ZW1wcm9wPSd1cmwnPkRvbGJ5IERpZ2l0YWw8L2E+CjxzcGFuIGNsYXNzPSJnaG9zdCI+fDwvc3Bhbj4gICAgICAgIDxhIGhyZWY9Ii9zZWFyY2gvdGl0bGU/c291bmRfbWl4ZXM9ZHRzJnJlZl89dHRfZHRfc3BlYyIKaXRlbXByb3A9J3VybCc+RFRTPC9hPgo8c3BhbiBjbGFzcz0iZ2hvc3QiPnw8L3NwYW4+ICAgICAgICA8YSBocmVmPSIvc2VhcmNoL3RpdGxlP3NvdW5kX21peGVzPXNkZHMmcmVmXz10dF9kdF9zcGVjIgppdGVtcHJvcD0ndXJsJz5TRERTPC9hPgogICAgPC9kaXY+CiAgCiAgICA8ZGl2IGNsYXNzPSJ0eHQtYmxvY2siPgogICAgPGg0IGNsYXNzPSJpbmxpbmUiPkNvbG9yOjwvaDQ+CiAgICAgICAgPGEgaHJlZj0iL3NlYXJjaC90aXRsZT9jb2xvcnM9Y29sb3ImcmVmXz10dF9kdF9zcGVjIgppdGVtcHJvcD0ndXJsJz5Db2xvcjwvYT4KICAgIDwvZGl2PgogIAogICAgPGRpdiBjbGFzcz0idHh0LWJsb2NrIj4KICAgIDxoNCBjbGFzcz0iaW5saW5lIj5Bc3BlY3QgUmF0aW86PC9oND4gMi4zNSA6IDEKICAgIDwvZGl2PgogIAogIFNlZSA8YSBocmVmPSJ0ZWNobmljYWw/cmVmXz10dF9kdF9zcGVjIgppdGVtcHJvcD0ndXJsJz5mdWxsIHRlY2huaWNhbCBzcGVjczwvYT4mbmJzcDsmcmFxdW87CiAgICA8L2Rpdj4KCiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZURldGFpbHNXaWRnZXRfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJUaXRsZURldGFpbHNXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiVGl0bGVEZXRhaWxzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgoKCiAgICAKICAgIAogICAgCgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJiIiwgIlRpdGxlRGlkWW91S25vd1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlRGlkWW91S25vd1dpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICA8ZGl2IGlkPSJ0aXRsZURpZFlvdUtub3ciIGNsYXNzPSJhcnRpY2xlIj4KICAgIDxzcGFuIGNsYXNzPXJpZ2h0Y29ybmVybGluayA+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9yZWdpc3Rlci9sb2dpbj93aHk9ZWRpdCZyZWZfPXR0X3Rydl90cnYiCnJlbD0ibG9naW4iPkVkaXQ8L2E+CiAgICA8L3NwYW4+CiAgICAgICAgPGgyPkRpZCBZb3UgS25vdz88L2gyPgogICAgPGRpdiBpZD0idHJpdmlhIiBjbGFzcz0idHh0LWJsb2NrIj4KICAgICAgICA8aDQ+VHJpdmlhPC9oND4KVGhlIHJ1bm5pbmcgdGltZSBvZiB0aGUgbW92aWUgSU5DRVBUSU9OIGluIERWRCBpcyBleGFjdGx5IDg4ODggc2Vjb25kcy4gICAgICAgIDxhIGhyZWY9InRyaXZpYT9yZWZfPXR0X3Rydl90cnYiCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+ICAmcmFxdW87CiAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxociAvPgogICAgIDxkaXYgaWQ9Imdvb2ZzIiAgY2xhc3M9InR4dC1ibG9jayI+CiAgICAgICAgPGg0Pkdvb2ZzPC9oND4KV2hlbiBBcnRodXIgYW5kIEFyaWFkbmUgYXJlIGxvb2tpbmcgYXQgdGhlIGhvdGVsIHJvb21zIGluIHRoZSBzZWNvbmQgbGF5ZXIgb2YgZHJlYW1zLCBBcmlhZG5lJ3MgYnVuIGtlZXBzIG1vdmluZyBmcm9tIHRoZSBiYWNrIG9mIGhlciBoZWFkIHRvIHRoZSB0b3Agb2YgaGVyIGhlYWQuICAgICAgICA8YSBocmVmPSJ0cml2aWE/dGFiPWdmJnJlZl89dHRfdHJ2X2dmIgpjbGFzcz0ibm9iciIgPlNlZSBtb3JlPC9hPiAgJnJhcXVvOwogICAgPC9kaXY+ICAgCiAgICAgICAgICAgICAgICA8aHIgLz4KICAgIDxkaXYgaWQ9InF1b3RlcyIgY2xhc3M9InRleHQtYmxvY2siPgogICAgICAgIDxoND5RdW90ZXM8L2g0PgpbPHNwYW4gY2xhc3M9ImZpbmUiPmZpcnN0IGxpbmVzPC9zcGFuPl0KPGJyIC8+PGEgaHJlZj0iL25hbWUvbm0wNjQ1Nzg1Lz9yZWZfPXR0X3Rydl9xdSIKPjxzcGFuIGNsYXNzPSJjaGFyYWN0ZXIiPlNhaXRvJ3MgQXR0ZW5kYW50PC9zcGFuPjwvYT46CkhlIHdhcyBkZWxpcmlvdXMgYnV0IGFza2VkIGZvciB5b3UgYnkgbmFtZS4gU2hvdyBoaW0uLi4KPGJyIC8+PGEgaHJlZj0iL25hbWUvbm0wNTU2MDcwLz9yZWZfPXR0X3Rydl9xdSIKPjxzcGFuIGNsYXNzPSJjaGFyYWN0ZXIiPkphcGFuZXNlIFNlY3VyaXR5IEd1YXJkPC9zcGFuPjwvYT46CkhlIHdhcyBjYXJyeWluZyBub3RoaW5nIGJ1dCB0aGlzLi4uCjxiciAvPls8c3BhbiBjbGFzcz0iZmluZSI+Z3VuPC9zcGFuPl0KPGJyIC8+PGEgaHJlZj0iL25hbWUvbm0wNTU2MDcwLz9yZWZfPXR0X3Rydl9xdSIKPjxzcGFuIGNsYXNzPSJjaGFyYWN0ZXIiPkphcGFuZXNlIFNlY3VyaXR5IEd1YXJkPC9zcGFuPjwvYT46CkFuZCB0aGlzLi4uCjxiciAvPls8c3BhbiBjbGFzcz0iZmluZSI+c3Bpbm5pbmcgdG9wPC9zcGFuPl0KPGJyIC8+PGEgaHJlZj0iL25hbWUvbm0wOTEzODIyLz9yZWZfPXR0X3Rydl9xdSIKPjxzcGFuIGNsYXNzPSJjaGFyYWN0ZXIiPlNhaXRvPC9zcGFuPjwvYT46CkFyZSB5b3UgaGVyZSB0byBraWxsIG1lPwo8YnIgLz4gICAgICAgIDxhIGhyZWY9InRyaXZpYT90YWI9cXQmcmVmXz10dF90cnZfcXUiCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+ICZyYXF1bzsKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGhyIC8+CiAgICAgPGRpdiBpZD0iY3JhenlDcmVkaXRzIiAgY2xhc3M9InR4dC1ibG9jayI+CiAgICAgICAgPGg0PkNyYXp5IENyZWRpdHM8L2g0PgpUaGUgbW92aWUgdGl0bGUgbmV2ZXIgYXBwZWFycyBpbiB0aGUgYmVnaW5uaW5nIG9mIHRoZSBtb3ZpZSwgYnV0IGFwcGVhcnMgdGhyZWUgdGltZXMgZHVyaW5nIHRoZSBlbmQgY3JlZGl0cy4gT25jZSBhdCB0aGUgYmVnaW5uaW5nLCBhZ2FpbiBhZnRlciB0aGUgbWFpbiBhY3RvcnMgYW5kIGRldmVsb3BlcnMsIGFuZCBvbmNlIG1vcmUgYXQgdGhlIHZlcnkgZW5kLiAgICAgICAgPGEgaHJlZj0idHJpdmlhP3RhYj1jeiZyZWZfPXR0X3Rydl9jYyIKY2xhc3M9Im5vYnIiID5TZWUgbW9yZTwvYT4gICZyYXF1bzsKICAgIDwvZGl2PiAgIAogICAgICAgICAgICAgICAgPGhyIC8+CiAgICA8ZGl2IGlkPSJjb25uZWN0aW9ucyIgY2xhc3M9InRleHQtYmxvY2siPgogICAgICAgIDxoND5Db25uZWN0aW9uczwvaDQ+CiAgICAgICAgUmVmZXJlbmNlZCBpbiA8YSBocmVmPSIvdGl0bGUvdHQ0MzIzNTE0P3JlZl89dHRfdHJ2X2NubiI+TWFraW5nIE1vbnN0ZXJzOiBNYWtldXAgRWZmZWN0cyBvZiBOaWdodGJyZWVkPC9hPiZuYnNwOygyMDE0KQoKCiAgICAgICAgPGEgaHJlZj0idHJpdmlhP3RhYj1tYyZyZWZfPXR0X3Rydl9jbm4iCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+ICZyYXF1bzsKICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGhyIC8+CiAgICA8ZGl2IGlkPSJzb3VuZHRyYWNrcyIgY2xhc3M9InRleHQtYmxvY2siPgogICAgICAgIDxoND5Tb3VuZHRyYWNrczwvaDQ+CkFib3VuIFNhbGVob3VuPGJyIC8+CldyaXR0ZW4gYnkgPGEgaHJlZj0iL25hbWUvbm0zMzk1ODg0P3JlZl89dHRfdHJ2X3NuZCI+WW91c3NlZiBFbCBNZWpqYWQ8L2E+IGFuZCA8YSBocmVmPSIvbmFtZS9ubTI5NjQ1NjE/cmVmXz10dF90cnZfc25kIj5QYXQgSmFiYmFyPC9hPjxiciAvPgpQZXJmb3JtZWQgYnkgPGEgaHJlZj0iL25hbWUvbm0zMjE2MjAyP3JlZl89dHRfdHJ2X3NuZCI+QW1pcmEgU2FxYXRpPC9hPjxiciAvPgpDb3VydGVzeSBvZiBCYXJyYWthIGVsIEZhcm5hdHNoaSBQcm9kdWN0aW9uczxiciAvPiAgICAgICAgPGEgaHJlZj0ic291bmR0cmFjaz9yZWZfPXR0X3Rydl9zbmQiCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+ICZyYXF1bzsKICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZURpZFlvdUtub3dXaWRnZXRfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJUaXRsZURpZFlvdUtub3dXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiVGl0bGVEaWRZb3VLbm93V2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgoKCiAgICAKICAgIAogICAgCgoKICAgIAogICAgCiAgICAKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmIiLCAiVGl0bGVGQVFXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZUZBUVdpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICAKICAgIDxkaXYgY2xhc3M9ImFydGljbGUiIGlkPSJ0aXRsZUZBUSI+CiAgICAgICAgPGgyPkZyZXF1ZW50bHkgQXNrZWQgUXVlc3Rpb25zPC9oMj4KICAgICAgICAKICAgICAgICAgICAgPGRpdiBjbGFzcz0iZmFxIiA+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ib2RkIj4KICAgICAgICAgICAgICAgICAgICA8Yj5ROjwvYj4KPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9mYXE/cmVmXz10dF9mYXFfMSMuMi4xLjM1Igo+IElzIEVhbWVzIHRoZSBEcmVhbWVyIGZvciB0aGUgdGhpcmQgbGV2ZWwgb3IgRmlzY2hlcj88L2E+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZXZlbiI+CiAgICAgICAgICAgICAgICAgICAgPGI+UTo8L2I+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvZmFxP3JlZl89dHRfZmFxXzIjLjIuMS4xOSIKPiBXYXMgdGhlIGVuZCBhIGRyZWFtIG9yIHJlYWxpdHk/PC9hPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im9kZCI+CiAgICAgICAgICAgICAgICAgICAgPGI+UTo8L2I+CjxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvZmFxP3JlZl89dHRfZmFxXzMjLjIuMS44Igo+IFdoYXQgY2F1c2VzIHRoZSBsb3NzIG9mIGdyYXZpdHkgaW4gdGhlIGhvdGVsIGRyZWFtIHdvcmxkPzwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCiAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJzZWUtbW9yZSBpbmxpbmUiID4gICAgICAgIAogICAgICAgICAgICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9mYXE/cmVmXz10dF9mYXFfc20iCmNsYXNzPSJub2JyIiA+U2VlIG1vcmU8L2E+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ic3BvaWxlcnMiPihTcG9pbGVyIEFsZXJ0ISk8L3NwYW4+PC9zcGFuPiZuYnNwOyZyYXF1bzsKICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVGQVFXaWRnZXRfZmluaXNoZWQnKTsKICAgIH0KICA8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiZSIsICJUaXRsZUZBUVdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV4ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV4KCJsZCIsICJUaXRsZUZBUVdpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgIAoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJUaXRsZVVzZXJSZXZpZXdzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVVc2VyUmV2aWV3c1dpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICA8ZGl2IGNsYXNzPSJhcnRpY2xlIiBpZD0idGl0bGVVc2VyUmV2aWV3c1RlYXNlciI+CiAgICAgICAgPGgyPlVzZXIgUmV2aWV3czwvaDI+CiAgICAgICAgPGRpdiBjbGFzcz0idXNlci1jb21tZW50cyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGlueXN0YXJiYXIiIHRpdGxlPSIxMC8xMCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9IndpZHRoOiAxMDBweDsiPiZuYnNwOzwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPHNwYW4gaXRlbXByb3A9InJldmlldyIgaXRlbXNjb3BlIGl0ZW10eXBlPSJodHRwOi8vc2NoZW1hLm9yZy9SZXZpZXciPiAgCiAgICAgICAgICAgICAgICAgICAgPHN0cm9uZyBpdGVtcHJvcD0ibmFtZSI+VGhlIHBlcmZlY3Qgc3VtbWVyIGJsb2NrYnVzdGVyPzwvc3Ryb25nPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGl0ZW1wcm9wPSJyZXZpZXdSYXRpbmciIGl0ZW1zY29wZSBpdGVtdHlwZT0iaHR0cDovL3NjaGVtYS5vcmcvUmF0aW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgPG1ldGEgaXRlbXByb3A9IndvcnN0UmF0aW5nIiBjb250ZW50ID0gIjEiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJyYXRpbmdWYWx1ZSIgY29udGVudD0iMTAiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxtZXRhIGl0ZW1wcm9wPSJiZXN0UmF0aW5nIiBjb250ZW50PSIxMCIgLz4KICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29tbWVudC1tZXRhIj4KICAgICAgICAgICAgICAgICAgICAgICAgMTIgSnVseSAyMDEwIHwgYnkgPGEgaHJlZj0iL3VzZXIvdXI0Nzc0MjU3Lz9yZWZfPXR0X3VydiIKPjxzcGFuIGl0ZW1wcm9wPSJhdXRob3IiPmNoYWFhPC9zcGFuPjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPG1ldGEgaXRlbXByb3A9ImRhdGVQdWJsaXNoZWQiIGNvbnRlbnQ9IjIwMTAtMDctMTIiIC8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIChJcmVsYW5kKQogICAgICAgICAgICAgICAgICAgICAgICAmbmRhc2g7IDxhIGhyZWY9Ii91c2VyL3VyNDc3NDI1Ny9jb21tZW50cz9yZWZfPXR0X3VydiIKPlNlZSBhbGwgbXkgcmV2aWV3czwvYT4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8cCBpdGVtcHJvcD0icmV2aWV3Qm9keSI+V2hhdCBkbyB3ZSBhc2sgZm9yIGluIGEgc3VtbWVyIGJsb2NrYnVzdGVyPyBXaGF0IGlzIGl0IHRoYXQgaW5jaXRlcyBoeXN0ZXJpYSB0aGlzIHRpbWUgZXZlcnkgeWVhciBmb3Igd2hhdGV2ZXIgZHJvc3MgdGhlIHN0dWRpb3MgY2h1cm4gb3V0PyBFcGljIGh1Z2VuZXNzPyBCbG93aW5nIHN0dWZmIHVwPyBSb21hbmNlPyBBY3Rpb24/IEhlcm9lcz8gV2hhdCBhcmUgd2UgbG9va2luZyBmb3IgaW4gYSBibG9ja2J1c3Rlcj8gSSB0aGluayBpdCBhbGwgYm9pbHMgZG93biB0byB0aHJpbGxzISBBdWRpZW5jZXMgd2FudCB0aGUgdGhyaWxsIG9mIGEgY2FyIGNoYXNlLCB0aGUgdGhyaWxsIG9mIHJvbWFuY2UsIHRoZSB0aHJpbGwgb2YgdGhlIHNwZWN0YWN1bGFyISBJZiB0aGF0IGlzIHRoZSBjYXNlLCB0aGVuIEluY2VwdGlvbiBqdXN0IG1pZ2h0IGJlIHRoZSBncmVhdGVzdCBzdW1tZXIgYmxvY2tidXN0ZXIgb2YgYWxsIHRpbWUgYXMgaXQgYWxzbyBjb250YWlucyBzb21ldGhpbmcgd2Ugb2Z0ZW4gZG9uJiN4Mjc7dCBsb29rIGZvci4uLmJyYWlucyEgJiN4MjI7V2hhdCBpcyB0aGUgbW9zdCByZXNpbGllbnQgcGFyYXNpdGU/IEFuIGlkZWEmI3gyMjsgc2F5cyBMZW9uYXJkbyBEaSBDYXByaW8mI3gyNztzIGNoYXJhY3RlciBDb2JiLiBXZWxsLCBJbmNlcHRpb24gaXMgYWxsIGFib3V0IGlkZWFzLiBJdCYjeDI3O3MgYWxsIHJpZ2h0IHRoZXJlIGluIHRoZSB0aXRsZS4gVGhlIGZpbG0gY2VudHJhbCBpZGVhIHJldm9sdmVzIGFyb3VuZCAmI3gyMjtFeHRyYWN0b3JzJiN4MjI7LCB3aG8gYXJlIHBhaWQgdG8gZXh0cmFjdCBzZWNyZXRzIGZyb20gcGVvcGxlJiN4Mjc7cyBzdWJjb25zY2lvdXMgbWluZHMgYnkgc25lYWtpbmcgaW50byB0aGVpciBkcmVhbXMsIHVzdWFsbHkgZm9yIHRoZSBwdXJwb3NlIG9mIGNvcnBvcmF0ZSBlc3Bpb25hZ2UuIEhvd2V2ZXIsIHdoZW4gb25lIGNsaWVudCBhc2tzIHRoZW0gdG8gcGxhbnQgYW4gaWRlYSBpbiB0aGUgbWluZCBvZiB0aGVpciBjb3Jwb3JhdGUgcml2YWwsICYjeDIyO0luY2VwdGlvbiYjeDIyOyBpcyBib3JuLiBUaGUgbGVzcyBzYWlkIGFib3V0IHRoaXMgZmlsbSB0aGUgYmV0dGVyLiBJdCBpcyBmdWxsIG9mIGlkZWFzIGFuZCBpbnZlbnRpb24gYW5kIGZvciBlYWNoIHNldCBwaWVjZSBJIGRpdnVsZ2UsIGEgcGllY2Ugb2YgdGhlIGZpbG0mI3gyNztzIGdlbml1cyBpcyB3ZWFrZW5lZC4gVGhpcyBpcyBhIGZpbG0gdGhhdCBjbGV2ZXJseSBhbmQgaW50cmljYXRlbHkgYnJpbmdzIHRoZSBhdWRpZW5jZSB0aHJvdWdoIHNldmVyYWwgcGxhbmVzIG9mIGV4aXN0ZW5jZSBzaW11bHRhbmVvdXNseSBidXQgbmV2ZXIgYWxsb3dzIHRoZSB2aWV3ZXIgdG8gZmVlbCBsb3N0LiBTdWNoIGlzIHRoZSBwb3dlciBvZiBDaHJpc3RvcGhlciBOb2xhbiYjeDI3O3Mgc2NyaXB0IHdoaWNoLCBJIGltYWdpbmUsIGlzIGxpa2VseSB0byBnZXQgb3Zlcmxvb2tlZCBkdWUgdG8gdGhlIHNoZWVyIHZpc3VhbCBtYWduaWZpY2VuY2Ugb2YgaGlzIGRpcmVjdGlvbi4gQnV0IGV2ZXJ5dGhpbmcgdGhhdCBtYWtlcyB0aGlzIGZpbG0gc28gZ3JlYXQgaXMgaW4gdGhlIHNjcmlwdC4uLmluIHRoZSBpZGVhcyEgRXZlcnl0aGluZyBlbHNlIGlzIGp1c3Qgc3BlY3RhY2xlLiBUaGlzIGZpbG0gYmVhcnMgYW4gdW5jYW5ueSByZXNlbWJsYW5jZSwgdGhlbWF0aWNhbGx5LCB3aXRoIERpQ2FwcmlvJiN4Mjc7cyBvdGhlciBpbnN0YW50IGNsYXNzaWMgdGhpcyB5ZWFyLCBTaHV0dGVyIElzbGFuZC4gQm90aCBmaWxtcyBpbnZlc3RpZ2F0ZSBpbiBkZXB0aCB0aGUgdHJpY2tzIGEgdHJhdW1hdGlzZWQgbWluZCBjYW4gcGxheSBvbiB0aGUgaW5kaXZpZHVhbC4gQm90aCBmaWxtcyBhcmUgbHVzY2lvdXMgdG8gd2F0Y2ggYW5kIGJvdGggZmlsbXMga2VlcCB0aGUgYXVkaWVuY2UgZmlybWx5IG91dHNpZGUgdGhlIHJlYWxtIG9mIHJlYWxpdHkuIEhvd2V2ZXIsIEluY2VwdGlvbiBpcyBhbiBldmVuIG1vcmUgbGF5ZXJlZCBmaWxtIHRoYW4gU2h1dHRlciBJc2xhbmQgYW5kIEkgYmVsaWV2ZSB0aGUgc2NpLWZpIGdlbnJlIHNldHRpbmcgd2lsbCBwcm92ZSB0byBiZSBsZXNzIGFsaWVuYXRpbmcgZm9yIGF1ZGllbmNlcyB0aGFuIHRoZSBwcmlzb24gbm9pciBvZiBTY29yc2VzZSYjeDI3O3MgZmlsbS4gVGhlcmUgaXMgbm90IGEgc2luZ2xlIGR1bGwgbW9tZW50IGluIE5vbGFuJiN4Mjc7cyBmaWxtLiBUaGVyZSBpcyBzdHlsZSwgY2hhcm0gYW5kIGludGVsbGlnZW5jZSBpbiBldmVyeSBmcmFtZSBvZiB0aGUgZmlsbS4gRXZlcnkgcGVyZm9ybWFuY2UgaXMgcGl0Y2gtcGVyZmVjdCB3aXRoIHNvbWUgc3Ryb25nIHN1cHBvcnQgYnkgRWxsZW4gUGFnZSBhbmQgSm9zZXBoIEdvcmRvbi1MZXZpdHQgcGFydGljdWxhcmx5IHdobyBoYXZlIGdyb3duIHVwIHJpZ2h0IGJlZm9yZSBvdXIgZXllcyBpbnRvIHVuZGVuaWFibGUgbW92aWUgc3RhcnMuIExlb25hcmRvIERpQ2FwcmlvIGdpdmVzIGEgdHlwaWNhbGx5IGZsYXdsZXNzIHBlcmZvcm1hbmNlIGFzIHRoZSBtdWRkbGVkLCBncmlldmluZyBtYW4gd2hvIHdlIG5ldmVyIHF1aXRlIHRydXN0IHRvIGJlIGxpdmluZyBpbiB0aGUgcmVhbCB3b3JsZC4gVGhlIGJlc3QgcGFydCBvZiBJbmNlcHRpb24gaXMgdGhlIGxhcmdlIGFtb3VudCBvZiBlZmZlY3RzIHdoaWNoIHdlcmUgZG9uZSBpbiBjYW1lcmEuIFdoaWxlIHRoZSBmaWxtIGRvZXMgbWFrZSB1c2Ugb2YgQ0dJLCB0aGVyZSBhcmUgc29tZSBwcmV0dHkgbWluZC1ibG93aW5nIHByYWN0aWNhbCBlZmZlY3RzIHdoaWNoIGFyZSBhcyBzaW1wbGUgYXMgdGhlIGNhbWVyYSB0ZWxsaW5nIGJlYXV0aWZ1bCBsaWVzOyBhIHJhcmUgdHJlYXQgdGhlc2UgZGF5cy4gVGhpcyBpcyBhIGJsb2NrYnVzdGVyIHRoYXQgdGlja3MgYWxsIHRoZSBib3hlczsgc21hcnQsIHNleHkgKGZlbW1lIGZhdGFsZSwgc2V4eSBicmFpbnkgZ2lybCwgdmVyeSBiZWF1dGlmdWwgbWVuIGluIHZlcnkgYmVhdXRpZnVsIHN1aXRzKSBhbmQgbWFnaWNhbC4gSW5jZXB0aW9uIGlzIHRoZSBraW5kIG9mIGZpbG0gdGhhdCByZW1pbmRzIG1lIHdoeSBjaW5lbWEgd2lsbCBuZXZlciBkaWUuIEJlY2F1c2UgYW55b25lIHdobyB0aGlua3MgaXQmI3gyNztzIE9LIHRvIHdhdGNoIHRoaXMgZmlsbSBvbiBhIGxhcHRvcCBvciBpUGFkIGlzIGEgZm9vbCEgVGhpcyBpcyBwdXJlIGNpbmVtYSwgYW5kIHByb3VkIG9mIGl0LiBOb3QgdG8gYmUgbWlzc2VkIG9uIHRoZSBiaWcgc2NyZWVuITwvcD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDxociAvPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ieW4iIGlkPSJ5bmRfMjI3Nzk1MiI+CiAgICAgICAgICAgICAgICAgICAgNjkzIG9mIDEsMTI4IHBlb3BsZSBmb3VuZCB0aGlzIHJldmlldyBoZWxwZnVsLiZuYnNwOwogICAgICAgICAgICAgICAgICAgIFdhcyB0aGlzIHJldmlldyBoZWxwZnVsIHRvIHlvdT8KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gc21hbGwiIHZhbHVlPSJZZXMiIG5hbWU9InluYl8yMjc3OTUyX3llcyIgb25jbGljaz0iQ1MuVE1ELnVzZXJfcmV2aWV3X3ZvdGUoMjI3Nzk1MiwgJ3R0MTM3NTY2NicsICd5ZXMnKTsiID5ZZXM8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJidG4gc21hbGwiIHZhbHVlPSJObyIgbmFtZT0ieW5iXzIyNzc5NTJfbm8iIG9uY2xpY2s9IkNTLlRNRC51c2VyX3Jldmlld192b3RlKDIyNzc5NTIsICd0dDEzNzU2NjYnLCAnbm8nKTsiID5ObzwvYnV0dG9uPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlZS1tb3JlIj4KICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9yZXZpZXdzLWVudGVyP3JlZl89dHRfdXJ2IgpyZWw9ImxvZ2luIj5SZXZpZXcgdGhpcyB0aXRsZTwvYT4KICAgICAgICAgICAgICAgIDxzcGFuPnw8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9yZXZpZXdzP3JlZl89dHRfdXJ2Igo+U2VlIGFsbCAyLDgyOCB1c2VyIHJldmlld3M8L2E+Jm5ic3A7JnJhcXVvOwogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVVc2VyUmV2aWV3c1dpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVVc2VyUmV2aWV3c1dpZGdldF9maW5pc2hlZCcpOwogICAgfQogIDwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXQgPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXQoImJlIiwgIlRpdGxlVXNlclJldmlld3NXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVleCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVleCgibGQiLCAiVGl0bGVVc2VyUmV2aWV3c1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgIAoKPHNjcmlwdD4KICAgIGlmICh0eXBlb2YgdWV0ID09ICdmdW5jdGlvbicpIHsKICAgICAgdWV0KCJiYiIsICJUaXRsZU1lc3NhZ2VCb2FyZHNXaWRnZXQiLCB7d2I6IDF9KTsKICAgIH0KPC9zY3JpcHQ+CiAgPHNjcmlwdD4KICAgIGlmICgnY3NtJyBpbiB3aW5kb3cpIHsKICAgICAgY3NtLm1lYXN1cmUoJ2NzbV9UaXRsZU1lc3NhZ2VCb2FyZHNXaWRnZXRfc3RhcnRlZCcpOwogICAgfQogIDwvc2NyaXB0PgogICAgPGRpdiBjbGFzcz0iYXJ0aWNsZSIgaWQ9ImJvYXJkc1RlYXNlciI+CiAgICAgICAgPGgyPk1lc3NhZ2UgQm9hcmRzPC9oMj4KICAgICAgICAgICAgUmVjZW50IFBvc3RzCiAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0iYm9hcmRzIj4KICAgICAgICAgICAgICAgICAgICA8dHIgY2xhc3M9Im9kZCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvYm9hcmQvbmVzdC8yNjI4MjE4MjQ/cmVmXz10dF9iZF8xIgo+V2FzIE1hbCBSaWdodD88L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii91c2VyL3VyNTI2Mjc3NzAvP3JlZl89dHRfYmRfMSIKPm5vb25vb2xhbGE8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImV2ZW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2JvYXJkL25lc3QvMjYxMjg1MDU5P3JlZl89dHRfYmRfMiIKPldoeSBkb2VzbnQgaGUgc2ltcGx5Li4uPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdXNlci91cjU3NDg2OTQ5Lz9yZWZfPXR0X2JkXzIiCj5yb290bWViYWJlPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgICAgPHRyIGNsYXNzPSJvZGQiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2JvYXJkL25lc3QvMjYyNzc5ODE1P3JlZl89dHRfYmRfMyIKPkNvYmIgYW5kIGhpcyBjaGlsZHJlbjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3VzZXIvdXIyNTIyODE1Mi8/cmVmXz10dF9iZF8zIgo+ZGFuYWVuaWNvbGU8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImV2ZW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2JvYXJkL25lc3QvMjU4ODk4MDA0P3JlZl89dHRfYmRfNCIKPlRoZSB0aHJlYXQgb2YgbGltYm88L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii91c2VyL3VyNjI4OTA4OTMvP3JlZl89dHRfYmRfNCIKPm1pY2hvbGVvbi0xODgyNTwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgICA8L3RyPgogICAgICAgICAgICAgICAgICAgIDx0ciBjbGFzcz0ib2RkIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHRkPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgaHJlZj0iL3RpdGxlL3R0MTM3NTY2Ni9ib2FyZC9uZXN0LzI1OTkwNjc3Nz9yZWZfPXR0X2JkXzUiCj5XYXMgdGhlIHdob2xlIG1vdmllIENvYmIncyBkcmVhbT88L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii91c2VyL3VyNDMxMDc4Ni8/cmVmXz10dF9iZF81Igo+c2hlbGxfMzE8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgICAgICA8dHIgY2xhc3M9ImV2ZW4iPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQ+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L2JvYXJkL25lc3QvMjUyNDg2NTM4P3JlZl89dHRfYmRfNiIKPkkgY291bGRuJ3QgcGFzdCB0aGUgaWxsb2dpYyBvZiB0aGUgcGxvdC48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIGhyZWY9Ii91c2VyL3VyNjE0MzU2OTQvP3JlZl89dHRfYmRfNiIKPmFub255bW91czEyMzU8L2E+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICA8ZGl2IGNsYXNzPSJzZWUtbW9yZSI+CiAgICAgICAgICAgIDxhIGhyZWY9Ii90aXRsZS90dDEzNzU2NjYvYm9hcmQvP3JlZl89dHRfYmRfc20iCj5EaXNjdXNzIEluY2VwdGlvbiAoMjAxMCk8L2E+IG9uIHRoZSBJTURiIG1lc3NhZ2UgYm9hcmRzICZyYXF1bzsKICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVNZXNzYWdlQm9hcmRzV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiLCAiVGl0bGVNZXNzYWdlQm9hcmRzV2lkZ2V0Iiwge3diOiAxfSk7CiAgICB9Cjwvc2NyaXB0Pgo8c2NyaXB0PgogICAgaWYgKHR5cGVvZiB1ZXggPT0gJ2Z1bmN0aW9uJykgewogICAgICB1ZXgoImxkIiwgIlRpdGxlTWVzc2FnZUJvYXJkc1dpZGdldCIsIHt3YjogMX0pOwogICAgfQo8L3NjcmlwdD4KCgogICAgCiAgICAKICAgIAoKICA8c2NyaXB0PgogICAgaWYgKCdjc20nIGluIHdpbmRvdykgewogICAgICBjc20ubWVhc3VyZSgnY3NtX1RpdGxlQ29udHJpYnV0ZVdpZGdldF9zdGFydGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CiAgICA8ZGl2IGNsYXNzPSJhcnRpY2xlIGNvbnRyaWJ1dGUiPgogICAgICAgIDxkaXYgY2xhc3M9InJpZ2h0Y29ybmVybGluayI+CjxhIGhyZWY9Ii9oZWxwLz9hZGRpbmcvJnJlZl89dHRfY25faGxwIgo+R2V0dGluZyBTdGFydGVkPC9hPgogICAgICAgICAgICA8c3Bhbj58PC9zcGFuPgo8YSBocmVmPSIvY3pvbmUvP3JlZl89dHRfY25fY3oiCj5Db250cmlidXRvciBab25lPC9hPiZuYnNwOyZyYXF1bzs8L2Rpdj4KICAgICAgICA8aDI+Q29udHJpYnV0ZSB0byBUaGlzIFBhZ2U8L2gyPgoKICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ1dHRvbi1ib3giPgogICAgICAgICAgICAgICAgICAgIDxmb3JtIG1ldGhvZD0iZ2V0IiBhY3Rpb249Imh0dHBzOi8vY29udHJpYnV0ZS5pbWRiLmNvbS91cGRhdGVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVmXyIgdmFsdWU9InR0X2NuX2VkdCIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0iZWRpdCIgdmFsdWU9ImxlZ2FjeS90aXRsZS90dDEzNzU2NjYvIiAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIHByaW1hcnkgbGFyZ2UiIHJlbD0ibG9naW4iIHR5cGU9InN1Ym1pdCI+RWRpdCBwYWdlPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgCgogICAgCgogICAgICAgIDxkaXYgY2xhc3M9ImJ1dHRvbi1ib3giPgo8YSBocmVmPSIvdGl0bGUvdHQxMzc1NjY2L3Jldmlld3MtZW50ZXI/cmVmXz10dF9jbl91cnYiCmNsYXNzPSJidG4gbGFyZ2UiIHJlbD0ibG9naW4iPldyaXRlIHJldmlldzwvYT4gICAgICAgICAgCiAgICAgICAgPC9kaXY+CiAgICAKICAgIAogICAgPC9kaXY+CgogIDxzY3JpcHQ+CiAgICBpZiAoJ2NzbScgaW4gd2luZG93KSB7CiAgICAgIGNzbS5tZWFzdXJlKCdjc21fVGl0bGVDb250cmlidXRlV2lkZ2V0X2ZpbmlzaGVkJyk7CiAgICB9CiAgPC9zY3JpcHQ+CgoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAKICAgIAogICAgCgogICAgPC9kaXY+CiAgICA8YnIgY2xhc3M9ImNsZWFyIi8+CjwvZGl2PiAKCgogICAgCiAgICAKICAgIAoKICAgIAogICAgCiAgICAKCiAgICAgICAgICAgICAgICAgICA8YnIgY2xhc3M9ImNsZWFyIiAvPgogICAgICAgICAgICAgICAgPC9kaXY+CgoKCgoKCiAgICA8ZGl2IGlkPSJmb290ZXIiIGNsYXNzPSJmdCI+CgogICAgICAgICAgICA8ZGl2IGlkPSJydmktZGl2Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlY2VudGx5LXZpZXdlZCI+Jm5ic3A7PC9kaXY+CiAgICAgICAgICAgICAgICA8YnIgY2xhc3M9ImNsZWFyIj4KICAgICAgICAgICAgPC9kaXY+CgoJCgk8IS0tIGJlZ2luIEJPVFRPTV9BRCAtLT4KPGRpdiBpZD0iYm90dG9tX2FkX3dyYXBwZXIiIGNsYXNzPSJjb3JuZXJzdG9uZV9zbG90Ij4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgpkb1dpdGhBZHMoZnVuY3Rpb24oKXsKYWRfdXRpbHMucmVnaXN0ZXJfYWQoJ2JvdHRvbV9hZCcpOwp9KTsKPC9zY3JpcHQ+CjxpZnJhbWUgaWQ9ImJvdHRvbV9hZCIgbmFtZT0iYm90dG9tX2FkIiBjbGFzcz0ieWVzU2NyaXB0IiB3aWR0aD0iNzI4IiBoZWlnaHQ9IjkwIiBkYXRhLW9yaWdpbmFsLXdpZHRoPSI3MjgiIGRhdGEtb3JpZ2luYWwtaGVpZ2h0PSI5MCIgbWFyZ2lud2lkdGg9IjAiIG1hcmdpbmhlaWdodD0iMCIgZnJhbWVib3JkZXI9IjAiIHNjcm9sbGluZz0ibm8iIGFsbG93dHJhbnNwYXJlbmN5PSJ0cnVlIiBvbmxvYWQ9ImRvV2l0aEFkcy5jYWxsKHRoaXMsIGZ1bmN0aW9uKCl7IGFkX3V0aWxzLm9uX2FkX2xvYWQodGhpcyk7IH0pOyIgYWxsb3dmdWxsc2NyZWVuPSJ0cnVlIj48L2lmcmFtZT4KPC9kaXY+CjxkaXYgaWQ9ImJvdHRvbV9hZF9yZWZsb3dfaGVscGVyIj48L2Rpdj4KPHNjcmlwdD4KZG9XaXRoQWRzKGZ1bmN0aW9uKCl7CmFkX3V0aWxzLmluamVjdF9zZXJ2ZXJzaWRlX2FkKCdib3R0b21fYWQnLCAnPHNjcmlwdD5kb2N1bWVudC5kZWZhdWx0QWQgPSB7aDo5MCx3OjcyOH07IGRvY3VtZW50LmFkID0gZG9jdW1lbnQuZGVmYXVsdEFkOzxcL3NjcmlwdD4gPCFET0NUWVBFIGh0bWw+PGh0bWw+PGJvZHk+PHN0eWxlPi5hY3tkaXNwbGF5OmJsb2NrO3Bvc2l0aW9uOmFic29sdXRlO292ZXJmbG93OmhpZGRlbjt3aWR0aDoxOXB4O2hlaWdodDoxNXB4O3otaW5kZXg6OTt0b3A6MDtyaWdodDowO2JhY2tncm91bmQ6dXJsKGh0dHBzOi8vaW1hZ2VzLW5hLnNzbC1pbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9kYS9hZGNob2ljZXMvYWMtdG9wcmlnaHQtc3ByaXRlLnBuZyl9LmFjOmhvdmVye3dpZHRoOjc3cHg7YmFja2dyb3VuZC1wb3NpdGlvbjotMTlweCAwfS5oaWRle2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnR9I2Fke3Bvc2l0aW9uOnJlbGF0aXZlO292ZXJmbG93OmhpZGRlbjt3aWR0aDo3MjhweDtoZWlnaHQ6OTBweDtkaXNwbGF5Om5vbmV9PC9zdHlsZT48ZGl2IGlkPVwiY3JlYXRpdmUtd3JhcHBlclwiIHN0eWxlPVwid2lkdGg6IDEwMCU7aGVpZ2h0OjkwcHg7XCI+XG4gPGEgaWQ9XCJhZFwiIGhyZWY9XCJodHRwOi8vYWF4LXVzLWVhc3QuYW1hem9uLWFkc3lzdGVtLmNvbS94L2MvUWtUMlVydGlmZnpMSzBDd2dOdV8yRHNBQUFGWXphZ1dlQUVBQUFES0FUZDlkeW8vaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9ncC92aWRlby9wcmltZXNpZ251cC9yZWZfPW9fZGlzcF93YnBpdmhvdV9JRDFfQWNxQ0MmYW1wO3RhZz1kdl9kZXZfaW1kYl9ob19ka3RwLTIwXCIgdGFyZ2V0PVwiX3RvcFwiID5cbjxpbWcgaWQ9XCJzdGF0aWNJbWFnZVwiIHdpZHRoPVwiMTAwJVwiIGhlaWdodD1cIjEwMCVcIj48YSBpZD1cImFhcEluZm9cIiB0YXJnZXQ9XCJfYmxhbmtcIiBjbGFzcz1cImhpZGUgYWNcIiBocmVmPVwiaHR0cHM6Ly93d3cuYW1hem9uLmNvbS9hZHByZWZzL3JlZj1jc19hYXBfMjkyNjY4MTgyMDMwMVwiPjwvYT48L2Rpdj48c2NyaXB0PnNldFRpbWVvdXQoZnVuY3Rpb24oKXshZnVuY3Rpb24oYSxlLHQpe3ZhciBuPS9cXC5hbWF6b25cXC5jb20oOi4qKT8kLyxjPVwidW5kZWZpbmVkXCIhPXR5cGVvZiBJU18zUCYmSVNfM1Asbz0hMTtpZighYyl7dmFyIGk9YTt0cnl7Zm9yKDtpIT1pLnBhcmVudDspe2lmKCFpLnBhcmVudC5kb2N1bWVudCl0aHJvdyBuZXcgRXJyb3IoXCJjcm9zcy1kb21haW4gZXhjZXB0aW9uXCIpO2k9aS5wYXJlbnR9fWNhdGNoKHIpe310cnl7bz1pLlNGQ2xpZW50P2kuU0ZDbGllbnQuaXNPbkFtYXpvbigpOm4udGVzdChpLmxvY2F0aW9uLmhvc3QpfWNhdGNoKHIpe319dmFyIHM9IWMmJiFvO2UuYWQ9e2FpZDpcIjU4NDM2MTYwODAxMDFcIixjaWQ6XCIyOTI2NjgxODIwMzAxXCIsdzo3MjgsaDo5MCx0ZW1wbGF0ZTpcIkltYWdlLTEuNTZcIn0sYS5hYW5SZXNwb25zZT17YWRJZDplLmFkLmFpZCxjcmVhdGl2ZUlkOmUuYWQuY2lkLGFkTmV0d29yazpcInBkYVwiLHNoYXphbVN0YWdlOlwicHJvZFwiLHNoYXphbUlkOlwiNTAwNTA4MVwifTt0cnl7dCYmdC5hZF91dGlscyYmdC5hZF91dGlscy5leHBhbmRfYWQoZnJhbWVFbGVtZW50KX1jYXRjaChyKXt9dmFyIGQ9ZnVuY3Rpb24oYSl7cmV0dXJuL3MvLnRlc3QoYS5wcm90b2NvbCl9LG09ZnVuY3Rpb24oYSl7cmV0dXJuIGUuZ2V0RWxlbWVudEJ5SWQoYSl9LHA9ZnVuY3Rpb24oYSxlLHQpe2EuaHJlZj1lLGEudGFyZ2V0PXQ/XCJfYmxhbmtcIjpcIl90b3BcIn0sbD1mdW5jdGlvbihhLGUpe3JldHVybiBhLmNsYXNzTmFtZS5tYXRjaChuZXcgUmVnRXhwKFwiKFxcXFxzfF4pXCIrZStcIihcXFxcc3wkKVwiKSl9LGY9ZnVuY3Rpb24oYSxlKXtsKGEsZSl8fChhLmNsYXNzTmFtZSs9XCIgXCIrZSl9LHU9ZnVuY3Rpb24oYSxlKXtpZihsKGEsZSkpe3ZhciB0PW5ldyBSZWdFeHAoXCIoXFxcXHN8XilcIitlK1wiKFxcXFxzfCQpXCIpO2EuY2xhc3NOYW1lPWEuY2xhc3NOYW1lLnJlcGxhY2UodCxcIiBcIil9fSxoPWZ1bmN0aW9uKGEpe3UoYSxcImhpZGVcIil9LGc9KGQobG9jYXRpb24pP1wiLy9pbWFnZXMtbmEuc3NsLVwiOlwiLy9nLWVjeC5cIikrXCJpbWFnZXMtYW1hem9uLmNvbS9pbWFnZXMvRy8wMS9cIixfPW0oXCJhYXBJbmZvXCIpLHc9bShcImFkXCIpLHk9XCJzaGF6YW0vRGVza3RvcERpc3BsYXlCYW5uZXItY291Y2gtY291cGxlLTE0NTZ4MTgwLTJYLVBsNHZ5Ll9WNTI1MTUyMDk5Xy5qcGdcIix2PW0oXCJzdGF0aWNJbWFnZVwiKTt5JiYodi5zcmM9Zyt5LHcuc3R5bGUuZGlzcGxheT1cImJsb2NrXCIpO3ZhciB6O2MmJmYodyxcImFhcFwiKSwoY3x8cykmJih3LnRhcmdldD1cIl9ibGFua1wiKSxfJiZjJiZoKF8pLHomJnAoXyxcImh0dHBzOi8vd3d3LmFtYXpvbi5jb20vYWRwcmVmc1wiLCEwKTt2YXIgST1hLlNGQ2xpZW50O2lmKEkmJlwiZnVuY3Rpb25cIj09dHlwZW9mIEkuY2hhbmdlU2l6ZSl0cnl7SS5jaGFuZ2VTaXplKFwiNzI4cHhcIixcIjkwcHhcIil9Y2F0Y2gocil7fX0od2luZG93LGRvY3VtZW50LHBhcmVudCl9LDApOzxcL3NjcmlwdD5cbjwvYm9keT48L2h0bWw+PFwhLS0gY3JlYXRpdmVNb2REYXRlID0gMTQ4MDY2NTU4MjAwMCAtLVw+XG4gPGRpdiBpZD1cImJvdHRvbV9hZF93ZWJidWdcIiBzdHlsZT1cImRpc3BsYXk6bm9uZTtcIj5cbiA8aW1nIHNyYz1cImh0dHA6Ly9hYXgtdXMtZWFzdC5hbWF6b24tYWRzeXN0ZW0uY29tL2UvbG9pL2ltcD9iPUlBWHd2TkphVGtpSHNkQXczWVYzWVdBQUFBRll6YWdXcWdFQUFBREtXVC10T3dcIiBib3JkZXI9XCIwXCIgaGVpZ2h0PVwiMVwiIHdpZHRoPVwiMVwiIGFsdD1cIlwiLz5cbiA8L2Rpdj5cbicpOwp9LCJ1bmFibGUgdG8gaW5qZWN0IHNlcnZlcnNpZGUgYWQiKTsKPC9zY3JpcHQ+CgkKCiAgICAgICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIGZvb3Rlci1ncmlkLXdyYXBwZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cgZm9vdGVyLXJvdyI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgb3V0c2lkZSI+CiAgICA8aDM+SU1EYiBFdmVyeXdoZXJlPC9oMz4KICAgIDxkaXYgY2xhc3M9ImFwcC1saW5rcyI+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnRfYXBwX2FwcGxlJnRva2VuPUJDWW1FeHEtYS1tUm9OZ2dBUy1EZHU0dC02MTltc001RTZhak10TzRtOG5UVF8yUnhYLXNiM0xPbHdFZmh3MVhqbVM1R1BoNWpEX3AlMEQlMEFQaDVZYVA2RkNUS0NTWjJZVnBxNXlVVHJMcHpMYWhQYlNEcTFDWlcwWDk5SGoydi1oajB4ckF6VHdFYkFXTGgzeEFCWHF3S2thellPJTBEJTBBRVhxSGxlTnM3ZGZ0Z1BJYmFxSTdhNnJmWXhEUEZJekk5eHFjR2JNemNFTEp0ZFZ1d0dsNlNiOGVxRU9tcWY5UFdqU1RhdWhiTkhmcyUwRCUwQVNGUTZ2dVNQTlRFJTBEJTBBJnJlZl89ZnRfYXBwX2FwcGxlIgp0aXRsZT0iR2V0IHRoZSBJTURiIEFwcCBvbiB0aGUgQXBwbGUgQXBwIFN0b3JlIiB0YXJnZXQ9Il9ibGFuayIgaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBhcHBzdG9yZS1hcHBsZSIgPjwvc3Bhbj4KPC9hPgogICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0X2FwcF9nb29nbGUmdG9rZW49QkNZblBEd0JQc1Ewb1kzUEtRc096NzhZYXNPM0gwUTZWcHBlMkIyVnZYb2RoWHJJR0psSVZ1R3B4V3BlY09mb0tOU2twd2NMSXZBcyUwRCUwQTkzRGZiTklhVlVob2hQbmxPRjZCbWhKOFdqQzlTckxDV3dORE5IZGUzaVNROTM4VVAtUUd1b2FwT0J3UWFlNm82S0pKQlN1LVUzTGIlMEQlMEFWWTh6bU5JekpvSVdObWdZUWNlWTFDQzV4SzlDMmhfekpkX1RZS2xpUDZNNk12cDVpNTJZOVc1OGZpUmVYR1U4RXZTSEtubGZEVEVyJTBEJTBBSGhtMnpOLUJYWlUlMEQlMEEmcmVmXz1mdF9hcHBfZ29vZ2xlIgp0aXRsZT0iR2V0IHRoZSBJTURiIGFwcCBvbiBHb29nbGUgUGxheSIgdGFyZ2V0PSJfYmxhbmsiIGl0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgYXBwc3RvcmUtZ29vZ2xlIiA+PC9zcGFuPgo8L2E+CiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnRfYXBwX2FtYXpvbiZ0b2tlbj1CQ1l1U0ZtcXZVT3Y4Q3F3a0N5NGM4UW5BdlFvdFduTlBVRTZnT0FDNFFUVXVSTTExdzdQTGRzZ1c2SHE2OWI3YkpFRHlGLWhSUTlLJTBEJTBBMm9XLUxxWkxoOTRNemdaajVlUktCZW8tLW02N280NzBvY2JSRWhKM1VISkVOTDV5eWgwY3BmVFlfUkYxSDVBaWxHNngxX2htSFBlaCUwRCUwQXFFaDBnTzUwSGFjNE5XSkNUN0dNSWh2Z2NkcjNZN21PRFNaUUVhQlZ5YUNuNVdxSkdWUWo4aVV4V3lVQWhWUEpoU2VhOWpydTd6aFclMEQlMEFRNExNTmZmSFhBV2p1ZWliNUpQdDliRjR3cWtuNWhaNTl5bklmOTlFd1RCcTNxbUJkNWd0NS1Kc0d0SGJzZUh6MzBPYnpKQlFoXzMwJTBEJTBBeW00UUVxQUtjQjJjdm5LVEtZVngtZzhRTEhRcXV6TVl1UldYSlJPNExlaDFFZ0pnVzY3c1ZCYWNlZWFXT3BycjJDZHhrODJGeHF2byUwRCUwQXZxX1J0cUNiQURncUdpWXhydTlDUXF1UGtHMzh2ZzBob1lQZkoxVEkwWFZIbGg1dDh3TSUwRCUwQSZyZWZfPWZ0X2FwcF9hbWF6b24iCnRpdGxlPSJHZXQgdGhlIElNRGIgYXBwIG9uIEFtYXpvbiBBcHBzdG9yZSBmb3IgQW5kcm9pZCIgdGFyZ2V0PSJfYmxhbmsiIGl0ZW1wcm9wPSd1cmwnPiA8c3BhbiBjbGFzcz0iZGVza3RvcC1zcHJpdGUgYXBwc3RvcmUtYW1hem9uIiA+PC9zcGFuPgo8L2E+CiAgICA8L2Rpdj4KCiAgICA8cD5GaW5kIHNob3d0aW1lcywgd2F0Y2ggdHJhaWxlcnMsIGJyb3dzZSBwaG90b3MsIHRyYWNrIHlvdXIgV2F0Y2hsaXN0IGFuZCByYXRlIHlvdXIgZmF2b3JpdGUgbW92aWVzIGFuZCBUViBzaG93cyBvbiB5b3VyIHBob25lIG9yIHRhYmxldCE8L3A+CgogICAgPGEgaHJlZj0iaHR0cDovL20uaW1kYi5jb20/cmVmXz1mdF9tZG90IgpjbGFzcz0idG91Y2hsaW5rIiA+SU1EYiBNb2JpbGUgc2l0ZTwvYT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sIGNlbnRlciI+CiAgPGRpdiBjbGFzcz0ibGluay1iYXIgaWNvbi1saW5rLWJhciI+CiAgICA8aDM+CiAgICAgIEZvbGxvdyBJTURiIG9uCiAgICAgIDxkaXY+CgogICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZvbF9mYiZ0b2tlbj1CQ1lvLVZzbDZWbTdlaXRzT0ZnMmZRbWdfUlhsYm05cEkwdm8yM0dSUWJJSUVBVWRrWVA5N3lIM0U4bm1XOVRBVEZDT2tsM1lYc0R1JTBEJTBBVjJOdUxxZHJ1dTBHcWI0TVVSOUZKenlKZ3g2OXMzbm1HWE9YT0NjRHl1Q1FraklzLVl5U0M4d25pbmhIYnBIT2lHWmg1UVBBTVl1dSUwRCUwQWRCaFdQWTZra194Y1NiOHg2NjJpY2xja2k3UDNhS0hyX3FhaHJjV3hsV1FDZzZSekxqMXdQZW9xNHNNdVFBRWpBQSUwRCUwQSZyZWZfPXR0X2Z0X2ZvbF9mYiIKdGl0bGU9IkZvbGxvdyBJTURiIG9uIEZhY2Vib29rIiB0YXJnZXQ9Il9ibGFuayIgaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBmb2xsb3ctZmFjZWJvb2siID48L3NwYW4+CjwvYT4KICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mb2xfdHcmdG9rZW49QkNZdTEzUVBXTWlKMTl0YjJNQXp2YXNVS1pCZi15cTFlcVZia2ZTZzNXc3J0ZHlPalBvZGszbEkyLXhBcWlyMWVaNEdROFFTTUxISyUwRCUwQUhQMzRsUHNZdHdoSDNRZTB5Skx4NmhvS2tQN05hUkUtYnY5TkExeG8tRk1YNEJmYXRUUHFfNWxVT19wY0xUd0JtQVVqVEV0UW4zcXQlMEQlMEFXT3ktYmNUNTBVSloxM0w3bnFtY1B6R0JXb2FfbndUY2lQZ0g4bHV4N3lQQkZfMWxjLVVDdWx1bW8yR1hYRzhCdUElMEQlMEEmcmVmXz10dF9mdF9mb2xfdHciCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBUd2l0dGVyIiB0YXJnZXQ9Il9ibGFuayIgaXRlbXByb3A9J3VybCc+IDxzcGFuIGNsYXNzPSJkZXNrdG9wLXNwcml0ZSBmb2xsb3ctdHdpdHRlciIgPjwvc3Bhbj4KPC9hPgogICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZvbF9pbnN0JnRva2VuPUJDWW5zQl9VQzVqTDZDcmc1OERNS0h2aHZIQTRMLVBPZmIwX1RoLXZQWVE4aXJocUVpdmJyUVEzSzRwM3M1eUpyTTFtTUs0THRFUXglMEQlMEFxbmpCcWZUZGZzcDducjVwYTE2SW5BdmxYQVgxQlVnUlg0MUpQcjBjZUtHT0ZSc1VvWmpCNGZ5RlNlS3FTT3R2NjVWczdSMTBIcXR1JTBEJTBBVlBfc1d1SG5GS3BmTzZROEVSZTV0engtYXFnanFWTnJQemdRS3Noa3J2S1ZJOVVxS0lkOE5ydVNjbDR1bnNZUkxBJTBEJTBBJnJlZl89dHRfZnRfZm9sX2luc3QiCnRpdGxlPSJGb2xsb3cgSU1EYiBvbiBJbnN0YWdyYW0iIHRhcmdldD0iX2JsYW5rIiBpdGVtcHJvcD0ndXJsJz4gPHNwYW4gY2xhc3M9ImRlc2t0b3Atc3ByaXRlIGZvbGxvdy1pbnN0YWdyYW0iID48L3NwYW4+CjwvYT4KICAgICAgPC9kaXY+CiAgICA8L2gzPgogIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgb3V0c2lkZSI+CiAgICA8ZGl2IGNsYXNzPSJyb3ciPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbCBjb2wtNCI+CiAgICAgICAgICAgIDx1bCBjbGFzcz0idW5zdHlsZWQiPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii8/cmVmXz1mdF9obSIKPkhvbWU8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvY2hhcnQvdG9wP3JlZl89ZnRfMjUwIgo+VG9wIFJhdGVkIE1vdmllczwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9jaGFydC8/cmVmXz1mdF9jaHQiCj5Cb3ggT2ZmaWNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlY3Rpb25zL3R2Lz9yZWZfPWZ0X3R2Igo+VFY8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvbW92aWVzLWNvbWluZy1zb29uLz9yZWZfPWZ0X2NzIgo+Q29taW5nIFNvb248L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYTJ6P3JlZl89ZnRfc2kiCj5TaXRlIEluZGV4PC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3NlYXJjaD9yZWZfPWZ0X3NyIgo+U2VhcmNoPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL21vdmllcy1pbi10aGVhdGVycy8/cmVmXz1mdF9pbnRoIgo+SW4gVGhlYXRlcnM8L2E+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wgY29sLTQiPgogICAgICAgICAgICA8dWwgY2xhc3M9InVuc3R5bGVkIj4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvaGVscGRlc2svY29udGFjdD9yZWZfPWZ0X2NvbiIKPkNvbnRhY3QgVXM8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYm9hcmRzLz9yZWZfPWZ0X21iIgo+TWVzc2FnZSBCb2FyZHM8L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgICAgIDxhIGhyZWY9Imh0dHBzOi8vc2VjdXJlLmltZGIuY29tL3JlZ2lzdGVyLWltZGIvZm9ybS12Mj9yZWZfPWZ0X3JlZyIKPlJlZ2lzdGVyPC9hPgo8L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9uZXdzLz9yZWZfPWZ0X253Igo+TmV3czwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJzcGFjZXIiPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3ByZXNzcm9vbS8/cmVmXz1mdF9wciIKPlByZXNzIFJvb208L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvYWR2ZXJ0aXNpbmcvP3JlZl89ZnRfYWQiCj5BZHZlcnRpc2luZzwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPjxhIGhyZWY9Ii9qb2JzP3JlZl89ZnRfamIiCj5Kb2JzPC9hPjwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sIGNvbC00Ij4KICAgICAgICAgICAgPHVsIGNsYXNzPSJ1bnN0eWxlZCI+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iaHR0cDovL3Byby5pbWRiLmNvbS9zaWdudXAvaW5kZXguaHRtbD9yZj1jb25zX2Z0X2htJnJlZl89Y29uc19mdF9obSIKPklNRGJQcm88L2E+PC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LW1vam8mdG9rZW49QkNZaWtuMjA2ZzNxUUg4a2Z0SmRzcmFidmd5RFQ0eGhnbmF5dFlBLXlqR0Z3UFk4MUhqYzRKcUJtdFFHY2FXa1paWHNISW5BWXg2eSUwRCUwQVdFUUc3ME45VGdXcEExUmJiZENCYmFmT2I5TVhrMHlQR2ZXclNmOFVLcEZON0NKMkRJUk5MbHN6emtDMkVTX2lEeHlmNVZobnBZU2glMEQlMEEyckFXQndxakVRZm1MQmdGc0ladHJwdm16VDN3OFAxQzhGakliTzlCeXdtQWJSeVZWcFp2ZXZLWDBJWm5mWnlEVmclMEQlMEEmcmVmXz1mdF9ib20iCml0ZW1wcm9wPSd1cmwnPkJveCBPZmZpY2UgTW9qbzwvYT4KPC9saT4KICAgICAgICAgICAgICAgIDxsaT4gICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LXdhYiZ0b2tlbj1CQ1loekZuTjc0OUdwaUVTMzZncmJzZGUxdGxpTkRFMmp0aHpfS3Z3Q3pUd0FCUEhQUGdwdjBZY1lYZ1lJbVFqdGxrS1lId1cwVFNWJTBEJTBBM0Q5WEljTjdsU1A0NlczRkg3MjJnZzhaVHdYVFBfN0hDdzFoenZQNFlWbFd1UlBfaTgwRkMwNkRzTDU4R0taNElOWWhRNlFoMUxfVCUwRCUwQVBNX1gzM0l1OW1CYVVhRjRES2lCUG00VjV4RVRwSTFDREhKTE5xNzlCYTNZbVVqYjhDLWhIU0o1T3h3U2xsVVByQSUwRCUwQSZyZWZfPWZ0X3dhYiIKaXRlbXByb3A9J3VybCc+V2l0aG91dGFib3g8L2E+CjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPSIvaGVscC9zaG93X2FydGljbGU/Y29uZGl0aW9ucyZyZWZfPWZ0X2NvdSIKPkNvbmRpdGlvbnMgb2YgVXNlPC9hPjwvbGk+CiAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj0iL3ByaXZhY3k/cmVmXz1mdF9wdmMiCj5Qcml2YWN5IFBvbGljeTwvYT48L2xpPgogICAgICAgICAgICAgICAgPGxpPiAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtaWJhJnRva2VuPUJDWXV5Q1cxOWtlck50YTdUd2xzZ0NvZWJKSDV5VjVURThDaFRMaU10eUtpMmVPT1M5ZEtYSkpnQmRPOVp5MHFxRWNUWGpIc1U2X0glMEQlMEFLX18yRl91dTdMRHVFT2ZnckRKOEFSN3I4eXRESHd5aEkyc0tGOHRFcnZuS19xNzNKVkhmTzZpR3FuZFAweWJ6OE0wYjRGb1o3WDNMJTBEJTBBb0VxSWNVbW9zMThyU3NLeXd0SXBCVzhpcWRzMU9lcklqZllETVU2cmtfa25qM1ZGNmctU2VYYkNDejczR3JMSHgxYkR2NkRQSDlNSSUwRCUwQWlfOHRESHVUZHlFT1hhV3R4X2FKMjJlWUp2MUFaWDJWJTBEJTBBJnJlZl89ZnRfaWJhIgppdGVtcHJvcD0ndXJsJz5JbnRlcmVzdC1CYXNlZCBBZHM8L2E+CjwvbGk+CiAgICAgICAgICAgICAgICA8bGkgY2xhc3M9InNwYWNlciI+PC9saT4KICAgICAgICAgICAgPC91bD4KICAgICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgoKICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWluZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJmdC1jb3B5IGZsb2F0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxhCmhyZWY9Ii9oZWxwL3Nob3dfYXJ0aWNsZT9jb25kaXRpb25zIgo+Q29weXJpZ2h0ICZjb3B5OzwvYT4gMTk5MC0yMDE2CiAgICAgICAgICAgICAgICA8YQpocmVmPSIvaGVscC8iCj5JTURiLmNvbSwgSW5jLjwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICBBbiA8c3BhbiBpZD0iYW1hem9uX2xvZ28iIGNsYXNzPSJmb290ZXJfbG9nbyIgYWxpZ249Im1pZGRsZSI+QW1hem9uLmNvbTwvc3Bhbj4gY29tcGFueS4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CgoKCiAgICA8dGFibGUgY2xhc3M9ImZvb3RlciIgaWQ9ImFtYXpvbi1hZmZpbGlhdGVzIj4KICAgICAgICA8dHI+CiAgICAgICAgICAgIDx0ZCBjb2xzcGFuPSI4Ij4KICAgICAgICAgICAgICAgIEFtYXpvbiBBZmZpbGlhdGVzCiAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgICA8dHI+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1haXYmdG9rZW49QkNZblpBakNNbUZrSEJVSDlDSzN3UnhWOElUTUVuakdwRmppQmFCSmZmWDRoMDJWaEZ5cEYyc2wtbm5McUE5OHZsdGZUdUNZZG00WiUwRCUwQW4yUDVhUFY5VF81YWVqN2JKa2d2MmVEMkNqLVRYdEFhMDA1QlVlYUN0ZmpSRVBqT2diNDNFX09fa2VwOHdvaXgtOHdxb2gySTZvYTYlMEQlMEFrQ0E2UUZlX2pENkNUWXNWYUU3QW9tLW5HdFZBQ1c0Zm5HbU0tV2NQV182WEphQTRXNHNLVi1wYXZEMGZ6YzVUQzY0ZUZNdm1jMDlEJTBEJTBBWElYOHVFaUJLSmMlMEQlMEEiIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbGluayI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLW5hbWUiPkFtYXpvbiBWaWRlbzwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPldhdGNoIE1vdmllcyAmPGJyPlRWIE9ubGluZTwvc3Bhbj4KICAgICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgPC90ZD4KCiAgICA8dGQ+CiAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGEgaHJlZj0iL29mZnNpdGUvP3BhZ2UtYWN0aW9uPWZ0LXBpdiZ0b2tlbj1CQ1lnSURMSXRRNi1WWU9LajJvc1dydkJ3eW13NXNVN19XOTlzcVp5OWdkM3NNeEpJb3F2eE5QZWgyYmZfZ0ZRMnk5TXJtZTJRNUZpJTBEJTBBSVFWQVdxNTljT3B4MVJzbFZMbm1XaGZjWEJncm5EQlFhMXNpRTVGdDc0T0hmUm5FaEluZnZNLUlSTWtZSFVVekxVYzV3X3VSdEV5ZiUwRCUwQVFuRzJlY3JqdW5vRWZCTzdNclhzbUNWem9aRlpuSTVUMThOSjgzUkRzS0VNQTd0ZFNMZ3l2OUZLR0ZDQmJVV1ZnM3dXa3dBM2MxR3clMEQlMEF5UEk4VlhxdXoyWSUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+UHJpbWUgVmlkZW88L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5VbmxpbWl0ZWQgU3RyZWFtaW5nPGJyPm9mIE1vdmllcyAmIFRWPC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1kZSZ0b2tlbj1CQ1lzSU51dlZWdk5Wc2laNm9fdkRWTkVNcG5aNUg4dzRucFJ5d3R1N19KYkV6U1I3ajBhQy1MSjVCNjhqYmstSEd1U0NkSko0SUF0JTBEJTBBS1ZyVnJmS1RPMmFyQ05iVU4wVmwzeE5wTXdKdU5VaG1IQjhnck5mQ0VmWjBpWTRpUWVqaElNLXllWUxJeDg0WUl4SWRUYVdoczZYNiUwRCUwQUl5R2psMW1iZ0NOQ1VCMFE0QmF0UGVnZVhRQnFTZWFvaC1LSHRmTHV4S2JzRHh4ZTBMcm80NUszSVZnN3EzQTFlLWRjbWJKVzZyYWklMEQlMEFfbXdTeGpObW9FNCUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QW1hem9uIEdlcm1hbnk8L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5CdXkgTW92aWVzIG9uPGJyPkRWRCAmIEJsdS1yYXk8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1hbXpuLWl0JnRva2VuPUJDWWlzdjhJZTY4dmtXcUpjczZrMU1Bb2VRNmJYQ2ZfMV9fX2l0S1A5bDdYUF9hQ3BqRFdmbGw4Z2p2UWF3QWI2OHlyZ1pJOVZzaUElMEQlMEFtMVhzUUFZa2NtVTRoRUh4eTFVNUFKU1RqOFZUYkFOWFZzR2gyam1adkFkRG5HZkQyQ21lRVlPV0wzc2FmZ1FjN3o2VTJHQnJVcG40JTBEJTBBbm1vZ3NWenJOd2VaQ1hweHo5aHlPZTJ1N0d0VVlSQkhmci1sa2taSlhSbXlsSW0zUWdWNVlZWXlxQWh3YWtuYlM2QkJBWDRpMHRnRiUwRCUwQVhpdzVnTHBJRWpBJTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5BbWF6b24gSXRhbHk8L3NwYW4+PGJyPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1kZXNjIj5CdXkgTW92aWVzIG9uPGJyPkRWRCAmIEJsdS1yYXk8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1hbXpuLWZyJnRva2VuPUJDWWtFcGRYR3duTkROYkJGS2twaWxybndqcjZVQ1E2dF9WMFl2VTQ5QmlZMXpibU1QaHRLZXVkdGRqZldfektkOHlNMWE5SnZueDMlMEQlMEF3VXZhTVdRUnRnUUxUd29oRzdTNXV2dGZPUHhRcHMwaERUS0g5T0lvd3RqTWlSWDliUTFab3lESUFaVmRVMElMeE9CTEY5Q1EwX1QzJTBEJTBBVUhjbElqeUVIWG1nOGhSQ2Y4NFhUWnBsRkFsMlJvUmlDSjRMbHBkdURXUWhyWUMwZ09hd0xIZ3VzN1dOOTVMQk5DME50bHRhSGc4YiUwRCUwQXZ1bm9ZRzZfLVdvJTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5BbWF6b24gRnJhbmNlPC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+QnV5IE1vdmllcyBvbjxicj5EVkQgJiBCbHUtcmF5PC9zcGFuPgogICAgICAgICAgICA8L2E+CiAgICAgICAgPC9kaXY+CiAgICA8L3RkPgoKICAgIDx0ZD4KICAgICAgICA8ZGl2PgogICAgICAgICAgICA8YSBocmVmPSIvb2Zmc2l0ZS8/cGFnZS1hY3Rpb249ZnQtYW16bi1pbiZ0b2tlbj1CQ1luYmc4VzFZd0hYTFM3WURfN1BEZmx2Y1d4SzFjOGtHMU02d1pXWG1oeF9oZEtkeEVVRkFKT3g1d2ltekYzbUYyNWU4QjAzRU1wJTBEJTBBVi1UU3dJeUxZajhCd215Z2lnd2JiWEFzd1huMld2WlZRdldzMnZwZHpLMXFIS0IyTzhGNnF3THNWWXI1V1lFd3VpZTlGckVfU21aZSUwRCUwQWtiek5xaktmWWNKV2JLT1djZ1BnS2FpaVJOZk5QNDJUemFhOUVSemFlTGVKSnpqQm4xQXJUYUhPV2JvM2diR0x0c1NHSURDUE5GZk0lMEQlMEF0YjBlc003eUFyVWxia3ZYSFUxUy1KR0pBa29MY2YybiUwRCUwQSIgY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1saW5rIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtbmFtZSI+QW1hem9uIEluZGlhPC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+QnV5IE1vdmllIGFuZDxicj5UViBTaG93IERWRHM8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1hbXpuLWRwciZ0b2tlbj1CQ1lqbXlVZ05FcThvZFdxZHN4cVVDc3NXQmhIdUttRmxOV28zaFpxNjJFbFhscFZKVXBHcmNUaGU1THBweThwVEhScjFlU1cwZ1l6JTBEJTBBaGZQWm1KcGw1b0trMl9KS3MxMFBNMVo2Tm9CdXp0NVZoSDNJeHNzVnNCM2NfRXJpVkYyMDlTWXNaLTFnN3lqemNtNU9yZVlRbzhLSSUwRCUwQUpYMEVBWTBQRWRhSmx5TU91VGJZNGhRJTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5EUFJldmlldzwvc3Bhbj48YnI+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWRlc2MiPkRpZ2l0YWw8YnI+UGhvdG9ncmFwaHk8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CgogICAgPHRkPgogICAgICAgIDxkaXY+CiAgICAgICAgICAgIDxhIGhyZWY9Ii9vZmZzaXRlLz9wYWdlLWFjdGlvbj1mdC1hbXpuLWF1ZCZ0b2tlbj1CQ1l1bGlIQTFIZ2VXWTk5QW42emZwN19rVllfYXFpQ2ZWMDgyeTRQZ3NleW1iY1R4QlFhb0RFakdWdFYyYmJzQjAzSFQ3a215czFjJTBEJTBBOGFaTjhPUXJ2ZDdCdHJKOXd1cGZoM3pBOVlpU3lzck1fSllXSzdNMWV3MEFhMGdiVzVRVnVEOEs4Z0F3VUpGbFVkT2NMb2FWNmFxQiUwRCUwQVhZZ3pTZ0Z0NExxZFdYOUZuTEp6cDk0JTBEJTBBIiBjbGFzcz0iYW1hem9uLWFmZmlsaWF0ZS1zaXRlLWxpbmsiPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImFtYXpvbi1hZmZpbGlhdGUtc2l0ZS1uYW1lIj5BdWRpYmxlPC9zcGFuPjxicj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhbWF6b24tYWZmaWxpYXRlLXNpdGUtZGVzYyI+RG93bmxvYWQ8YnI+QXVkaW8gQm9va3M8L3NwYW4+CiAgICAgICAgICAgIDwvYT4KICAgICAgICA8L2Rpdj4KICAgIDwvdGQ+CiAgICAgICAgPC90cj4KICAgIDwvdGFibGU+CiAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KCgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iaHR0cDovL2lhLm1lZGlhLWltZGIuY29tL2ltYWdlcy9HLzAxL2ltZGIvanMvY29sbGVjdGlvbnMvY29tbW9uLTQ4NTcwMTMyMS5fVFREXyI+PC9zY3JpcHQ+CjxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Imh0dHA6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiL2pzL2NvbGxlY3Rpb25zL3RpdGxlLTMyMjkzMDUzMTQuX1RURF8iPjwvc2NyaXB0PgoKPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIGlkPSJsb2dpbiI+CihmdW5jdGlvbigpewogICAgdmFyIHJlYWR5VGltZW91dCA9IHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgICAgIGlmICh3aW5kb3cualF1ZXJ5ICYmIHdpbmRvdy5pbWRiICYmIHdpbmRvdy5pbWRiLmxvZ2luX2xpZ2h0Ym94KSB7CiAgICAgICAgICAgIGNsZWFyVGltZW91dChyZWFkeVRpbWVvdXQpOwogICAgICAgICAgICB3aW5kb3cuaW1kYi5sb2dpbl9saWdodGJveCgpOwogICAgICAgIH0KICAgIH0sIDEwMCk7Cn0pKCk7Cjwvc2NyaXB0PgoKICAgICAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICAgICAgZnVuY3Rpb24galF1ZXJ5T25SZWFkeShyZW1haW5pbmdfY291bnQpIHsKICAgICAgICAgICAgaWYgKHdpbmRvdy5qUXVlcnkpIHsKICAgICAgICAgICAgICAgIGpRdWVyeSgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmdW5jdGlvbigpIHsKICAgICAgICAgICB2YXIgaXNBZHZlcnRpc2luZ1RoZW1lZCA9ICEhKHdpbmRvdy5jdXN0b20gJiYgd2luZG93LmN1c3RvbS5mdWxsX3BhZ2UgJiYgd2luZG93LmN1c3RvbS5mdWxsX3BhZ2UudGhlbWUpLAogICAgICAgICAgICAgICB1cmwgPSAiaHR0cDovL3d3dy5mYWNlYm9vay5jb20vd2lkZ2V0cy9saWtlLnBocD93aWR0aD0yODAmc2hvd19mYWNlcz0xJmxheW91dD1zdGFuZGFyZCZocmVmPWh0dHAlM0ElMkYlMkZ3d3cuaW1kYi5jb20lMkZ0aXRsZSUyRnR0MTM3NTY2NiUyRiZjb2xvcnNjaGVtZT1saWdodCIsCiAgICAgICAgICAgICAgIGxpa2UgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnaWZyYW1lX2xpa2UnKTsKCiAgICAgICAgICAgaWYgKCFpc0FkdmVydGlzaW5nVGhlbWVkICYmIGxpa2UpIHsKICAgICAgICAgICAgICBsaWtlLnNyYyA9IHVybDsKICAgICAgICAgICAgICBsaWtlLm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsgCiAgICAgICAgICAgICAgICAgIGlmICh1ZXgpIHsgdWV4KCdsZCcsICdmYWNlYm9va19saWtlX2lmcmFtZScsIHt3YjogMX0pOyB9CiAgICAgICAgICAgICAgfTsKICAgICAgICAgICB9IGVsc2UgaWYgKGlzQWR2ZXJ0aXNpbmdUaGVtZWQpIHsKICAgICAgICAgICAgICAkKCcuc29jaWFsX25ldHdvcmtpbmdfbGlrZScpLmNsb3Nlc3QoJy5hdXgtY29udGVudC13aWRnZXQtMicpLmhpZGUoKTsKICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAgICAgICAgICk7CiAgICAgICAgICAgICAgICBqUXVlcnkoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHZhciBmYWNlYm9va1RoZW1lID0gKHdpbmRvdy5jdXN0b20gJiYgd2luZG93LmN1c3RvbS5mdWxsX3BhZ2UgJiYKICAgICAgICAgICAgICAgICAgICB3aW5kb3cuY3VzdG9tLmZ1bGxfcGFnZS50aGVtZSkgPwogICAgICAgICAgICAgICAgd2luZG93LmN1c3RvbS5mdWxsX3BhZ2UudGhlbWUgOiAibGlnaHQiLAogICAgICAgICAgICB1cmwgPSAiLy93d3cuZmFjZWJvb2suY29tL3BsdWdpbnMvbGlrZWJveC5waHA/aHJlZj1mYWNlYm9vay5jb20lMkZpbWRiJndpZHRoPTMwMCZoZWlnaHQ9MTkwJmNvbm5lY3Rpb25zPTQmaGVhZGVyPWZhbHNlJnN0cmVhbT1mYWxzZSZjb2xvcnNjaGVtZT0iICsgZmFjZWJvb2tUaGVtZSwKICAgICAgICAgICAgbGlrZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdmYWNlYm9va0lmcmFtZScpLAogICAgICAgICAgICB0d2l0dGVySWZyYW1lID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3R3aXR0ZXJJZnJhbWUnKTsKICAgICAgICAgICAgaWYgKGxpa2UpIHsKICAgICAgICAgICAgICAgIGxpa2Uuc3JjID0gdXJsOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICh0d2l0dGVySWZyYW1lKSB7CiAgICAgICAgICAgICAgICB0d2l0dGVySWZyYW1lLnNyYyA9ICJodHRwOi8vaS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvc29jaWFsL3R3aXR0ZXIuaHRtbD8xMCNpbWRiIjsKICAgICAgICAgICAgfQogICAgICAgICB9CgogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgfSBlbHNlIGlmIChyZW1haW5pbmdfY291bnQgPiAwKSB7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgeyBqUXVlcnlPblJlYWR5KHJlbWFpbmluZ19jb3VudC0xKSB9LCAxMDApOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGpRdWVyeU9uUmVhZHkoNTApOwogICAgICAgIDwvc2NyaXB0PgoKPCEtLSBiZWdpbiBhZHMgZm9vdGVyIC0tPgoKPCEtLSBCZWdpbiBTSVMgY29kZSAtLT4gCjxpZnJhbWUgaWQ9InNpc19waXhlbF9zaXRld2lkZSIgd2lkdGg9IjEiIGhlaWdodD0iMSIgZnJhbWVib3JkZXI9IjAiIG1hcmdpbndpZHRoPSIwIiBtYXJnaW5oZWlnaHQ9IjAiIHN0eWxlPSJkaXNwbGF5OiBub25lOyI+PC9pZnJhbWU+CjxzY3JpcHQ+CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7CiAgICAgICAgdHJ5ewogICAgICAgICAgICAvL3NpczMuMCBwaXhlbAogICAgICAgICAgICB2YXIgdXJsX3NpczMgPSAnaHR0cHM6Ly9zLmFtYXpvbi1hZHN5c3RlbS5jb20vaXUzPycsCiAgICAgICAgICAgICAgICBwYXJhbXNfc2lzMyA9IFsKICAgICAgICAgICAgICAgICAgICAiZD1pbWRiLmNvbSIsCiAgICAgICAgICAgICAgICAgICAgImExPSIsCiAgICAgICAgICAgICAgICAgICAgImEyPTAxMDE5NTVhNzMwYWFjMWNiZWNmYTcxM2QzZDZkM2E5ZjFkYmYzOTZkNzZlYWQ5M2IwYjgxMjRmYjc4MDllZTllZGFiIiwKICAgICAgICAgICAgICAgICAgICAicElkPXR0MTM3NTY2NiIsCiAgICAgICAgICAgICAgICAgICAgInI9MSIsCiAgICAgICAgICAgICAgICAgICAgInJQPWh0dHAlM0ElMkYlMkZ3d3cuaW1kYi5jb20lMkZ0aXRsZSUyRnR0MTM3NTY2NiUyRiIsCiAgICAgICAgICAgICAgICAgICAgImV4LWhhcmdzPXY9MS4wO2M9SU1EQjtwPXR0MTM3NTY2Njt0PWltZGJfdGl0bGVfdmlldzsiLAogICAgICAgICAgICAgICAgICAgICJlbmNvZGluZz1zZXJ2ZXIiLAogICAgICAgICAgICAgICAgICAgICJjYj05OTE3MjcwMTAxMjkiICAKICAgICAgICAgICAgICAgIF07CiAgICAgICAgCiAgICAgICAgICAgIGlmIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2lzX3BpeGVsX3NpdGV3aWRlJykpIHsKICAgICAgICAgICAgICAgIChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2lzX3BpeGVsX3NpdGV3aWRlJykpLnNyYyA9IHVybF9zaXMzICsgcGFyYW1zX3NpczMuam9pbignJicpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGNhdGNoKGUpewogICAgICAgICAgICBpZiAoJ2NvbnNvbGVMb2cnIGluIHdpbmRvdyl7CiAgICAgICAgICAgICAgICBjb25zb2xlTG9nKCdQaXhlbCBmYWlsdXJlICcgKyBlLnRvU3RyaW5nKCksJ3NpcycpOwogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmICh3aW5kb3cudWVMb2dFcnJvcikgeyAKICAgICAgICAgICAgICAgIHdpbmRvdy51ZUxvZ0Vycm9yKGUpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSwgMjApOwo8L3NjcmlwdD4KPCEtLSBFbmQgU0lTIGNvZGUgLS0+Cgo8IS0tIGJlZ2luIGNvbXNjb3JlIGJlYWNvbiAtLT4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0naHR0cHM6Ly9pYS5tZWRpYS1pbWRiLmNvbS9pbWFnZXMvRy8wMS9pbWRiYWRzL2pzL2JlYWNvbi0xNzkyMTU3NjcyLl9UVERfJz48L3NjcmlwdD4KPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiPgppZih3aW5kb3cuQ09NU0NPUkUpewpDT01TQ09SRS5iZWFjb24oewpjMTogMiwKYzI6IjYwMzQ5NjEiLApjMzoiIiwKYzQ6Imh0dHA6Ly93d3cuaW1kYi5jb20vdGl0bGUvdHQxMzc1NjY2LyIsCmM1OiIiLApjNjoiIiwKYzE1OiIiCn0pOwp9Cjwvc2NyaXB0Pgo8bm9zY3JpcHQ+CjxpbWcgc3JjPSJodHRwOi8vYi5zY29yZWNhcmRyZXNlYXJjaC5jb20vcD9jMT0yJmMyPTYwMzQ5NjEmYzM9JmM0PWh0dHAlM0ElMkYlMkZ3d3cuaW1kYi5jb20lMkZ0aXRsZSUyRnR0MTM3NTY2NiUyRiZjNT1jNj0mMTU9JmNqPTEiLz4KPC9ub3NjcmlwdD4KPCEtLSBlbmQgY29tc2NvcmUgYmVhY29uIC0tPgoKPHNjcmlwdD4KICAgIGRvV2l0aEFkcyhmdW5jdGlvbigpewogICAgICAgIChuZXcgSW1hZ2UoKSkuc3JjID0gImh0dHA6Ly93d3cuYW1hem9uLmNvbS9hYW4vMjAwOS0wNS0wMS9pbWRiL2RlZmF1bHQ/c2xvdD1zaXRld2lkZS1pZnJhbWUmdT05OTE3MjcwMTAxMjkmb3JkPTk5MTcyNzAxMDEyOSI7CiAgICB9LCJ1bmFibGUgdG8gcmVxdWVzdCBBQU4gcGl4ZWwiKTsKPC9zY3JpcHQ+Cgo8IS0tIGVuZCBhZHMgZm9vdGVyIC0tPgoKPGRpdiBpZD0ic2VydmVydGltZSIgdGltZT0iMzY3Ii8+CgoKCjxzY3JpcHQ+CiAgICBpZiAodHlwZW9mIHVldCA9PSAnZnVuY3Rpb24nKSB7CiAgICAgIHVldCgiYmUiKTsKICAgIH0KPC9zY3JpcHQ+CgogICAgPC9ib2R5Pgo8L2h0bWw+Cgo=","rawHeaders":["Date","Mon, 05 Dec 2016 06:24:54 GMT","Server","Server","X-Frame-Options","SAMEORIGIN","Content-Security-Policy","frame-ancestors 'self' imdb.com *.imdb.com *.media-imdb.com withoutabox.com *.withoutabox.com amazon.com *.amazon.com amazon.co.uk *.amazon.co.uk amazon.de *.amazon.de translate.google.com images.google.com www.google.com www.google.co.uk search.aol.com bing.com www.bing.com","Content-Type","text/html;charset=UTF-8","Content-Language","en-US","Content-Encoding","gzip","Vary","Accept-Encoding,User-Agent","Set-Cookie","uu=BCYjArLuecUKOVtpjnLjgcCGO-GPg3CCFlcm5YGeK5MB4WUFKx-5ER3MIzODGUJW2Grc5Gotg3gX%0D%0AugF_QDsM3auIXqSvud9oa7KXtFS_iH3xessuOymU6lJuo5r5_nVAa_3p4oqk9jrns23hcOCqAoIk%0D%0ApUDiuIpYP7W4QjpoWlfjMymMCCDfk1EuZIsYBU0e0YGqLpWPl7gxxx1lyMndBfj3LfntN7SBi4ug%0D%0AzrAwvZRHEfvdh-s_-6MHPwsQwudxEvsLwcDnA5oEyLPCEYTRtP0a3T3-Z2hxNWb83yTYcAkecmc%0D%0A; Domain=.imdb.com; Expires=Sat, 23-Dec-2084 09:39:02 GMT; Path=/","Set-Cookie","session-id=698-8370266-3510766; Domain=.imdb.com; Expires=Sat, 23-Dec-2084 09:39:02 GMT; Path=/","Set-Cookie","session-id-time=1638599094; Domain=.imdb.com; Expires=Sat, 23-Dec-2084 09:39:02 GMT; Path=/","P3P","policyref=\"http://i.imdb.com/images/p3p.xml\",CP=\"CAO DSP LAW CUR ADM IVAo IVDo CONo OTPo OUR DELi PUBi OTRi BUS PHY ONL UNI PUR FIN COM NAV INT DEM CNT STA HEA PRE LOC GOV OTC \"","Transfer-Encoding","chunked","Age","528"],"url":"http://www.imdb.com/title/tt1375666/","status":200,"statusText":"OK","varyHeaders":[["Accept-Encoding",null],["User-Agent",null]]},"ttl":null,"stored":1480969620968}