{"item":{"body":"<!DOCTYPE html>
<!--[if (gt IE 9)|!(IE)]> <!--> <html lang="en" class="no-js section-campaign-stops format-medium tone-opinion app-article page-theme-standard has-comments has-top-ad type-size-small has-large-lede" itemid="http://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html" itemtype="http://schema.org/NewsArticle"  itemscope xmlns:og="http://opengraphprotocol.org/schema/"> <!--<![endif]-->
<!--[if IE 9]> <html lang="en" class="no-js ie9 lt-ie10 section-campaign-stops format-medium tone-opinion app-article page-theme-standard has-comments has-top-ad type-size-small has-large-lede" xmlns:og="http://opengraphprotocol.org/schema/"> <![endif]-->
<!--[if IE 8]> <html lang="en" class="no-js ie8 lt-ie10 lt-ie9 section-campaign-stops format-medium tone-opinion app-article page-theme-standard has-comments has-top-ad type-size-small has-large-lede" xmlns:og="http://opengraphprotocol.org/schema/"> <![endif]-->
<!--[if (lt IE 8)]> <html lang="en" class="no-js lt-ie10 lt-ie9 lt-ie8 section-campaign-stops format-medium tone-opinion app-article page-theme-standard has-comments has-top-ad type-size-small has-large-lede" xmlns:og="http://opengraphprotocol.org/schema/"> <![endif]-->
<head>
    <title>Decoding Donald Trump - The New York Times</title>
        <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1" />
<link rel="shortcut icon" href="https://static01.nyt.com/favicon.ico" />
<link rel="apple-touch-icon-precomposed" sizes="144×144" href="https://static01.nyt.com/images/icons/ios-ipad-144x144.png" />
<link rel="apple-touch-icon-precomposed" sizes="114×114" href="https://static01.nyt.com/images/icons/ios-iphone-114x144.png" />
<link rel="apple-touch-icon-precomposed" href="https://static01.nyt.com/images/icons/ios-default-homescreen-57x57.png" />
<meta name="sourceApp" content="nyt-v5" />
<meta id="applicationName" name="applicationName" content="article" />
<meta id="foundation-build-id" name="foundation-build-id" content="" />
<link rel="canonical" href="http://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html" />
<link rel="alternate" media="only screen and (max-width: 640px)" href="http://mobile.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html" />
<link rel="alternate" media="handheld" href="http://mobile.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html" />
<meta property="al:android:url" content="nytimes://reader/id/100000004471911" />
<meta property="al:android:package" content="com.nytimes.android" />
<meta property="al:android:app_name" content="NYTimes" />
<meta name="twitter:app:name:googleplay" content="NYTimes" />
<meta name="twitter:app:id:googleplay" content="com.nytimes.android" />
<meta name="twitter:app:url:googleplay" content="nytimes://reader/id/100000004471911" />
<link rel="alternate" href="android-app://com.nytimes.android/nytimes/reader/id/100000004471911" />
<meta property="al:iphone:url" content="nytimes://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html" />
<meta property="al:iphone:app_store_id" content="284862083" />
<meta property="al:iphone:app_name" content="NYTimes" />
<meta property="al:ipad:url" content="nytimes://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html" />
<meta property="al:ipad:app_store_id" content="357066198" />
<meta property="al:ipad:app_name" content="NYTimes" />
<meta name="robots" content="noarchive" />
<meta itemprop="alternativeHeadline" name="hdl_p" content="" />
<meta name="channels" content="" />
<meta itemprop="description" name="description" content="What the candidate did — and did not — say after the killings in Orlando reveals a lot about him." />
<meta name="genre" itemprop="genre" content="Op-Ed" />
<meta itemprop="identifier" name="articleid" content="100000004471911" />
<meta itemprop="usageTerms" name="usageTerms" content="http://www.nytimes.com/content/help/rights/sale/terms-of-sale.html" />
<meta itemprop="inLanguage" content="en-US" />
<meta name="hdl" content="Decoding Donald Trump" />
<meta name="col" content="Op-Ed Columnist" id="column-name" />
<meta name="pdate" content="20160615" />
<meta name="utime" content="20160615080901" />
<meta name="ptime" content="20160615032106" />
<meta name="DISPLAYDATE" content="June 15, 2016" />
<meta name="dat" content="June 15, 2016" />
<meta name="lp" content="What the candidate did — and did not — say after the killings in Orlando reveals a lot about him." />
<meta name="msapplication-starturl" content="http://www.nytimes.com" />
<meta name="cre" content="The New York Times" />
<meta name="slug" content="15rosenthal" />
<meta property="article:collection" content="https://static01.nyt.com/services/json/sectionfronts/opinion/index.jsonp" />
<meta name="sectionfront_jsonp" content="https://static01.nyt.com/services/json/sectionfronts/opinion/index.jsonp" />
<meta property="og:url" content="http://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html" />
<meta property="og:type" content="article" />
<meta property="og:title" content="Decoding Donald Trump" />
<meta property="og:description" content="What the candidate did — and did not — say after the killings in Orlando reveals a lot about him." />
<meta property="article:published" itemprop="datePublished" content="2016-06-15T03:21:06-04:00" />
<meta property="article:modified" itemprop="dateModified" content="2016-06-15T08:09:01-04:00" />
<meta property="article:section" itemprop="articleSection" content="Opinion" />
<meta property="article:section-taxonomy-id" itemprop="articleSection" content="AD8090D7-4137-4D71-84C8-70DA3BD89778" />
<meta property="article:section_url" content="http://www.nytimes.com/pages/opinion/index.html" />
<meta property="article:top-level-section" content="opinion" />
<meta property="fb:app_id" content="9869919170" />
<meta name="twitter:site" value="@nytimes" />
<meta property="twitter:url" content="http://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html" />
<meta property="twitter:title" content="Decoding Donald Trump" />
<meta property="twitter:description" content="What the candidate did — and did not — say after the killings in Orlando reveals a lot about him." />
<meta name="author" content="Andrew Rosenthal" />
<meta name="tone" content="opinion" id="article-tone" />
<meta name="byl" content="By ANDREW ROSENTHAL" />
<meta name="PT" content="article" />
<meta name="CG" content="opinion" />
<meta name="SCG" content="campaign-stops" />
<meta name="PST" content="Op-Ed" />
<meta name="tom" content="Op-Ed" />
<meta name="edt" content="The New York Times on the Web" />
<meta property="og:image" content="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-facebookJumbo.jpg" />
<meta property="twitter:image:alt" content="Donald Trump as seen through a television camera eyepiece, at an event Monday." />
<meta property="twitter:image" content="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-videoSixteenByNineJumbo1600.jpg" />
<meta name="twitter:card" value="summary_large_image" />
<meta property="article:author" content="http://www.nytimes.com/by/andrew-rosenthal" />
<meta name="twitter:creator" value="andyrNYT" />
<meta property="article:tag" content="Orlando, Fla, Shooting (2016)" />
<meta name="des" content="Orlando, Fla, Shooting (2016)" />
<meta property="article:tag" content="Trump, Donald J" />
<meta name="per" content="Trump, Donald J" />
<meta property="article:tag" content="Clinton, Hillary Rodham" />
<meta name="per" content="Clinton, Hillary Rodham" />
<meta property="article:tag" content="Muslims and Islam" />
<meta name="des" content="Muslims and Islam" />
<meta property="article:tag" content="Discrimination" />
<meta name="des" content="Discrimination" />
<meta property="article:tag" content="Homosexuality and Bisexuality" />
<meta name="des" content="Homosexuality and Bisexuality" />
<meta property="article:tag" content="Gun Control" />
<meta name="des" content="Gun Control" />
<meta name="keywords" content="Orlando  Fla  Shooting (2016),Trump  Donald J,Clinton  Hillary Rodham,Muslims and Islam,Discrimination,Homosexuality and Bisexuality,Gun Control" />
<meta name="news_keywords" content="Orlando Shooting,Donald Trump,Hillary Clinton,Islam,Discrimination,Gay and Lesbian LGBT,Gun Control" />
<meta property="ad_sensitivity" content="tragedy" />
<meta name="thumbnail_150" content="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-thumbLarge.jpg" />
<meta name="thumbnail_150_height" content="150" />
<meta name="thumbnail_150_width" content="150" />
<meta itemprop="thumbnailUrl" name="thumbnail" content="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-thumbStandard.jpg" />
<meta name="thumbnail_height" content="75" />
<meta name="thumbnail_width" content="75" />
<meta name="video:playerId" content="2640832222001" />
<meta name="video:noShareToolsPlayerId" content="3692909326001" />
<meta name="video:publisherId" content="1749339200" />
<meta name="video:publisherReadToken" content="cE97ArV7TzqBzkmeRVVhJ8O6GWME2iG_bRvjBTlNb4o." />
<meta name="nyt-collection:display-name" content="Orlando Shooting" />
<meta name="nyt-collection:identifier" content="2016-orlando-shooting" />
<meta name="nyt-collection:url" content="http://www.nytimes.com/news-event/2016-orlando-shooting" />
<meta name="nyt-collection:uri" content="/news-event/2016-orlando-shooting" />
<meta name="nyt-collection:tone" content="news" />
<meta name="nyt-collection:tagline" content="Complete coverage of the shootings at a gay nightclub in Orlando, Fla., the worst mass shooting in U.S. history." />
<meta name="nyt-collection:type" content="news-event" />
<meta name="CN" content="2016-orlando-shooting" />
<meta name="CT" content="news-event" />
<meta name="dfp-ad-unit-path" content="opinion/campaignstops" />
<meta name="dfp-amazon-enabled" content="false" />
<link rel="alternate" type="application/json+oembed" href="https://www.nytimes.com/svc/oembed/json/?url=http%3A%2F%2Fwww.nytimes.com%2F2016%2F06%2F15%2Fopinion%2Fcampaign-stops%2Fdecoding-donald-trump.html" title="Decoding Donald Trump" />
    
                <!--[if (gt IE 9)|!(IE)]> <!-->
        <link rel="stylesheet" type="text/css" media="screen" href="https://a1.nyt.com/assets/article/20161202-121344/css/article/story/styles.css" />
    <!--<![endif]-->
    <!--[if lte IE 9]>
        <link rel="stylesheet" type="text/css" media="screen" href="https://a1.nyt.com/assets/article/20161202-121344/css/article/story/styles-ie.css" />
    <![endif]-->
<link rel="stylesheet" type="text/css" media="print" href="https://a1.nyt.com/assets/article/20161202-121344/css/article/story/styles-print.css" />
                <!--  begin abra  -->
<script>var NYTD=NYTD||{};NYTD.Abra=function(t){"use strict";function n(t){var n=u[t];return n&&n[1]||null}function e(t,n){if(t){var e,o,r=n[0],u=n[1],a=0,c=0;if(1!==u.length||4294967296!==u[0])for(e=i(t+" "+r)>>>0,a=0,c=0;o=u[a++];)if(e<(c+=o[0]))return o}}function o(n,e,o,i){f+="subject="+n+"&test="+encodeURIComponent(e)+"&variant="+encodeURIComponent(o||0)+"&url="+encodeURIComponent(t.location.href)+"&instant=1&skipAugment=true\n",i&&s.push(i),c||(c=t.setTimeout(r,0))}function r(){var n=new t.XMLHttpRequest,e=s;n.withCredentials=!0,n.open("POST",a),n.onreadystatechange=function(){var t,o;if(4==n.readyState)for(t=200==n.status?null:new Error(n.statusText);o=e.shift();)o(t)},n.send(f),f="",s=[],c=null}function i(t){for(var n,e,o,r,i,u,a,c=0,f=0,s=[],l=[n=1732584193,e=4023233417,~n,~e,3285377520],h=[],p=t.length;f<=p;)h[f>>2]|=(f<p?t.charCodeAt(f):128)<<8*(3-f++%4);for(h[a=p+8>>2|15]=p<<3;c<=a;c+=16){for(n=l,f=0;f<80;n=[0|[(u=((t=n[0])<<5|t>>>27)+n[4]+(s[f]=f<16?~~h[c+f]:u<<1|u>>>31)+1518500249)+((e=n[1])&(o=n[2])|~e&(r=n[3])),i=u+(e^o^r)+341275144,u+(e&o|e&r|o&r)+882459459,i+1535694389][0|f++/20],t,e<<30|e>>>2,o,r])u=s[f-3]^s[f-8]^s[f-14]^s[f-16];for(f=5;f;)l[--f]=l[f]+n[f]|0}return l[0]}var u,a,c,f="",s=[];return n.init=function(n,r){var i,c,f,s,l,h=[],p=(t.document.cookie.match(/(^|;) *nyt-a=([^;]*)/)||[])[2],d=(t.document.cookie.match(/(^|;) *ab7=([^;]*)/)||[])[2];if(u)throw new Error("can't init twice");if(a=r,u={},d)for(d=decodeURIComponent(d).split("&"),i=0;i<d.length;i++)l=d[i].split("="),u[l[0]]=[,l[1]],l[1]&&h.push(l[0]+"="+l[1]);for(i=0;i<n.length;i++)f=n[i],c=f[0],c in u||(s=e(p,f)||[],u[c]=s,s[1]&&h.push(c.replace(/[^\w-]/g)+"="+(""+s[1]).replace(/[^\w-]/g)),s[2]&&o("ab-alloc",c,s[1]));h.length&&t.document.documentElement.setAttribute("data-nyt-ab",h.join(" "))},n.reportExposure=function(n,e){var r=u[n];r&&r[2]?o("ab-expose",n,r[0],e):e&&t.setTimeout(function(){e(null)},0)},n}(this);</script>
<script>NYTD.Abra.init([["www-story-reader-satisfaction",[[21474837,"Control",1],[21474836,"VariantA",1],[4252017623,null,0]]],["www-signup-favor-test",[[2147483648,"0",1],[2147483648,"1",1]]],["EC_SampleTest",[[2147483648,"variantA",0],[2147483648,"variantB",0]]],["EC_DigiAbandonmentTest",[[2147483648,"control",1],[2147483648,"sendAbandonmentEmail",1]]]], '//et.nytimes.com/')</script>
<!--  end abra  -->
                <script id="page-config-data" type="text/json">
{"pageconfig":{"ledeMediaSize":"large","keywords":["Op-Ed Columnist","andrew-rosenthal","article-medium","has-embedded-interactive"],"collections":{"columns":["andrewrosenthal"],"sections":["theopinionpages","politics","campaignstops"],"newsevents":["orlandoshooting"]}}}</script>
<script id="display_overrides">
            []    </script>

			<!-- Media.net Initialization Script -->
<!--NY times Desktop-->
<script type="text/javascript">
    var PREBID_TIMEOUT = 300;
    var googletag = googletag || {};
    googletag.cmd = googletag.cmd || [];
    (function () {
        window.advBidxc = window.advBidxc || {};
        window.advBidxc.renderAd = function () {};
        window.advBidxc.startTime = new Date().getTime();
        window.advBidxc.customerId = "8CU2553YN"; //Media.net Customer ID
        function loadScript(tagSrc) {
            if (tagSrc.substr(0, 4) !== 'http') {
                var isSSL = 'https:' == document.location.protocol;
                tagSrc = (isSSL ? 'https:' : '') + tagSrc;
            }
            var scriptTag = document.createElement('script'),
                placeTag = document.getElementsByTagName("script")[0];
            scriptTag.type = 'text/javascript';
            scriptTag.async = true;
            scriptTag.src = tagSrc;
            placeTag.parentNode.insertBefore(scriptTag, placeTag);
        }

        function loadGPT() {
            if (!window.advBidxc.isAdServerLoaded) {
                loadScript('//www.googletagservices.com/tag/js/gpt.js');
                window.advBidxc.isAdServerLoaded = true;
            }
        }

        window.advBidxc.loadGPT = setTimeout(loadGPT, PREBID_TIMEOUT);

        var isSSL = 'https:' == document.location.protocol;
        var mnSrc = (isSSL ? 'https:' : 'http:') + '//contextual.media.net/bidexchange.js?cid=' + window.advBidxc.customerId + (isSSL ? '&https=1' : '');
        document.write('<scr' + 'ipt type="text/javascript" src="' + mnSrc + '"></scr' + 'ipt>');
    })();
</script>

    <!-- A9 Initialization Script -->
    <script type="text/javascript">
        var amznads = amznads || {};
        amznads.asyncParams = {
            'id': '3030',
            'callbackFn': function() {
                try {
                    amznads.setTargetingForGPTAsync('amznslots');
                } catch (e) { }
            },
            'timeout': 1000
        };

        (function() {
            var a, s = document.getElementsByTagName("script")[0];
            a = document.createElement("script");
            a.type = "text/javascript";
            a.async = true;
            a.src = "https://c.amazon-adsystem.com/aax2/amzn_ads.js";
            s.parentNode.insertBefore(a, s);
        })();
    </script>
	<script type="text/json" id="trending-link-json">
	</script>

<!--esi
<script id="user-info-data" type="application/json">
<esi:include src="/svc/web-products/userinfo-v3.json" />
</script>
-->
<script id="magnum-feature-flags" type="application/json">["limitFabrikSave","moreFollowSuggestions","unfollowComments","scoopTool","videoVHSCover","videoVHSShareTools","videoVHSLive","videoVHSNewControls","videoVHSEmbeddedOnly","allTheEmphases","freeTrial","dedupeWhatsNext","trendingPageLinks","sprinklePaidPost","headerBidder","largeLedeXXL","standardizeWhatsNextCollection","onlyLayoutA","simple","simpleExtendedByline","collectionsWhatsNext","shareToolsUnderHeadline","mobileMediaViewer","storyPrint","podcastInLede","MovieTickets","requestTragedyAd","MoreInSubsectionFix","seriesIssueMarginalia","serverSideCollectionUrls","multipleBylines","minimalAds","adDisclaimer","inlineAdStyles","fabrikWebsocketsOnly","storyFlexFrames","translationLinks","phaseOneAds","papihttps","verticalFullBleed","updateRestaurantReservations","flexAdsPhase2","flexAdsonSectionBug","newsletterInlineModule","PersonalizationApiUpdate","a9HeaderEnabled","removeInternationalEdition","headlineBalancer","clientSideABRA","newsletterTitleTracking","surveyInterstitial","flexExclusivity","removeFBMessengerPromo","paidpostSprinklingFix","abraOverrideVersion","headlineBalancerEverywhere","signupFavor"]</script>
<script>
var require = {
    baseUrl: 'https://a1.nyt.com/assets/',
    waitSeconds: 20,
    paths: {
        'foundation': 'article/20161202-121344/js/foundation',
        'shared': 'article/20161202-121344/js/shared',
        'article': 'article/20161202-121344/js/article',
        'application': 'article/20161202-121344/js/article/story',
        'videoFactory': 'https://static01.nyt.com/js2/build/video/2.0/videofactoryrequire',
        'videoPlaylist': 'https://static01.nyt.com/js2/build/video/players/extended/2.0/appRequire',
        'auth/mtr': 'https://static01.nyt.com/js/mtr',
        'auth/growl': 'https://static01.nyt.com/js/auth/growl/default',
        'vhs': 'https://static01.nyt.com/video/vhs/build/vhs-2.x.min'
    },
    map: {
        '*': {
            'story/main': 'article/story/main'
        }
    }
};
</script>
<!--[if (gte IE 9)|!(IE)]> <!-->
<script data-main="foundation/main" src="https://a1.nyt.com/assets/article/20161202-121344/js/foundation/lib/framework.js"></script>
<!--<![endif]-->
<!--[if lt IE 9]>
<script>
    require.map['*']['foundation/main'] = 'foundation/legacy_main';
</script>
<script data-main="foundation/legacy_main" src="https://a1.nyt.com/assets/article/20161202-121344/js/foundation/lib/framework.js"></script>
<![endif]-->
    <script>
    require(['foundation/main'], function () {
        require(['auth/mtr', 'auth/growl']);
    });
    </script>
</head>

<body>
    
    <style>
    .lt-ie10 .messenger.suggestions {
        display: block !important;
        height: 50px;
    }

    .lt-ie10 .messenger.suggestions .message-bed {
        background-color: #f8e9d2;
        border-bottom: 1px solid #ccc;
    }

    .lt-ie10 .messenger.suggestions .message-container {
        padding: 11px 18px 11px 30px;
    }

    .lt-ie10 .messenger.suggestions .action-link {
        font-family: "nyt-franklin", arial, helvetica, sans-serif;
        font-size: 10px;
        font-weight: bold;
        color: #a81817;
        text-transform: uppercase;
    }

    .lt-ie10 .messenger.suggestions .alert-icon {
        background: url('https://static01.nyt.com/images/icons/icon-alert-12x12-a81817.png') no-repeat;
        width: 12px;
        height: 12px;
        display: inline-block;
        margin-top: -2px;
        float: none;
    }

    .lt-ie10 .masthead,
    .lt-ie10 .navigation,
    .lt-ie10 .comments-panel {
        margin-top: 50px !important;
    }

    .lt-ie10 .ribbon {
        margin-top: 97px !important;
    }
</style>
<div id="suggestions" class="suggestions messenger nocontent robots-nocontent" style="display:none;">
    <div class="message-bed">
        <div class="message-container last-message-container">
            <div class="message">
                <span class="message-content">
                    <i class="icon alert-icon"></i><span class="message-title">NYTimes.com no longer supports Internet Explorer 9 or earlier. Please upgrade your browser.</span>
                    <a href="http://www.nytimes.com/content/help/site/ie9-support.html" class="action-link">LEARN MORE »</a>
                </span>
            </div>
        </div>
    </div>
</div>

    <div id="shell" class="shell">
    <header id="masthead" class="masthead masthead-theme-standard" role="banner">
    <div class="container">
        <div class="quick-navigation button-group">
            <button class="button sections-button"><i class="icon sprite-icon"></i><span class="button-text">Sections</span></button>
            <button class="button home-button" data-href="http://www.nytimes.com/" title="Go to the home page to see the latest top stories."><i class="icon sprite-icon"></i>
                <span class="button-text">Home</span>
            </button>
            <button class="button search-button"><i class="icon sprite-icon"></i><span class="button-text">Search</span></button>
            <a class="button skip-button skip-to-content visually-hidden focusable" href="#story-header">Skip to content</a>
                        <a class="button skip-button skip-to-navigation visually-hidden focusable" href="#site-index-navigation">Skip to navigation</a>
                                    <a class="button skip-button skip-to-mobile visually-hidden focusable" href="http://mobile.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html">View mobile version</a>
                    </div><!-- close button-group -->
        <div class="branding">
            <h2 class="branding-heading">
                <a id="branding-heading-link" href="http://www.nytimes.com/">
                    <span class="visually-hidden">The New York Times</span>
                </a>
            </h2>
            <script>window.magnum.writeLogo('small', 'https://a1.nyt.com/assets/article/20161202-121344/images/foundation/logos/', 'opinion', 'masthead-theme-standard', 'standard', 'branding-heading-link', 'article');</script>
        </div><!-- close branding -->
                <div class="story-meta">
            <h6 class="kicker"><span class="kicker-label"><a href="http://www.nytimes.com/section/opinion/campaign-stops">The Opinion Pages</a></span><span class="pipe">|</span>Decoding Donald Trump</h6>
        </div><!-- close story-meta -->
        <div class="user-tools">
            <div id="sharetools-masthead" aria-label="tools" role="group" class="sharetools theme-classic  sharetools-masthead  "
data-shares="facebook,twitter,email,show-all,save"
data-url="http://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html"
data-title="Decoding Donald Trump"
data-author="By ANDREW ROSENTHAL"
data-media="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-jumbo.jpg"
data-description="What the candidate did — and did not — say after the killings in Orlando reveals a lot about him."
	data-publish-date="June 15, 2016"
>
<div class="ad sharetools-inline-article-ad hidden nocontent robots-nocontent">
</div>
</div><!-- close shareTools -->
            <button class="button search-button"><i class="icon sprite-icon"></i><span class="button-text">Search</span></button>
            <div id="Bar1" class="ad bar1-ad nocontent robots-nocontent"></div>
            <div class="user-tools-button-group button-group">
                <button class="button subscribe-button hidden" data-href="http://www.nytimes.com/subscriptions/Multiproduct/lp3004.html?campaignId=4XUYF">Subscribe Now</button>
                <button class="button login-button login-modal-trigger hidden">Log In</button>
                <button class="button comments-button  theme-speech-bubble-small" data-skip-to-para-id="">
</button>
                                <button class="button notifications-button hidden"><i class="icon sprite-icon"></i><span class="button-text">0</span></button>
                <button class="button user-settings-button"><i class="icon sprite-icon"></i><span class="button-text">Settings</span></button>
            </div><!-- close user-tools-button-group -->
        </div><!-- close user-tools -->
    </div><!-- close container -->
    <div class="search-flyout-panel flyout-panel">
    <button class="button close-button" type="button"><i class="icon"></i><span class="visually-hidden">Close search</span></button>
    <nav class="search-form-control form-control layout-horizontal">
    <h2 class="visually-hidden">Site Search Navigation</h2>
    <form class="search-form" role="search">
        <div class="control">
            <div class="label-container visually-hidden">
                                <label for="search-input">Search NYTimes.com</label>
                            </div>
            <div class="field-container">
                                <input id="search-input" name="search-input" type="text" class="search-input text" autocomplete="off" placeholder="Search NYTimes.com" />
                
                <button type="button" class="button clear-button" tabindex="-1" aria-describedby="clear-search-input"><i class="icon"></i><span id="clear-search-input" class="visually-hidden">Clear this text input</span></button>
                <div class="auto-suggest" style="display: none;">
                    <ol></ol>
                </div>
                <button class="button submit-button" type="submit">Go</button>
            </div>
        </div><!-- close control -->
    </form>
</nav>


</div><!-- close flyout-panel -->
    <div id="notification-modals" class="notification-modals"></div>
<span class="story-short-url"><a href="http://nyti.ms/1rpdBCg">http://nyti.ms/1rpdBCg</a></span></header>
            <nav id="ribbon" class="ribbon ribbon-start nocontent robots-nocontent" aria-hidden="true">
    <div class="nocontent robots-nocontent">
        <ol class="ribbon-menu">
            <li class="collection ribbon-loader">
                <div class="loader loader-t-logo-32x32-ecedeb-ffffff"><span class="visually-hidden">Loading...</span></div>
            </li>
        </ol>
        <div class="ribbon-navigation-container">
            <nav class="ribbon-navigation next">
                <span class="visually-hidden">See next articles</span>
                <div class="arrow arrow-right">
                    <div class="arrow-conceal"></div>
                </div>
            </nav>
            <nav class="ribbon-navigation previous">
                <span class="visually-hidden">See previous articles</span>
                <div class="arrow arrow-left">
                    <div class="arrow-conceal"></div>
                </div>
            </nav>
        </div>
    </div><!-- close nocontent -->
</nav>
        <nav id="navigation" class="navigation">
    <h2 class="visually-hidden">Site Navigation</h2>
</nav><!-- close navigation -->

<nav id="mobile-navigation" class="mobile-navigation hidden">
    <h2 class="visually-hidden">Site Mobile Navigation</h2>
</nav><!-- close mobile-navigation -->

    <div id="navigation-edge" class="navigation-edge"></div>
    <div id="page" class="page">
        <div id="TopAd" class="ad top-ad nocontent robots-nocontent">
    <div class="accessibility-ad-header visually-hidden">
    <p>Advertisement</p>
</div>
</div>

        <main id="main" class="main" role="main">
        <article id="story" class="story theme-main   ">

            <div id='TragedyAd' class='ad tragedy-ad nocontent robots-nocontent'></div>
    
                        
    <header id="story-header" class="story-header">
                        <div class="freeform"><script>
require(['foundation/main'], function() {
  require([
    'jquery/nyt',
    'underscore/1.6',
    ], function($,_) {
      var sectionName = document.getElementsByName('SCG')[0].getAttribute('content');
      var sectionCode = '';
      var subSection = $('.subsection-kicker-label');
      if (sectionName == 'campaign-stops' || subSection !== '') {
        $('#story-meta .subsection-kicker-label a').html('<i class="icon" style="vertical-align: text-bottom;"><img src="//static01.nyt.com/images/2015/11/03/opinion/campaign-stops-logo/campaign-stops-logo-master180.png" width="24"></i> Campaign Stops');
      }
     var bylineColumn = $('#column-name').attr('content');
     // if (bylineColumn) {
     //   $('.extended-byline .byline').after('<p class="byline-column">' + bylineColumn + '</p>');
     // } 
  });
});
</script></div>

        <div id="story-meta" class="story-meta ">
                            <div class="supported-by hidden nocontent robots-nocontent">
                    <span class="ad-label">Supported by</span>
                    <div id="supported-by-ad" class="supported-by-ad ad"></div>
                </div>
                                        <h3 class="kicker">
                                            <span class="kicker-label"><a href="http://www.nytimes.com/section/opinion/campaign-stops">The Opinion Pages</a></span>                                                    <span class="pipe">|</span><span class="subsection-kicker-label">
                                                            <a href="http://www.nytimes.com/section/opinion/campaign-stops">Campaign Stops</a></span>
                                                                                        </h3>
                        			<h1 itemprop="headline" id="headline" class="headline">Decoding Donald Trump</h1>
	                                                <div id="story-meta-footer" class="story-meta-footer">
                <div class="extended-byline">
    <div class="thumb">
        <a href="http://www.nytimes.com/by/andrew-rosenthal">            <img src="https://static01.nyt.com/images/2016/06/07/opinion/andy-rosenthal/andy-rosenthal-thumbLarge-v2.jpg" title="Andrew Rosenthal" />
        </a>    </div>
    <div class="byline-meta">
                <p class="byline-column has-single-author">
                            <a class="byline-column-link" href="http://www.nytimes.com/column/andrew-rosenthal">Andrew Rosenthal</a>
                        <time class="dateline" datetime="2016-06-15T08:09:01-04:00" itemprop="dateModified" content="2016-06-15T08:09:01-04:00">JUNE 15, 2016</time>
        </p>
    </div><!-- close byline-meta -->
</div><!-- close extended-byline -->
                                                
                                    <div class="story-meta-footer-sharetools">
                        <div id="sharetools-story-meta-footer" aria-label="tools" role="group" class="sharetools theme-classic  sharetools-story-meta-footer  "
data-shares="facebook,twitter,email,show-all,save"
data-url="http://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html"
data-title="Decoding Donald Trump"
data-author="By ANDREW ROSENTHAL"
data-media="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-jumbo.jpg"
data-description="What the candidate did — and did not — say after the killings in Orlando reveals a lot about him."
	data-publish-date="June 15, 2016"
>
<a class="visually-hidden skip-to-text-link" href="#story-continues-1">Continue reading the main story</a>
<span class="sharetools-label visually-hidden">Share This Page</span>
<div class="ad sharetools-inline-article-ad hidden nocontent robots-nocontent">
<a class="visually-hidden skip-to-text-link" href="#story-continues-1">Continue reading the main story</a>
</div>
</div><!-- close shareTools -->
                                                    <button class="button comments-button  theme-speech-bubble" data-skip-to-para-id="">
</button>
                                            </div>
                            </div><!-- close story-meta-footer -->
        </div><!-- close story-meta -->
    </header>

    <script type="text/javascript">
        if (
            window.magnum
            && window.magnum.getFlags().indexOf('headlineBalancer') > 0
            && window.magnum.headlineBalancer
            && window.magnum.headlineBalancer.initialize
            && window.magnum.headlineBalancer.shouldRun()
        ) {
            window.magnum.headlineBalancer.initialize();
        }
    </script>

        
    <div class="story-body-supplemental">
    <div class="story-body story-body-1">
        <figure id="media-100000004472040" class="media photo lede layout-large-horizontal" data-media-action="modal" itemprop="associatedMedia" itemscope itemid="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-master768.jpg" itemtype="http://schema.org/ImageObject" aria-label="media" role="group">
    <span class="visually-hidden">Photo</span>
    <div class="image">
            <img src="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-master768.jpg" alt="" class="media-viewer-candidate" data-mediaviewer-src="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-superJumbo.jpg" data-mediaviewer-caption="Donald Trump as seen through a television camera eyepiece, at an event Monday." data-mediaviewer-credit="Damon Winter/The New York Times"  itemprop="url" itemid="https://static01.nyt.com/images/2016/06/15/opinion/15rosenthalWeb/15rosenthalWeb-master768.jpg"/>
            <meta itemprop="height" content="512" />
            <meta itemprop="width" content="768" />
    </div>
        <figcaption class="caption" itemprop="caption description">
                <span class="caption-text">Donald Trump as seen through a television camera eyepiece, at an event Monday.</span>
                        <span class="credit" itemprop="copyrightHolder">
            <span class="visually-hidden">Credit</span>
            Damon Winter/The New York Times        </span>
            </figcaption>
    </figure>
<p class="story-body-text story-content" data-para-count="64" data-total-count="64">Donald Trump is a stickler for words — other people’s words.</p><p class="story-body-text story-content" data-para-count="367" data-total-count="431">In the world according to Trump, the proof of Hillary Clinton’s inability to deal with terrorism is that she doesn’t use the phrase “radical Islam” enough. That’s nonsense, of course, as President Obama pointed out on Tuesday. “There is no magic to the phrase ‘radical Islam,’” he said. “It’s a political talking point, it’s not a strategy.”</p><p class="story-body-text story-content" data-para-count="290" data-total-count="721">Actually, for Trump it is a strategy — the strategy of the propagandistic smear, a dark art at which he excels. That’s why he figured he could accuse the president of tolerating terrorist attacks — or, he hinted darkly, abetting them. (Because, of course, Obama is secretly a Muslim.)</p><p class="story-body-text story-content" data-para-count="170" data-total-count="891">When he was pressed later about the meaning of his comments, Trump offered a dismissive rhetorical shrug. “I’ll let people figure that out for themselves,” he said.</p><p class="story-body-text story-content" data-para-count="313" data-total-count="1204">It’s incredible, and not a little terrifying, that a candidate for president could be that cavalier, but let’s try to figure out what he means. After all, it matters a great deal what people who want to be president say and do not say, especially at moments like this, after the murder of scores of innocents.</p><p class="story-body-text story-content" data-para-count="325" data-total-count="1529">In speeches on Monday, Trump and Clinton both talked about the specific nature of this killing frenzy, an attack on a gay club in Orlando, Fla. “I want to say this to all the L.G.B.T. people grieving today in Florida and across our country,” Clinton said. “You have millions of allies who will always have your back.”</p><p class="story-body-text story-content" data-para-count="147" data-total-count="1676">Trump, amazingly enough, said something similar: “Our nation stands together in solidarity with the members of Orlando’s L.G.B.T. community.”</p><p class="story-body-text story-content" data-para-count="406" data-total-count="2082">The big difference is that Clinton meant it. She supports marriage equality and laws that ban discrimination against gay, lesbian, bisexual and transgender Americans. Trump has said he would “seriously consider” appointing judges who would reverse rulings in favor of marriage rights. He’s fine with the “L.G.B.T. community” as long as it doesn’t seek the rights that all Americans should have.</p><p class="story-body-text story-content" data-para-count="248" data-total-count="2330">Both Trump and Clinton talked about gun control. Clinton said she supported a ban on firearm sales to people on terrorist watchlists, and added that “weapons of war” like the one wielded by the Florida killer “have no place on our streets.”</p><p class="story-body-text story-content" data-para-count="247" data-total-count="2577">Clinton did not mention the simple fact that if we stopped selling guns today, there would still be too many. The only real solution is to reduce the number of weapons in circulation, but no politician, including Clinton, wants to talk about that.</p><p class="story-body-text story-content" data-para-count="213" data-total-count="2790">Trump merely dished up a version of the usual lie propagated by anti-gun control forces, saying that Clinton wants to revoke the Second Amendment. He intends to do nothing about the scourge of firearms in America.</p><p class="story-body-text story-content" data-para-count="481" data-total-count="3271">Clinton offered a serious discussion of terrorism. Trump offered his usual stew of fear, jingoism and hatred. He repeated his call for “a ban” on Muslim immigration into the United States, expanding it to immigrants from countries that are the locus of terrorism. He called it a “temporary” ban, but that’s a lie. Trump said the ban would be lifted when Muslims and other immigrants can be screened “perfectly,” but that will never happen, and Trump has to know that.</p><div class="newsletter-signup" id="newsletter-promo" data-newsletter-productCode="TY"  data-newsletter-productTitle="Opinion Today">
    <div class="single-newsletter-promo" data-newsletter-productCode="TY">
        <h2 class="headline">Sign Up for the Opinion Today Newsletter</h2>        <p class="summary">Every weekday, get thought-provoking commentary from Op-Ed columnists, the Times editorial board and contributing writers from around the world.</p>    </div>
    <form name="regilite" class="newsletter-form" method="post" autocomplete="off">
                <div class="control input-control">
            <div class="form-errors">
                <p class="error captcha-error hidden">Please verify you're not a robot by clicking the box.</p>
                <p class="error invalid-email-error hidden">Invalid email address. Please re-enter.</p>
                <p class="error buffet-error hidden">You must select a newsletter to subscribe to.</p>
            </div>
            <div class="field-container">
                <input id="email" name="email" class="email-input" type="email" aria-required="true" placeholder="Enter your email address" value="">
                <button id="submit-button" type="submit" class="button submit-button">Sign Up</button>
            </div>
        </div><!-- close control -->
        <div class="control checkbox-control">
            <div class="field-container">
                <input id="special-offers" class="checkbox" type="checkbox" name="special-offers" value="MM" checked="">
            </div>
            <div class="label-container">
                <label class="checkboxLabel" for="special-offers">Receive occasional updates and special offers for The New York Times's products and services.</label>
            </div>
        </div><!-- close control -->
        <div class="g-recaptcha" id="captcha-container" data-sitekey="6LeN0R4TAAAAACwPa5WX2QYE0npOf2-2veTOm2Tp"></div>
    </form>
    <div class="messages">
        <h2 class="success-message hidden">Thank you for subscribing.</h2>
        <h2 class="error submit-error hidden">An error has occurred. Please try again later.</h2>
        <h2 class="subscriber hidden">You are already subscribed to this email.</h2>
        <p class="view-all-link hidden"><a href="http://www.nytimes.com/newsletters" target="_blank">View all New York Times newsletters.</a></p>
    </div><!-- close messages -->
    <ul class="footer">
        <li id="sample-newsletter-link" class="first sample"><a href="https://www.nytimes.com/newsletters/sample/TY" target="_blank">See Sample</a></li>
        <li class="manage-email"><a href="http://www.nytimes.com/mem/email.html" target="_blank">Manage Email Preferences</a></li>
        <li class="logout hidden"><a href="http://www.nytimes.com/logout" target="_blank">Not you?</a></li>
        <li class="privacy"><a href="http://www.nytimes.com/privacy" target="_blank">Privacy Policy</a></li>
    </ul><!-- close footer -->
</div>
<script src="https://www.google.com/recaptcha/api.js" async="async" defer="defer"></script>
<p class="story-body-text story-content" data-para-count="250" data-total-count="3521">Trump never bothers to talk about what he would do about the millions of Muslims already living in the United States. Would he round them up and deport them, as he is proposing to do with the millions of undocumented immigrants living in the country?</p><p class="story-body-text story-content" data-para-count="381" data-total-count="3902">Let’s be absolutely clear. This is not just about bigotry. The mass arrest and forced movement of large populations has been an instrument of genocide throughout history. That is how the Turks committed genocide against Armenians in the early 20th century, how the United States government decimated some Native American tribes and how Stalin killed millions of his own citizens.</p><p class="story-body-text story-content" data-para-count="266" data-total-count="4168">It’s possible that Trump doesn’t think about history. It is clear, though, that he thinks about voters, and that he is counting on them to support him out of fear and bigotry. And he is counting on the leaders of the Republican Party to let him get away with it.</p><footer class="story-footer story-content">
    <div class="story-meta">
                        <div class="story-info"><p><em>Follow The New York Times Opinion section on <a href="https://www.facebook.com/nytopinion">Facebook</a> and <a href="http://twitter.com/NYTOpinion">Twitter</a>, and sign up for the<a href="http://www.nytimes.com/newsletters/opiniontoday/"> Opinion Today newsletter</a>. <br /></em></p></div>

        
        
    </div><!-- close story-meta -->
    </footer>
        <a class="visually-hidden skip-to-text-link" href="#whats-next">Continue reading the main story</a>
    </div><!-- close story-body -->
    <div class="supplemental first" id="supplemental-1">
    </div><!-- close supplemental -->
</div><!-- close story-body-supplemental -->

    
    <div class="reader-satisfaction-survey prompt feedback-prompt story-content hidden">
<a class="feedback-link" href="https://docs.google.com/forms/d/e/1FAIpQLSfLW30xgZodF1qRAg80oWEGuDpW-1HHaL0g42G3SmvB2f4lCw/viewform?entry.8537735=http://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html" target="_blank">
    <p class="feedback-message">We&#8217;re interested in your feedback on this page. <strong>Tell us what you think.</strong></p>
</a>
</div>

    <div id="storage-drawer" class="hidden">
        <div class="supplemental-sub-item" data-attribute-position="0" data-attribute-name="CollectionMarginalia" data-attribute-type="Related" data-attribute-subtype="NewsEvent">
    <aside class="marginalia collection-marginalia collection collection-type-column collection-tone-news collection-section-us collection-theme-latest-headlines nocontent robots-nocontent" role="complementary">
    <div class="nocontent robots-nocontent">
                <header>
                        <div class="collection-meta">
                <div class="collection-headings">
                    <h2 class="collection-marginalia-heading"><a href="http://www.nytimes.com/news-event/2016-orlando-shooting">Orlando Shooting</a></h2>
                    <h3 class="collection-marginalia-subheading">Complete coverage of the shootings at a gay nightclub in Orlando, Fla., the worst mass shooting in U.S. history.</h3>
                </div>
            </div>
            <div class="follow-button-placeholder" data-collection-id="column.2016-orlando-shooting"></div>
        </header>
        <ul>
                        <li><article class="story theme-summary">
    <a class="story-link" href="http://www.nytimes.com/2016/11/09/us/orlando-pulse-nightclub-memorial.html?rref=collection%2Fnewseventcollection%2FOrlando Shooting">
        <h2 class="headline">
            <span class="headline-text">
                                Orlando to Turn Pulse Nightclub Into a Memorial            </span>
            <time class="dateline">NOV 8</time>
        </h2>
    </a>
</article>
</li>
                        <li><article class="story theme-summary">
    <a class="story-link" href="http://www.nytimes.com/2016/11/02/us/politics/orlando-shooting-omar-mateen-noor-salman.html?rref=collection%2Fnewseventcollection%2FOrlando Shooting">
        <h2 class="headline">
            <span class="headline-text">
                                Orlando Gunman’s Wife Breaks Silence: ‘I Was Unaware’            </span>
            <time class="dateline">NOV 1</time>
        </h2>
    </a>
</article>
</li>
                        <li><article class="story theme-summary">
    <a class="story-link" href="http://www.nytimes.com/video/us/100000004740674/911-tapes-from-pulse-orlando-massacre-released.html?rref=collection%2Fnewseventcollection%2FOrlando Shooting">
        <h2 class="headline">
            <span class="headline-text">
                                    <i class="icon sprite-icon video-icon"></i>
                                911 Tapes From Orlando Massacre Released            </span>
            <time class="dateline">OCT 31</time>
        </h2>
    </a>
</article>
</li>
                        <li><article class="story theme-summary">
    <a class="story-link" href="http://www.nytimes.com/2016/11/01/us/911-recordings-gunman-orlando-nightclub-siege.html?rref=collection%2Fnewseventcollection%2FOrlando Shooting">
        <h2 class="headline">
            <span class="headline-text">
                                    <i class="icon sprite-icon video-icon"></i>
                                911 Recordings of Gunman During Orlando Nightclub Siege Are Released            </span>
            <time class="dateline">OCT 31</time>
        </h2>
    </a>
</article>
</li>
                        <li><article class="story theme-summary">
    <a class="story-link" href="http://www.nytimes.com/2016/10/28/us/orlando-shooting-police.html?rref=collection%2Fnewseventcollection%2FOrlando Shooting">
        <h2 class="headline">
            <span class="headline-text">
                                Orlando Officers Grapple With Trauma and Red Tape After Massacre            </span>
            <time class="dateline">OCT 27</time>
        </h2>
    </a>
</article>
</li>
                    </ul>
        <footer>
            <p class="user-action"><a href="http://www.nytimes.com/news-event/2016-orlando-shooting">See More &raquo;</a></p>
        </footer>
    </div><!-- close nocontent -->
</aside>
</div>
<div class="supplemental-sub-item" data-attribute-position="1" data-attribute-name="CombinedMarginalia" data-attribute-type="Related" data-attribute-subtype="">
    <aside class="marginalia related-combined-coverage-marginalia marginalia-item nocontent robots-nocontent" data-marginalia-type="sprinkled" role="complementary" module="Related-CombinedMarginalia">
    <div class="nocontent robots-nocontent">
                <header>
            <h2 class="module-heading">Related Coverage</h2>
        </header>
        <ul>
                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/15/opinion/the-corrosive-politics-that-threaten-lgbt-americans.html">

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/15wed1/15wed1-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
        
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Editorial</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">The Corrosive Politics That Threaten L.G.B.T. Americans</span>
                <time class="dateline">JUNE 15, 2016</time>
                            </h2>
        </div>
    </a>
</article>
</li>
                                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/15/opinion/mr-obamas-powerful-words-about-terrorism.html">

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/15wed2web/15wed2web-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
        
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Editorial</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">Mr. Obama’s Powerful Words About Terrorism</span>
                <time class="dateline">JUNE 14, 2016</time>
                            </h2>
        </div>
    </a>
</article>
</li>
                                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/15/opinion/a-time-to-stand-with-gay-americans.html">

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/15bruniWeb/15bruniWeb-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
        
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Frank Bruni</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">A Time to Stand With Gay Americans</span>
                <time class="dateline">JUNE 14, 2016</time>
                            </h2>
        </div>
    </a>
</article>
</li>
                                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/15/opinion/why-do-terrorists-commit-terrorism.html">

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/15bergenWeb/15bergenWeb-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
        
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Op-Ed Contributor</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">Why Do Terrorists Commit Terrorism?</span>
                <time class="dateline">JUNE 14, 2016</time>
                            </h2>
        </div>
    </a>
</article>
</li>
                                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/14/opinion/i-am-a-gay-man-from-orlando-why-cant-i-donate-blood.html">

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/14lynchWeb/14lynchWeb-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
        
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Op-Ed Contributor</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">I Am a Gay Man From Orlando. Why Can’t I Donate Blood?</span>
                <time class="dateline">JUNE 15, 2016</time>
                            </h2>
        </div>
    </a>
</article>
</li>
                                    </ul>
    </div>
</aside>
</div>
<div class="supplemental-sub-item" data-attribute-position="2" data-attribute-name="PaidPost" data-attribute-type="PaidPost" data-attribute-subtype="">
    <aside id='middle-right-paid-post-container' class='ad middle-right-ad paid-post-ad marginalia-item hidden nocontent robots-nocontent'>
    <h2 class='marginalia-heading'></h2>
    <ul class='story-menu'>
        <li id='MiddleRightPaidPost1' class='story-menu-item ad'></li>
        <li id='MiddleRightPaidPost2' class='story-menu-item ad'></li>
        <li id='MiddleRightPaidPost3' class='story-menu-item ad'></li>
        <li id='MiddleRightPaidPost4' class='story-menu-item ad'></li>
    </ul>
</aside>
</div>
<div class="supplemental-sub-item" data-attribute-position="3" data-attribute-name="Peek" data-attribute-type="Community" data-attribute-subtype="Recent">
    <aside class="marginalia comments-marginalia  selected-comment-marginalia" data-marginalia-type="sprinkled" data-skip-to-para-id="">
</aside>
</div>
<div class="supplemental-sub-item" data-attribute-position="4" data-attribute-name="Peek" data-attribute-type="Community" data-attribute-subtype="Featured">
    <aside class="marginalia comments-marginalia  featured-comment-marginalia" data-marginalia-type="sprinkled" data-skip-to-para-id="">
</aside>
</div>
<div class="supplemental-sub-item" data-attribute-position="5" data-attribute-name="Peek" data-attribute-type="Community" data-attribute-subtype="Prompt">
    <aside class="marginalia comments-marginalia  comment-prompt-marginalia" data-marginalia-type="sprinkled" data-skip-to-para-id="">
</aside>
</div>
    </div>

</article>
<section id="related-combined-coverage" class="related-combined-coverage nocontent robots-nocontent">
    <header class="section-header">
        <h2 class="section-heading">Related Coverage</h2>
    </header>
    <div class="section-body">
        <ol class="story-menu menu">
                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/15/opinion/the-corrosive-politics-that-threaten-lgbt-americans.html">
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Editorial</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">The Corrosive Politics That Threaten L.G.B.T. Americans</span>
                <time class="dateline">JUNE 15, 2016</time>
                            </h2>
        </div>

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/15wed1/15wed1-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
            </a>
</article>
</li>
                                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/15/opinion/mr-obamas-powerful-words-about-terrorism.html">
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Editorial</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">Mr. Obama’s Powerful Words About Terrorism</span>
                <time class="dateline">JUNE 14, 2016</time>
                            </h2>
        </div>

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/15wed2web/15wed2web-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
            </a>
</article>
</li>
                                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/15/opinion/a-time-to-stand-with-gay-americans.html">
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Frank Bruni</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">A Time to Stand With Gay Americans</span>
                <time class="dateline">JUNE 14, 2016</time>
                            </h2>
        </div>

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/15bruniWeb/15bruniWeb-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
            </a>
</article>
</li>
                                    </ol>
                    <ol id="story-menu-additional-set" class="hidden story-menu menu">
                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/15/opinion/why-do-terrorists-commit-terrorism.html">
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Op-Ed Contributor</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">Why Do Terrorists Commit Terrorism?</span>
                <time class="dateline">JUNE 14, 2016</time>
                            </h2>
        </div>

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/15bergenWeb/15bergenWeb-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
            </a>
</article>
</li>
                                                                <li><article class="story theme-summary type-opinion">
    <a class="story-link" href="http://www.nytimes.com/2016/06/14/opinion/i-am-a-gay-man-from-orlando-why-cant-i-donate-blood.html">
        <div class="story-body">
                            <h3 class="kicker">Opinion                         <span class="columnist">Op-Ed Contributor</span>
                    </h3>
                        <h2 class="headline">
                <span class="title">I Am a Gay Man From Orlando. Why Can’t I Donate Blood?</span>
                <time class="dateline">JUNE 15, 2016</time>
                            </h2>
        </div>

                    <div class="thumb">
                <img src="https://static01.nyt.com/images/2016/06/15/opinion/14lynchWeb/14lynchWeb-thumbStandard.jpg" role="presentation" alt="" />
                <div class="media-action-overlay"></div>
            </div>
            </a>
</article>
</li>
                                        </ol>
            <div class="story-menu-options">
                <div class="buttons">
                    <button class="button show-all-button" aria-controls="story-menu-additional-set">Show All</button>
                </div>
            </div><!-- close story-menu-options -->
            </div>
</section>
<aside class="module trending-module hidden nocontent robots-nocontent" data-truncate-enabled="true"></aside><section id="whats-next" class="whats-next nocontent robots-nocontent">
    <h2 class="visually-hidden">What's Next</h2>
    <div class="nocontent robots-nocontent">
        <div class="loader-container">
            <div class="loader loader-t-logo-32x32-ecedeb-ffffff"><span class="visually-hidden">Loading...</span></div>
        </div>
    </div><!-- close nocontent -->
</section>
<div id="TopAd1" class="text-ad bottom-left-ad nocontent robots-nocontent"></div>
<div id="Top5" class="ad top5-ad hidden nocontent robots-nocontent"></div>
                    <div class="search-overlay"></div>
            </main><!-- close main -->
            <section id="site-index" class="site-index">
    <header class="section-header">
        <p class="user-action"><a href="http://www.nytimes.com/">Go to Home Page &raquo;</a></p>
        <h2 class="section-heading">
            <span class="visually-hidden">Site Index</span>
            <a id="site-index-branding-link" href="http://www.nytimes.com/">
                <span class="visually-hidden">The New York Times</span>
            </a>
        </h2>
        <script>window.magnum.writeLogo('small', 'https://a1.nyt.com/assets/article/20161202-121344/images/foundation/logos/', '', '', 'standard', 'site-index-branding-link', '');</script>
    </header>

    <nav id="site-index-navigation" class="site-index-navigation" role="navigation">
        <h2 class="visually-hidden">Site Index Navigation</h2>
        <div class="split-6-layout layout">

                                                                                    
                    <div class="column">
                        <h3 class="menu-heading">News</h3>
                        <ul class="menu">

                                                                                                                                                                                                                                                
                                    <li>
                                        <a href="http://www.nytimes.com/pages/world/index.html">World</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/national/index.html">U.S.</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/politics/index.html">Politics</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/nyregion/index.html">N.Y.</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/business/index.html">Business</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/technology/index.html">Tech</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/section/science">Science</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/health/index.html">Health</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/sports/index.html">Sports</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/education/index.html">Education</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/obituaries/index.html">Obituaries</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/todayspaper/index.html">Today's Paper</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/corrections/index.html">Corrections</a>
                                    </li>

                                                            
                        </ul>
                    </div><!-- close column -->

                                            
                    <div class="column">
                        <h3 class="menu-heading">Opinion</h3>
                        <ul class="menu">

                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/opinion/index.html">Today's Opinion</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/opinion/index.html#columnists">Op-Ed Columnists</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/opinion/index.html#editorials">Editorials</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/opinion/index.html#contributing">Contributing Writers</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/opinion/index.html#op-ed">Op-Ed Contributors</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/opinion/index.html#opinionator">Opinionator</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/opinion/index.html#letters">Letters</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/opinion/index.html#sundayreview">Sunday Review</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/opinion/index.html#takingNote">Taking Note</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/roomfordebate">Room for Debate</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://topics.nytimes.com/top/opinion/thepubliceditor/index.html">Public Editor</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/video/opinion">Video: Opinion</a>
                                    </li>

                                                            
                        </ul>
                    </div><!-- close column -->

                                            
                    <div class="column">
                        <h3 class="menu-heading">Arts</h3>
                        <ul class="menu">

                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/arts/index.html">Today's Arts</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/arts/design/index.html">Art & Design</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/books/index.html">Books</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/arts/dance/index.html">Dance</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/movies/index.html">Movies</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/arts/music/index.html">Music</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/events/">N.Y.C. Events Guide</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/arts/television/index.html">Television</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/theater/index.html">Theater</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/video/arts">Video: Arts</a>
                                    </li>

                                                            
                        </ul>
                    </div><!-- close column -->

                                            
                    <div class="column">
                        <h3 class="menu-heading">Living</h3>
                        <ul class="menu">

                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/automobiles/index.html">Automobiles</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/crosswords/">Crossword</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/dining/index.html">Food</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/education/index.html">Education</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/fashion/index.html">Fashion & Style</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/health/index.html">Health</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/section/jobs">Jobs</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/magazine/index.html">Magazine</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/events/">N.Y.C. Events Guide</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/section/realestate">Real Estate</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/section/t-magazine">T Magazine</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/section/travel">Travel</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/fashion/weddings/index.html">Weddings & Celebrations</a>
                                    </li>

                                                            
                        </ul>
                    </div><!-- close column -->

                                            
                    <div class="column">
                        <h3 class="menu-heading">Listings & More</h3>
                        <ul class="menu">

                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/ref/classifieds/">Classifieds</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/marketing/tools-and-services/">Tools & Services</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/topics/">Times Topics</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://topics.nytimes.com/top/opinion/thepubliceditor/index.html">Public Editor</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/events/">N.Y.C. Events Guide</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/interactive/blogs/directory.html">Blogs</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/pages/multimedia/index.html">Multimedia</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://lens.blogs.nytimes.com/">Photography</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/video">Video</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="https://www.nytimes.com/store/?&t=qry542&utm_source=nytimes&utm_medium=HPB&utm_content=hp_browsetree&utm_campaign=NYT-HP&module=SectionsNav&action=click&region=TopBar&version=BrowseTree&contentCollection=NYT%20Store&contentPlacement=2&pgtype=Homepage">NYT Store</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/times-journeys/?utm_source=nytimes&utm_medium=HPLink&utm_content=hp_browsetree&utm_campaign=NYT-HP">Times Journeys</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/seeallnav">Subscribe</a>
                                    </li>

                                                                                            
                                    <li>
                                        <a href="http://www.nytimes.com/membercenter">Manage My Account</a>
                                    </li>

                                                            
                        </ul>
                    </div><!-- close column -->

                            
            <div class="column last-column">
                
<h3 class="menu-heading">Subscribe</h3>

<ul class="menu primary-menu">
    <li class="menu-label">Subscribe</li>
    <li class="home-delivery">
        <i class="icon sprite-icon"></i>
                    <a href="http://www.nytimes.com/hdleftnav">Home Delivery</a>
            </li>
    <li class="digital-subscriptions">
        <i class="icon sprite-icon"></i>
                    <a href="http://www.nytimes.com/digitalleftnav">Digital Subscriptions</a>
            </li>
    <li class="times-premier">
        <i class="icon sprite-icon"></i>
        <a href="http://www.nytimes.com/tpnav">Times Insider</a>
    </li>
    <li class="nyt-crossword last-item">
        <i class="icon sprite-icon"></i>
        <a id="nyt-crossword" href="http://www.nytimes.com/crosswords/index.html">Crossword</a>
    </li>
</ul>

<ul class="menu secondary-menu">

    <li>
        <a href="http://www.nytimes.com/marketing/newsletters">Email Newsletters</a>
    </li>
    <li>
        <a href="https://myaccount.nytimes.com/mem/tnt.html">Alerts</a>
    </li>
    <li>
                    <a href="http://www.nytimes.com/giftleftnav">Gift Subscriptions</a>
            </li>
    <li>
                    <a href="http://www.nytimes.com/corporateleftnav">Corporate Subscriptions</a>
            </li>
    <li>
                    <a href="http://www.nytimes.com/educationleftnav">Education Rate</a>
            </li>

</ul>
<ul class="menu secondary-menu">
    <li>
        <a href="http://www.nytimes.com/services/mobile/index.html">Mobile Applications</a>
    </li>
    <li>
                    <a href="http://eedition.nytimes.com/cgi-bin/signup.cgi?cc=37FYY">Replica Edition</a>
            </li>
    
</ul>

            </div><!-- close column -->

        </div><!-- close split-6-layout -->

    </nav><!-- close nav -->

</section><!-- close site-index -->

            <footer id="page-footer" class="page-footer" role="contentinfo">
    <nav>
        <h2 class="visually-hidden">Site Information Navigation</h2>
         <ul>
             <li>
                <a href="http://www.nytimes.com/content/help/rights/copyright/copyright-notice.html" itemprop="copyrightNotice">
                    &copy; <span itemprop="copyrightYear">2016</span><span itemprop="copyrightHolder provider sourceOrganization" itemscope itemtype="http://schema.org/Organization" itemid="http://www.nytimes.com"><span itemprop="name"> The New York Times Company</span><meta itemprop="tickerSymbol" content="NYSE NYT"/></span>
                </a>
            </li>
            <li class="visually-hidden"><a href="http://www.nytimes.com">Home</a></li>
            <li class="visually-hidden"><a href="http://query.nytimes.com/search/sitesearch/#/">Search</a></li>
            <li class="visually-hidden">Accessibility concerns? Email us at <a href="mailto:accessibility@nytimes.com">accessibility@nytimes.com</a>. We would love to hear from you.</li>
            <li class="wide-viewport-item"><a href="http://www.nytimes.com/ref/membercenter/help/infoservdirectory.html">Contact Us</a></li>
            <li class="wide-viewport-item"><a href="http://www.nytco.com/careers">Work With Us</a></li>
            <li class="wide-viewport-item"><a href="http://nytmediakit.com/">Advertise</a></li>
            <li class="wide-viewport-item"><a href="http://www.nytimes.com/content/help/rights/privacy/policy/privacy-policy.html#pp">Your Ad Choices</a></li>
            <li><a href="http://www.nytimes.com/privacy">Privacy</a></li>
            <li><a href="http://www.nytimes.com/ref/membercenter/help/agree.html" itemprop="usageTerms">Terms of Service</a></li>
            <li class="wide-viewport-item last-item"><a href="http://www.nytimes.com/content/help/rights/sale/terms-of-sale.html">Terms of Sale</a></li>
         </ul>
    </nav>
    <nav class="last-nav">
        <h2 class="visually-hidden">Site Information Navigation</h2>
        <ul>
            <li><a href="http://spiderbites.nytimes.com">Site Map</a></li>
            <li><a href="http://www.nytimes.com/membercenter/sitehelp.html">Help</a></li>
            <li><a href="https://myaccount.nytimes.com/membercenter/feedback.html">Site Feedback</a></li>
            <li class="wide-viewport-item last-item"><a href="http://www.nytimes.com/subscriptions/Multiproduct/lp5558.html?campaignId=37WXW">Subscriptions</a></li>
        </ul>
    </nav>
</footer>
        </div><!-- close page -->
    </div><!-- close shell -->
    <script>
require(['foundation/main'], function () {
    require(['story/main']);
    require(['jquery/nyt', 'foundation/views/page-manager'], function ($, pageManager) {
        if (window.location.search.indexOf('disable_tagx') > 0) {
            return;
        }
        $(document).ready(function () {
            require(['https://a1.nyt.com/analytics/tagx-simple.min.js'], function () {
                pageManager.trackingFireEventQueue();
            });
        });
    });
});
</script>
<!--esi                                                                                                                    
<esi:include src="/appconfig/https/show-modal.js" />                                                                       
-->

    <div id="Inv1" class="ad inv1-ad hidden"></div>
<div id="Inv2" class="ad inv2-ad hidden"></div>
<div id="Inv3" class="ad inv3-ad hidden"></div>
<div id="ab1" class="ad ab1-ad hidden"></div>
<div id="ab2" class="ad ab2-ad hidden"></div>
<div id="ab3" class="ad ab3-ad hidden"></div>
<div id="prop1" class="ad prop1-ad hidden"></div>
<div id="prop2" class="ad prop2-ad hidden"></div>
<div id="Anchor" class="ad anchor-ad hidden"></div>
<div id="ADX_CLIENTSIDE" class="ad adx-clientside-ad hidden"></div>
</body>
</html>
","rawHeaders":["Server","Apache","Cache-Control","no-cache","X-ESI","1","Content-Type","text/html; charset=utf-8","Cteonnt-Length","87894","X-PageType","article","X-Age","0","Content-Encoding","gzip","X-Origin-Time","2016-12-05 02:26:35 EDT","Content-Length","18952","Accept-Ranges","bytes","Date","Mon, 05 Dec 2016 06:26:35 GMT","X-Frame-Options","DENY","Set-Cookie","nyt-a=af9fde67d0b4b32dde1e5e86120f077fd464d2109e15771f699efcec0cac7361; Expires=Tue, 05 Dec 2017 06:26:35 GMT; Path=/; Domain=.nytimes.com","Connection","close","X-API-Version","F-5-5","X-Served-By","cache-lax8644-LAX","X-Cache","MISS","X-Cache-Hits","0","X-Timer","S1480919195.027422,VS0,VE470","Vary","Accept-Encoding, req.http.Fastly-SSL","Age","532"],"url":"http://www.nytimes.com/2016/06/15/opinion/campaign-stops/decoding-donald-trump.html?action=click&module=MostEmailed&region=Lists&pgtype=collection&_r=0","status":200,"statusText":"OK","varyHeaders":[["Accept-Encoding",null],["req.http.Fastly-SSL",null]]},"ttl":null,"stored":1480969627996}