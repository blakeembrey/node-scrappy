{"item":{"body":"","rawHeaders":["Cache-Control","max-age=3600","Content-Encoding","gzip","Content-Type","text/html; charset=utf-8","Date","Mon, 05 Dec 2016 06:26:36 GMT","Expires","Mon, 05 Dec 2016 07:26:36 GMT","Last-Modified","Tue, 15 Nov 2016 19:57:49 GMT","Server","nginx","Strict-Transport-Security","max-age=31536000","Vary","Accept-Encoding","X-Frame-Options","DENY","Content-Length","10849","Connection","Close","Age","532"],"url":"https://segment.com/blog/the-segment-aws-stack/","status":200,"statusText":"OK","varyHeaders":[["Accept-Encoding",null]]},"ttl":null,"stored":1480969628067}